

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Apr 02 02:23:05 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009E                     	;# 
   142     009F                     	;# 
   143     0105                     	;# 
   144     0107                     	;# 
   145     0108                     	;# 
   146     0109                     	;# 
   147     010C                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010F                     	;# 
   152     0185                     	;# 
   153     0187                     	;# 
   154     0188                     	;# 
   155     0189                     	;# 
   156     018C                     	;# 
   157     018D                     	;# 
   158     0000                     	;# 
   159     0001                     	;# 
   160     0002                     	;# 
   161     0003                     	;# 
   162     0004                     	;# 
   163     0005                     	;# 
   164     0006                     	;# 
   165     0007                     	;# 
   166     0008                     	;# 
   167     0009                     	;# 
   168     000A                     	;# 
   169     000B                     	;# 
   170     000C                     	;# 
   171     000D                     	;# 
   172     000E                     	;# 
   173     000E                     	;# 
   174     000F                     	;# 
   175     0010                     	;# 
   176     0011                     	;# 
   177     0012                     	;# 
   178     0013                     	;# 
   179     0014                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001B                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001D                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     0081                     	;# 
   194     0085                     	;# 
   195     0086                     	;# 
   196     0087                     	;# 
   197     0088                     	;# 
   198     0089                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     008F                     	;# 
   203     0090                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0094                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     0105                     	;# 
   222     0107                     	;# 
   223     0108                     	;# 
   224     0109                     	;# 
   225     010C                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     0185                     	;# 
   231     0187                     	;# 
   232     0188                     	;# 
   233     0189                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0000                     	;# 
   315     0001                     	;# 
   316     0002                     	;# 
   317     0003                     	;# 
   318     0004                     	;# 
   319     0005                     	;# 
   320     0006                     	;# 
   321     0007                     	;# 
   322     0008                     	;# 
   323     0009                     	;# 
   324     000A                     	;# 
   325     000B                     	;# 
   326     000C                     	;# 
   327     000D                     	;# 
   328     000E                     	;# 
   329     000E                     	;# 
   330     000F                     	;# 
   331     0010                     	;# 
   332     0011                     	;# 
   333     0012                     	;# 
   334     0013                     	;# 
   335     0014                     	;# 
   336     0015                     	;# 
   337     0015                     	;# 
   338     0016                     	;# 
   339     0017                     	;# 
   340     0018                     	;# 
   341     0019                     	;# 
   342     001A                     	;# 
   343     001B                     	;# 
   344     001B                     	;# 
   345     001C                     	;# 
   346     001D                     	;# 
   347     001E                     	;# 
   348     001F                     	;# 
   349     0081                     	;# 
   350     0085                     	;# 
   351     0086                     	;# 
   352     0087                     	;# 
   353     0088                     	;# 
   354     0089                     	;# 
   355     008C                     	;# 
   356     008D                     	;# 
   357     008E                     	;# 
   358     008F                     	;# 
   359     0090                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0094                     	;# 
   366     0095                     	;# 
   367     0096                     	;# 
   368     0097                     	;# 
   369     0098                     	;# 
   370     0099                     	;# 
   371     009A                     	;# 
   372     009B                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     0105                     	;# 
   378     0107                     	;# 
   379     0108                     	;# 
   380     0109                     	;# 
   381     010C                     	;# 
   382     010C                     	;# 
   383     010D                     	;# 
   384     010E                     	;# 
   385     010F                     	;# 
   386     0185                     	;# 
   387     0187                     	;# 
   388     0188                     	;# 
   389     0189                     	;# 
   390     018C                     	;# 
   391     018D                     	;# 
   392     0000                     	;# 
   393     0001                     	;# 
   394     0002                     	;# 
   395     0003                     	;# 
   396     0004                     	;# 
   397     0005                     	;# 
   398     0006                     	;# 
   399     0007                     	;# 
   400     0008                     	;# 
   401     0009                     	;# 
   402     000A                     	;# 
   403     000B                     	;# 
   404     000C                     	;# 
   405     000D                     	;# 
   406     000E                     	;# 
   407     000E                     	;# 
   408     000F                     	;# 
   409     0010                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0014                     	;# 
   414     0015                     	;# 
   415     0015                     	;# 
   416     0016                     	;# 
   417     0017                     	;# 
   418     0018                     	;# 
   419     0019                     	;# 
   420     001A                     	;# 
   421     001B                     	;# 
   422     001B                     	;# 
   423     001C                     	;# 
   424     001D                     	;# 
   425     001E                     	;# 
   426     001F                     	;# 
   427     0081                     	;# 
   428     0085                     	;# 
   429     0086                     	;# 
   430     0087                     	;# 
   431     0088                     	;# 
   432     0089                     	;# 
   433     008C                     	;# 
   434     008D                     	;# 
   435     008E                     	;# 
   436     008F                     	;# 
   437     0090                     	;# 
   438     0091                     	;# 
   439     0092                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0095                     	;# 
   445     0096                     	;# 
   446     0097                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009A                     	;# 
   450     009B                     	;# 
   451     009C                     	;# 
   452     009D                     	;# 
   453     009E                     	;# 
   454     009F                     	;# 
   455     0105                     	;# 
   456     0107                     	;# 
   457     0108                     	;# 
   458     0109                     	;# 
   459     010C                     	;# 
   460     010C                     	;# 
   461     010D                     	;# 
   462     010E                     	;# 
   463     010F                     	;# 
   464     0185                     	;# 
   465     0187                     	;# 
   466     0188                     	;# 
   467     0189                     	;# 
   468     018C                     	;# 
   469     018D                     	;# 
   470     0000                     	;# 
   471     0001                     	;# 
   472     0002                     	;# 
   473     0003                     	;# 
   474     0004                     	;# 
   475     0005                     	;# 
   476     0006                     	;# 
   477     0007                     	;# 
   478     0008                     	;# 
   479     0009                     	;# 
   480     000A                     	;# 
   481     000B                     	;# 
   482     000C                     	;# 
   483     000D                     	;# 
   484     000E                     	;# 
   485     000E                     	;# 
   486     000F                     	;# 
   487     0010                     	;# 
   488     0011                     	;# 
   489     0012                     	;# 
   490     0013                     	;# 
   491     0014                     	;# 
   492     0015                     	;# 
   493     0015                     	;# 
   494     0016                     	;# 
   495     0017                     	;# 
   496     0018                     	;# 
   497     0019                     	;# 
   498     001A                     	;# 
   499     001B                     	;# 
   500     001B                     	;# 
   501     001C                     	;# 
   502     001D                     	;# 
   503     001E                     	;# 
   504     001F                     	;# 
   505     0081                     	;# 
   506     0085                     	;# 
   507     0086                     	;# 
   508     0087                     	;# 
   509     0088                     	;# 
   510     0089                     	;# 
   511     008C                     	;# 
   512     008D                     	;# 
   513     008E                     	;# 
   514     008F                     	;# 
   515     0090                     	;# 
   516     0091                     	;# 
   517     0092                     	;# 
   518     0093                     	;# 
   519     0093                     	;# 
   520     0093                     	;# 
   521     0094                     	;# 
   522     0095                     	;# 
   523     0096                     	;# 
   524     0097                     	;# 
   525     0098                     	;# 
   526     0099                     	;# 
   527     009A                     	;# 
   528     009B                     	;# 
   529     009C                     	;# 
   530     009D                     	;# 
   531     009E                     	;# 
   532     009F                     	;# 
   533     0105                     	;# 
   534     0107                     	;# 
   535     0108                     	;# 
   536     0109                     	;# 
   537     010C                     	;# 
   538     010C                     	;# 
   539     010D                     	;# 
   540     010E                     	;# 
   541     010F                     	;# 
   542     0185                     	;# 
   543     0187                     	;# 
   544     0188                     	;# 
   545     0189                     	;# 
   546     018C                     	;# 
   547     018D                     	;# 
   548     0000                     	;# 
   549     0001                     	;# 
   550     0002                     	;# 
   551     0003                     	;# 
   552     0004                     	;# 
   553     0005                     	;# 
   554     0006                     	;# 
   555     0007                     	;# 
   556     0008                     	;# 
   557     0009                     	;# 
   558     000A                     	;# 
   559     000B                     	;# 
   560     000C                     	;# 
   561     000D                     	;# 
   562     000E                     	;# 
   563     000E                     	;# 
   564     000F                     	;# 
   565     0010                     	;# 
   566     0011                     	;# 
   567     0012                     	;# 
   568     0013                     	;# 
   569     0014                     	;# 
   570     0015                     	;# 
   571     0015                     	;# 
   572     0016                     	;# 
   573     0017                     	;# 
   574     0018                     	;# 
   575     0019                     	;# 
   576     001A                     	;# 
   577     001B                     	;# 
   578     001B                     	;# 
   579     001C                     	;# 
   580     001D                     	;# 
   581     001E                     	;# 
   582     001F                     	;# 
   583     0081                     	;# 
   584     0085                     	;# 
   585     0086                     	;# 
   586     0087                     	;# 
   587     0088                     	;# 
   588     0089                     	;# 
   589     008C                     	;# 
   590     008D                     	;# 
   591     008E                     	;# 
   592     008F                     	;# 
   593     0090                     	;# 
   594     0091                     	;# 
   595     0092                     	;# 
   596     0093                     	;# 
   597     0093                     	;# 
   598     0093                     	;# 
   599     0094                     	;# 
   600     0095                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009C                     	;# 
   608     009D                     	;# 
   609     009E                     	;# 
   610     009F                     	;# 
   611     0105                     	;# 
   612     0107                     	;# 
   613     0108                     	;# 
   614     0109                     	;# 
   615     010C                     	;# 
   616     010C                     	;# 
   617     010D                     	;# 
   618     010E                     	;# 
   619     010F                     	;# 
   620     0185                     	;# 
   621     0187                     	;# 
   622     0188                     	;# 
   623     0189                     	;# 
   624     018C                     	;# 
   625     018D                     	;# 
   626     0000                     	;# 
   627     0001                     	;# 
   628     0002                     	;# 
   629     0003                     	;# 
   630     0004                     	;# 
   631     0005                     	;# 
   632     0006                     	;# 
   633     0007                     	;# 
   634     0008                     	;# 
   635     0009                     	;# 
   636     000A                     	;# 
   637     000B                     	;# 
   638     000C                     	;# 
   639     000D                     	;# 
   640     000E                     	;# 
   641     000E                     	;# 
   642     000F                     	;# 
   643     0010                     	;# 
   644     0011                     	;# 
   645     0012                     	;# 
   646     0013                     	;# 
   647     0014                     	;# 
   648     0015                     	;# 
   649     0015                     	;# 
   650     0016                     	;# 
   651     0017                     	;# 
   652     0018                     	;# 
   653     0019                     	;# 
   654     001A                     	;# 
   655     001B                     	;# 
   656     001B                     	;# 
   657     001C                     	;# 
   658     001D                     	;# 
   659     001E                     	;# 
   660     001F                     	;# 
   661     0081                     	;# 
   662     0085                     	;# 
   663     0086                     	;# 
   664     0087                     	;# 
   665     0088                     	;# 
   666     0089                     	;# 
   667     008C                     	;# 
   668     008D                     	;# 
   669     008E                     	;# 
   670     008F                     	;# 
   671     0090                     	;# 
   672     0091                     	;# 
   673     0092                     	;# 
   674     0093                     	;# 
   675     0093                     	;# 
   676     0093                     	;# 
   677     0094                     	;# 
   678     0095                     	;# 
   679     0096                     	;# 
   680     0097                     	;# 
   681     0098                     	;# 
   682     0099                     	;# 
   683     009A                     	;# 
   684     009B                     	;# 
   685     009C                     	;# 
   686     009D                     	;# 
   687     009E                     	;# 
   688     009F                     	;# 
   689     0105                     	;# 
   690     0107                     	;# 
   691     0108                     	;# 
   692     0109                     	;# 
   693     010C                     	;# 
   694     010C                     	;# 
   695     010D                     	;# 
   696     010E                     	;# 
   697     010F                     	;# 
   698     0185                     	;# 
   699     0187                     	;# 
   700     0188                     	;# 
   701     0189                     	;# 
   702     018C                     	;# 
   703     018D                     	;# 
   704                           
   705                           	psect	idataBANK1
   706     10BD                     __pidataBANK1:
   707                           
   708                           ;initializer for scherm_setup@F1479
   709     10BD  3456               	retlw	86
   710     10BE  344F               	retlw	79
   711     10BF  344C               	retlw	76
   712     10C0  343A               	retlw	58
   713     10C1  3430               	retlw	48
   714     10C2  3420               	retlw	32
   715     10C3  3420               	retlw	32
   716     10C4  3420               	retlw	32
   717                           
   718                           ;initializer for scherm_setup@F1477
   719     10C5  3449               	retlw	73
   720     10C6  344E               	retlw	78
   721     10C7  3450               	retlw	80
   722     10C8  3455               	retlw	85
   723     10C9  3454               	retlw	84
   724     10CA  343A               	retlw	58
   725     10CB  3430               	retlw	48
   726     10CC  3420               	retlw	32
   727                           
   728                           ;initializer for _inputChanged
   729     10CD  3401               	retlw	1
   730     10CE  3400               	retlw	0
   731                           
   732                           ;initializer for _miniCount
   733     10CF  3403               	retlw	3
   734     10D0  3400               	retlw	0
   735                           
   736                           ;initializer for _input
   737     10D1  3401               	retlw	1
   738     10D2  3400               	retlw	0
   739                           
   740                           ;initializer for _volumeOud
   741     10D3  3432               	retlw	50
   742     10D4  3400               	retlw	0
   743                           
   744                           ;initializer for _nummerOffset
   745     10D5  3430               	retlw	48
   746                           
   747                           	psect	stringtext
   748     0100                     __pstringtext:
   749     0100                     stringtab:
   750     0100                     __stringtab:
   751                           
   752                           ;	String table - string pointers are 2 bytes each
   753     0100  1BFF               	btfsc	btemp+1,7
   754     0101  290A               	ljmp	stringcode
   755     0102  1383               	bcf	3,7
   756     0103  187F               	btfsc	btemp+1,0
   757     0104  1783               	bsf	3,7
   758     0105  0800               	movf	0,w
   759     0106  0A84               	incf	4,f
   760     0107  1903               	skipnz
   761     0108  0AFF               	incf	btemp+1,f
   762     0109  0008               	return
   763     010A                     stringcode:
   764     010A  087F               	movf	btemp+1,w
   765     010B  397F               	andlw	127
   766     010C  008A               	movwf	10
   767     010D  0804               	movf	4,w
   768     010E  0A84               	incf	4,f
   769     010F  1903               	skipnz
   770     0110  0AFF               	incf	btemp+1,f
   771     0111  0082               	movwf	2
   772     0112                     __stringbase:
   773     0112                     __end_of__stringtab:
   774     0112                     _aurebech:
   775     0112  3408               	retlw	8
   776     0113  341C               	retlw	28
   777     0114  343E               	retlw	62
   778     0115  347F               	retlw	127
   779     0116  3400               	retlw	0
   780     0117  3430               	retlw	48
   781     0118  3435               	retlw	53
   782     0119  3448               	retlw	72
   783     011A  3440               	retlw	64
   784     011B  3430               	retlw	48
   785     011C  3445               	retlw	69
   786     011D  3429               	retlw	41
   787     011E  3411               	retlw	17
   788     011F  3421               	retlw	33
   789     0120  347D               	retlw	125
   790     0121  347D               	retlw	125
   791     0122  3409               	retlw	9
   792     0123  3405               	retlw	5
   793     0124  3405               	retlw	5
   794     0125  3479               	retlw	121
   795     0126  347D               	retlw	125
   796     0127  3409               	retlw	9
   797     0128  3411               	retlw	17
   798     0129  3421               	retlw	33
   799     012A  347D               	retlw	125
   800     012B  3438               	retlw	56
   801     012C  3444               	retlw	68
   802     012D  3444               	retlw	68
   803     012E  3438               	retlw	56
   804     012F  3444               	retlw	68
   805     0130  347E               	retlw	126
   806     0131  3401               	retlw	1
   807     0132  3429               	retlw	41
   808     0133  342E               	retlw	46
   809     0134  3410               	retlw	16
   810     0135  3430               	retlw	48
   811     0136  344A               	retlw	74
   812     0137  344D               	retlw	77
   813     0138  3449               	retlw	73
   814     0139  3430               	retlw	48
   815     013A  3460               	retlw	96
   816     013B  3450               	retlw	80
   817     013C  3448               	retlw	72
   818     013D  3450               	retlw	80
   819     013E  3460               	retlw	96
   820     013F  341E               	retlw	30
   821     0140  3404               	retlw	4
   822     0141  3404               	retlw	4
   823     0142  3438               	retlw	56
   824     0143  3440               	retlw	64
   825     0144  343E               	retlw	62
   826     0145  3449               	retlw	73
   827     0146  3449               	retlw	73
   828     0147  3449               	retlw	73
   829     0148  343E               	retlw	62
   830     0149  3462               	retlw	98
   831     014A  3414               	retlw	20
   832     014B  3408               	retlw	8
   833     014C  3410               	retlw	16
   834     014D  3460               	retlw	96
   835     014E  3440               	retlw	64
   836     014F  343C               	retlw	60
   837     0150  3420               	retlw	32
   838     0151  3420               	retlw	32
   839     0152  341C               	retlw	28
   840     0153  3408               	retlw	8
   841     0154  347C               	retlw	124
   842     0155  3404               	retlw	4
   843     0156  347C               	retlw	124
   844     0157  3402               	retlw	2
   845     0158  3438               	retlw	56
   846     0159  3444               	retlw	68
   847     015A  3444               	retlw	68
   848     015B  343C               	retlw	60
   849     015C  3404               	retlw	4
   850     015D  3441               	retlw	65
   851     015E  3463               	retlw	99
   852     015F  3455               	retlw	85
   853     0160  3449               	retlw	73
   854     0161  3441               	retlw	65
   855     0162  3410               	retlw	16
   856     0163  3408               	retlw	8
   857     0164  3478               	retlw	120
   858     0165  3408               	retlw	8
   859     0166  3404               	retlw	4
   860     0167  3418               	retlw	24
   861     0168  3424               	retlw	36
   862     0169  347E               	retlw	126
   863     016A  3424               	retlw	36
   864     016B  3418               	retlw	24
   865     016C  345E               	retlw	94
   866     016D  3461               	retlw	97
   867     016E  3401               	retlw	1
   868     016F  3461               	retlw	97
   869     0170  345E               	retlw	94
   870     0171  3478               	retlw	120
   871     0172  3414               	retlw	20
   872     0173  3415               	retlw	21
   873     0174  3414               	retlw	20
   874     0175  3478               	retlw	120
   875     0176  3438               	retlw	56
   876     0177  3444               	retlw	68
   877     0178  3445               	retlw	69
   878     0179  343C               	retlw	60
   879     017A  3440               	retlw	64
   880     017B  3478               	retlw	120
   881     017C  3415               	retlw	21
   882     017D  3414               	retlw	20
   883     017E  3415               	retlw	21
   884     017F  3478               	retlw	120
   885     0180  3438               	retlw	56
   886     0181  3445               	retlw	69
   887     0182  3444               	retlw	68
   888     0183  343D               	retlw	61
   889     0184  3440               	retlw	64
   890     0185  343C               	retlw	60
   891     0186  3443               	retlw	67
   892     0187  3442               	retlw	66
   893     0188  3443               	retlw	67
   894     0189  343C               	retlw	60
   895     018A  3438               	retlw	56
   896     018B  3445               	retlw	69
   897     018C  3444               	retlw	68
   898     018D  3445               	retlw	69
   899     018E  3438               	retlw	56
   900     018F  343C               	retlw	60
   901     0190  3441               	retlw	65
   902     0191  3440               	retlw	64
   903     0192  3441               	retlw	65
   904     0193  343C               	retlw	60
   905     0194  3438               	retlw	56
   906     0195  3442               	retlw	66
   907     0196  3440               	retlw	64
   908     0197  3442               	retlw	66
   909     0198  3438               	retlw	56
   910     0199  3408               	retlw	8
   911     019A  3408               	retlw	8
   912     019B  342A               	retlw	42
   913     019C  341C               	retlw	28
   914     019D  3408               	retlw	8
   915     019E  3420               	retlw	32
   916     019F  347E               	retlw	126
   917     01A0  3402               	retlw	2
   918     01A1  3402               	retlw	2
   919     01A2  3402               	retlw	2
   920     01A3  3412               	retlw	18
   921     01A4  3419               	retlw	25
   922     01A5  3415               	retlw	21
   923     01A6  3412               	retlw	18
   924     01A7  3400               	retlw	0
   925     01A8  3448               	retlw	72
   926     01A9  347E               	retlw	126
   927     01AA  3449               	retlw	73
   928     01AB  3441               	retlw	65
   929     01AC  3442               	retlw	66
   930     01AD  3401               	retlw	1
   931     01AE  3412               	retlw	18
   932     01AF  347C               	retlw	124
   933     01B0  3412               	retlw	18
   934     01B1  3401               	retlw	1
   935     01B2  3400               	retlw	0
   936     01B3  3400               	retlw	0
   937     01B4  3400               	retlw	0
   938     01B5  3400               	retlw	0
   939     01B6  3400               	retlw	0
   940     01B7  3408               	retlw	8
   941     01B8  3424               	retlw	36
   942     01B9  3412               	retlw	18
   943     01BA  3408               	retlw	8
   944     01BB  3400               	retlw	0
   945     01BC  3400               	retlw	0
   946     01BD  3404               	retlw	4
   947     01BE  3408               	retlw	8
   948     01BF  3404               	retlw	4
   949     01C0  3400               	retlw	0
   950     01C1  3414               	retlw	20
   951     01C2  3434               	retlw	52
   952     01C3  3436               	retlw	54
   953     01C4  3416               	retlw	22
   954     01C5  3414               	retlw	20
   955     01C6  3407               	retlw	7
   956     01C7  3402               	retlw	2
   957     01C8  3467               	retlw	103
   958     01C9  3412               	retlw	18
   959     01CA  340E               	retlw	14
   960     01CB  3406               	retlw	6
   961     01CC  3436               	retlw	54
   962     01CD  3408               	retlw	8
   963     01CE  3436               	retlw	54
   964     01CF  3430               	retlw	48
   965     01D0  3414               	retlw	20
   966     01D1  3422               	retlw	34
   967     01D2  342A               	retlw	42
   968     01D3  342A               	retlw	42
   969     01D4  343E               	retlw	62
   970     01D5  3400               	retlw	0
   971     01D6  341C               	retlw	28
   972     01D7  3404               	retlw	4
   973     01D8  3400               	retlw	0
   974     01D9  3400               	retlw	0
   975     01DA  3400               	retlw	0
   976     01DB  3408               	retlw	8
   977     01DC  343E               	retlw	62
   978     01DD  3400               	retlw	0
   979     01DE  3400               	retlw	0
   980     01DF  3400               	retlw	0
   981     01E0  3400               	retlw	0
   982     01E1  343E               	retlw	62
   983     01E2  3408               	retlw	8
   984     01E3  3400               	retlw	0
   985     01E4  341C               	retlw	28
   986     01E5  3408               	retlw	8
   987     01E6  343E               	retlw	62
   988     01E7  3408               	retlw	8
   989     01E8  341C               	retlw	28
   990     01E9  343E               	retlw	62
   991     01EA  342A               	retlw	42
   992     01EB  3422               	retlw	34
   993     01EC  343E               	retlw	62
   994     01ED  3400               	retlw	0
   995     01EE  3400               	retlw	0
   996     01EF  3400               	retlw	0
   997     01F0  340E               	retlw	14
   998     01F1  3400               	retlw	0
   999     01F2  3400               	retlw	0
  1000     01F3  3400               	retlw	0
  1001     01F4  3404               	retlw	4
  1002     01F5  3404               	retlw	4
  1003     01F6  3404               	retlw	4
  1004     01F7  3400               	retlw	0
  1005     01F8  3400               	retlw	0
  1006     01F9  3418               	retlw	24
  1007     01FA  3400               	retlw	0
  1008     01FB  3418               	retlw	24
  1009     01FC  3400               	retlw	0
  1010     01FD  3400               	retlw	0
  1011     01FE  3430               	retlw	48
  1012     01FF  3408               	retlw	8
  1013     0200  3406               	retlw	6
  1014     0201  3400               	retlw	0
  1015     0202  343E               	retlw	62
  1016     0203  3422               	retlw	34
  1017     0204  342A               	retlw	42
  1018     0205  3422               	retlw	34
  1019     0206  343E               	retlw	62
  1020     0207  3422               	retlw	34
  1021     0208  3422               	retlw	34
  1022     0209  343E               	retlw	62
  1023     020A  3420               	retlw	32
  1024     020B  3420               	retlw	32
  1025     020C  342A               	retlw	42
  1026     020D  342A               	retlw	42
  1027     020E  342A               	retlw	42
  1028     020F  342A               	retlw	42
  1029     0210  342E               	retlw	46
  1030     0211  342A               	retlw	42
  1031     0212  342A               	retlw	42
  1032     0213  342A               	retlw	42
  1033     0214  3422               	retlw	34
  1034     0215  343E               	retlw	62
  1035     0216  340E               	retlw	14
  1036     0217  3408               	retlw	8
  1037     0218  3408               	retlw	8
  1038     0219  3408               	retlw	8
  1039     021A  343E               	retlw	62
  1040     021B  342E               	retlw	46
  1041     021C  342A               	retlw	42
  1042     021D  342A               	retlw	42
  1043     021E  342A               	retlw	42
  1044     021F  342A               	retlw	42
  1045     0220  343A               	retlw	58
  1046     0221  342A               	retlw	42
  1047     0222  342A               	retlw	42
  1048     0223  342A               	retlw	42
  1049     0224  343A               	retlw	58
  1050     0225  3402               	retlw	2
  1051     0226  3402               	retlw	2
  1052     0227  3402               	retlw	2
  1053     0228  3402               	retlw	2
  1054     0229  343E               	retlw	62
  1055     022A  343E               	retlw	62
  1056     022B  342A               	retlw	42
  1057     022C  342A               	retlw	42
  1058     022D  342A               	retlw	42
  1059     022E  343E               	retlw	62
  1060     022F  342E               	retlw	46
  1061     0230  342A               	retlw	42
  1062     0231  342A               	retlw	42
  1063     0232  342A               	retlw	42
  1064     0233  342E               	retlw	46
  1065     0234  3400               	retlw	0
  1066     0235  3424               	retlw	36
  1067     0236  3424               	retlw	36
  1068     0237  3438               	retlw	56
  1069     0238  3400               	retlw	0
  1070     0239  3400               	retlw	0
  1071     023A  3400               	retlw	0
  1072     023B  347F               	retlw	127
  1073     023C  3400               	retlw	0
  1074     023D  3400               	retlw	0
  1075     023E  3408               	retlw	8
  1076     023F  3408               	retlw	8
  1077     0240  341C               	retlw	28
  1078     0241  3400               	retlw	0
  1079     0242  3400               	retlw	0
  1080     0243  343C               	retlw	60
  1081     0244  3424               	retlw	36
  1082     0245  3400               	retlw	0
  1083     0246  3424               	retlw	36
  1084     0247  343C               	retlw	60
  1085     0248  3400               	retlw	0
  1086     0249  341C               	retlw	28
  1087     024A  3408               	retlw	8
  1088     024B  3408               	retlw	8
  1089     024C  3400               	retlw	0
  1090     024D  3406               	retlw	6
  1091     024E  3402               	retlw	2
  1092     024F  3422               	retlw	34
  1093     0250  341C               	retlw	28
  1094     0251  3400               	retlw	0
  1095     0252  343E               	retlw	62
  1096     0253  3408               	retlw	8
  1097     0254  342A               	retlw	42
  1098     0255  3422               	retlw	34
  1099     0256  343E               	retlw	62
  1100     0257  3436               	retlw	54
  1101     0258  3414               	retlw	20
  1102     0259  3414               	retlw	20
  1103     025A  3414               	retlw	20
  1104     025B  3422               	retlw	34
  1105     025C  3414               	retlw	20
  1106     025D  3422               	retlw	34
  1107     025E  342A               	retlw	42
  1108     025F  3422               	retlw	34
  1109     0260  3414               	retlw	20
  1110     0261  340E               	retlw	14
  1111     0262  3400               	retlw	0
  1112     0263  341C               	retlw	28
  1113     0264  3400               	retlw	0
  1114     0265  3438               	retlw	56
  1115     0266  342A               	retlw	42
  1116     0267  341A               	retlw	26
  1117     0268  340A               	retlw	10
  1118     0269  3406               	retlw	6
  1119     026A  3402               	retlw	2
  1120     026B  341E               	retlw	30
  1121     026C  3420               	retlw	32
  1122     026D  341E               	retlw	30
  1123     026E  3402               	retlw	2
  1124     026F  343E               	retlw	62
  1125     0270  3438               	retlw	56
  1126     0271  3428               	retlw	40
  1127     0272  343E               	retlw	62
  1128     0273  3428               	retlw	40
  1129     0274  3424               	retlw	36
  1130     0275  343E               	retlw	62
  1131     0276  3420               	retlw	32
  1132     0277  3426               	retlw	38
  1133     0278  3412               	retlw	18
  1134     0279  340E               	retlw	14
  1135     027A  3422               	retlw	34
  1136     027B  342A               	retlw	42
  1137     027C  342A               	retlw	42
  1138     027D  342A               	retlw	42
  1139     027E  3422               	retlw	34
  1140     027F  3400               	retlw	0
  1141     0280  3408               	retlw	8
  1142     0281  3404               	retlw	4
  1143     0282  343E               	retlw	62
  1144     0283  3400               	retlw	0
  1145     0284  3428               	retlw	40
  1146     0285  3428               	retlw	40
  1147     0286  3428               	retlw	40
  1148     0287  3424               	retlw	36
  1149     0288  343E               	retlw	62
  1150     0289  3422               	retlw	34
  1151     028A  3422               	retlw	34
  1152     028B  3422               	retlw	34
  1153     028C  3422               	retlw	34
  1154     028D  343E               	retlw	62
  1155     028E  3400               	retlw	0
  1156     028F  3408               	retlw	8
  1157     0290  3410               	retlw	16
  1158     0291  343E               	retlw	62
  1159     0292  3400               	retlw	0
  1160     0293  3438               	retlw	56
  1161     0294  3424               	retlw	36
  1162     0295  3422               	retlw	34
  1163     0296  3422               	retlw	34
  1164     0297  3400               	retlw	0
  1165     0298  341C               	retlw	28
  1166     0299  3422               	retlw	34
  1167     029A  3418               	retlw	24
  1168     029B  3406               	retlw	6
  1169     029C  3438               	retlw	56
  1170     029D  3438               	retlw	56
  1171     029E  3426               	retlw	38
  1172     029F  3422               	retlw	34
  1173     02A0  3426               	retlw	38
  1174     02A1  3438               	retlw	56
  1175     02A2  341C               	retlw	28
  1176     02A3  3422               	retlw	34
  1177     02A4  3426               	retlw	38
  1178     02A5  3420               	retlw	32
  1179     02A6  343E               	retlw	62
  1180     02A7  343E               	retlw	62
  1181     02A8  3422               	retlw	34
  1182     02A9  3422               	retlw	34
  1183     02AA  3402               	retlw	2
  1184     02AB  340E               	retlw	14
  1185     02AC  3422               	retlw	34
  1186     02AD  3412               	retlw	18
  1187     02AE  340A               	retlw	10
  1188     02AF  3406               	retlw	6
  1189     02B0  3402               	retlw	2
  1190     02B1  3412               	retlw	18
  1191     02B2  3424               	retlw	36
  1192     02B3  3408               	retlw	8
  1193     02B4  3410               	retlw	16
  1194     02B5  343E               	retlw	62
  1195     02B6  3408               	retlw	8
  1196     02B7  3412               	retlw	18
  1197     02B8  343E               	retlw	62
  1198     02B9  3410               	retlw	16
  1199     02BA  3408               	retlw	8
  1200     02BB  343E               	retlw	62
  1201     02BC  3420               	retlw	32
  1202     02BD  3428               	retlw	40
  1203     02BE  3424               	retlw	36
  1204     02BF  343E               	retlw	62
  1205     02C0  3402               	retlw	2
  1206     02C1  3404               	retlw	4
  1207     02C2  3438               	retlw	56
  1208     02C3  3404               	retlw	4
  1209     02C4  3402               	retlw	2
  1210     02C5  343E               	retlw	62
  1211     02C6  3422               	retlw	34
  1212     02C7  3422               	retlw	34
  1213     02C8  3422               	retlw	34
  1214     02C9  343E               	retlw	62
  1215     02CA  3430               	retlw	48
  1216     02CB  342C               	retlw	44
  1217     02CC  3422               	retlw	34
  1218     02CD  342C               	retlw	44
  1219     02CE  3430               	retlw	48
  1220     02CF  340E               	retlw	14
  1221     02D0  3412               	retlw	18
  1222     02D1  3426               	retlw	38
  1223     02D2  3410               	retlw	16
  1224     02D3  340E               	retlw	14
  1225     02D4  3430               	retlw	48
  1226     02D5  3424               	retlw	36
  1227     02D6  3424               	retlw	36
  1228     02D7  3424               	retlw	36
  1229     02D8  343E               	retlw	62
  1230     02D9  3400               	retlw	0
  1231     02DA  3414               	retlw	20
  1232     02DB  3477               	retlw	119
  1233     02DC  3400               	retlw	0
  1234     02DD  3400               	retlw	0
  1235     02DE  3400               	retlw	0
  1236     02DF  3406               	retlw	6
  1237     02E0  3408               	retlw	8
  1238     02E1  3430               	retlw	48
  1239     02E2  3400               	retlw	0
  1240     02E3  3400               	retlw	0
  1241     02E4  3400               	retlw	0
  1242     02E5  3477               	retlw	119
  1243     02E6  3414               	retlw	20
  1244     02E7  3400               	retlw	0
  1245     02E8  3400               	retlw	0
  1246     02E9  3408               	retlw	8
  1247     02EA  340C               	retlw	12
  1248     02EB  3408               	retlw	8
  1249     02EC  3400               	retlw	0
  1250     02ED  3400               	retlw	0
  1251     02EE  3420               	retlw	32
  1252     02EF  3420               	retlw	32
  1253     02F0  3420               	retlw	32
  1254     02F1  3400               	retlw	0
  1255     02F2  3400               	retlw	0
  1256     02F3  340C               	retlw	12
  1257     02F4  3414               	retlw	20
  1258     02F5  3400               	retlw	0
  1259     02F6  3400               	retlw	0
  1260     02F7  3400               	retlw	0
  1261     02F8  3434               	retlw	52
  1262     02F9  3410               	retlw	16
  1263     02FA  3410               	retlw	16
  1264     02FB  3424               	retlw	36
  1265     02FC  3418               	retlw	24
  1266     02FD  3424               	retlw	36
  1267     02FE  342C               	retlw	44
  1268     02FF  3424               	retlw	36
  1269     0300  3418               	retlw	24
  1270     0301  341C               	retlw	28
  1271     0302  3400               	retlw	0
  1272     0303  3418               	retlw	24
  1273     0304  3400               	retlw	0
  1274     0305  3438               	retlw	56
  1275     0306  3414               	retlw	20
  1276     0307  3414               	retlw	20
  1277     0308  3434               	retlw	52
  1278     0309  340C               	retlw	12
  1279     030A  3404               	retlw	4
  1280     030B  341C               	retlw	28
  1281     030C  3420               	retlw	32
  1282     030D  341C               	retlw	28
  1283     030E  3404               	retlw	4
  1284     030F  343C               	retlw	60
  1285     0310  3438               	retlw	56
  1286     0311  3428               	retlw	40
  1287     0312  343C               	retlw	60
  1288     0313  3428               	retlw	40
  1289     0314  3428               	retlw	40
  1290     0315  343C               	retlw	60
  1291     0316  3420               	retlw	32
  1292     0317  342C               	retlw	44
  1293     0318  3414               	retlw	20
  1294     0319  340C               	retlw	12
  1295     031A  3424               	retlw	36
  1296     031B  342C               	retlw	44
  1297     031C  342C               	retlw	44
  1298     031D  342C               	retlw	44
  1299     031E  3424               	retlw	36
  1300     031F  3400               	retlw	0
  1301     0320  3408               	retlw	8
  1302     0321  3404               	retlw	4
  1303     0322  343C               	retlw	60
  1304     0323  3400               	retlw	0
  1305     0324  3428               	retlw	40
  1306     0325  3428               	retlw	40
  1307     0326  3428               	retlw	40
  1308     0327  3424               	retlw	36
  1309     0328  343C               	retlw	60
  1310     0329  3400               	retlw	0
  1311     032A  3424               	retlw	36
  1312     032B  3424               	retlw	36
  1313     032C  3424               	retlw	36
  1314     032D  343C               	retlw	60
  1315     032E  3400               	retlw	0
  1316     032F  3410               	retlw	16
  1317     0330  3420               	retlw	32
  1318     0331  343C               	retlw	60
  1319     0332  3400               	retlw	0
  1320     0333  3430               	retlw	48
  1321     0334  3428               	retlw	40
  1322     0335  3424               	retlw	36
  1323     0336  3424               	retlw	36
  1324     0337  3400               	retlw	0
  1325     0338  3418               	retlw	24
  1326     0339  3424               	retlw	36
  1327     033A  3410               	retlw	16
  1328     033B  340C               	retlw	12
  1329     033C  3430               	retlw	48
  1330     033D  3430               	retlw	48
  1331     033E  342C               	retlw	44
  1332     033F  3424               	retlw	36
  1333     0340  342C               	retlw	44
  1334     0341  3430               	retlw	48
  1335     0342  3418               	retlw	24
  1336     0343  3424               	retlw	36
  1337     0344  342C               	retlw	44
  1338     0345  3420               	retlw	32
  1339     0346  343C               	retlw	60
  1340     0347  343C               	retlw	60
  1341     0348  3424               	retlw	36
  1342     0349  3424               	retlw	36
  1343     034A  3404               	retlw	4
  1344     034B  340C               	retlw	12
  1345     034C  3404               	retlw	4
  1346     034D  3424               	retlw	36
  1347     034E  3414               	retlw	20
  1348     034F  340C               	retlw	12
  1349     0350  3404               	retlw	4
  1350     0351  3424               	retlw	36
  1351     0352  3408               	retlw	8
  1352     0353  3410               	retlw	16
  1353     0354  343C               	retlw	60
  1354     0355  3400               	retlw	0
  1355     0356  3410               	retlw	16
  1356     0357  3420               	retlw	32
  1357     0358  343C               	retlw	60
  1358     0359  3420               	retlw	32
  1359     035A  3410               	retlw	16
  1360     035B  343C               	retlw	60
  1361     035C  3420               	retlw	32
  1362     035D  3428               	retlw	40
  1363     035E  3424               	retlw	36
  1364     035F  343C               	retlw	60
  1365     0360  3404               	retlw	4
  1366     0361  3408               	retlw	8
  1367     0362  3430               	retlw	48
  1368     0363  3408               	retlw	8
  1369     0364  3404               	retlw	4
  1370     0365  343C               	retlw	60
  1371     0366  3424               	retlw	36
  1372     0367  3424               	retlw	36
  1373     0368  3424               	retlw	36
  1374     0369  343C               	retlw	60
  1375     036A  3430               	retlw	48
  1376     036B  3428               	retlw	40
  1377     036C  3424               	retlw	36
  1378     036D  3428               	retlw	40
  1379     036E  3430               	retlw	48
  1380     036F  340C               	retlw	12
  1381     0370  3414               	retlw	20
  1382     0371  3420               	retlw	32
  1383     0372  3410               	retlw	16
  1384     0373  340C               	retlw	12
  1385     0374  3420               	retlw	32
  1386     0375  3428               	retlw	40
  1387     0376  3428               	retlw	40
  1388     0377  3428               	retlw	40
  1389     0378  343C               	retlw	60
  1390     0379  3400               	retlw	0
  1391     037A  3414               	retlw	20
  1392     037B  347F               	retlw	127
  1393     037C  3400               	retlw	0
  1394     037D  3400               	retlw	0
  1395     037E  3430               	retlw	48
  1396     037F  3408               	retlw	8
  1397     0380  3407               	retlw	7
  1398     0381  3408               	retlw	8
  1399     0382  3430               	retlw	48
  1400     0383  3400               	retlw	0
  1401     0384  3400               	retlw	0
  1402     0385  347F               	retlw	127
  1403     0386  3414               	retlw	20
  1404     0387  3400               	retlw	0
  1405     0388  3408               	retlw	8
  1406     0389  3408               	retlw	8
  1407     038A  3400               	retlw	0
  1408     038B  3408               	retlw	8
  1409     038C  3408               	retlw	8
  1410     038D  342A               	retlw	42
  1411     038E  3455               	retlw	85
  1412     038F  342A               	retlw	42
  1413     0390  3455               	retlw	85
  1414     0391  342A               	retlw	42
  1415     0392                     __end_of_aurebech:
  1416     0392                     _hebrew:
  1417     0392  3408               	retlw	8
  1418     0393  341C               	retlw	28
  1419     0394  343E               	retlw	62
  1420     0395  347F               	retlw	127
  1421     0396  3400               	retlw	0
  1422     0397  3430               	retlw	48
  1423     0398  3435               	retlw	53
  1424     0399  3448               	retlw	72
  1425     039A  3440               	retlw	64
  1426     039B  3430               	retlw	48
  1427     039C  3445               	retlw	69
  1428     039D  3429               	retlw	41
  1429     039E  3411               	retlw	17
  1430     039F  3421               	retlw	33
  1431     03A0  347D               	retlw	125
  1432     03A1  347D               	retlw	125
  1433     03A2  3409               	retlw	9
  1434     03A3  3405               	retlw	5
  1435     03A4  3405               	retlw	5
  1436     03A5  3479               	retlw	121
  1437     03A6  347D               	retlw	125
  1438     03A7  3409               	retlw	9
  1439     03A8  3411               	retlw	17
  1440     03A9  3421               	retlw	33
  1441     03AA  347D               	retlw	125
  1442     03AB  3438               	retlw	56
  1443     03AC  3444               	retlw	68
  1444     03AD  3444               	retlw	68
  1445     03AE  3438               	retlw	56
  1446     03AF  3444               	retlw	68
  1447     03B0  347E               	retlw	126
  1448     03B1  3401               	retlw	1
  1449     03B2  3429               	retlw	41
  1450     03B3  342E               	retlw	46
  1451     03B4  3410               	retlw	16
  1452     03B5  3430               	retlw	48
  1453     03B6  344A               	retlw	74
  1454     03B7  344D               	retlw	77
  1455     03B8  3449               	retlw	73
  1456     03B9  3430               	retlw	48
  1457     03BA  3460               	retlw	96
  1458     03BB  3450               	retlw	80
  1459     03BC  3448               	retlw	72
  1460     03BD  3450               	retlw	80
  1461     03BE  3460               	retlw	96
  1462     03BF  341E               	retlw	30
  1463     03C0  3404               	retlw	4
  1464     03C1  3404               	retlw	4
  1465     03C2  3438               	retlw	56
  1466     03C3  3440               	retlw	64
  1467     03C4  343E               	retlw	62
  1468     03C5  3449               	retlw	73
  1469     03C6  3449               	retlw	73
  1470     03C7  3449               	retlw	73
  1471     03C8  343E               	retlw	62
  1472     03C9  3462               	retlw	98
  1473     03CA  3414               	retlw	20
  1474     03CB  3408               	retlw	8
  1475     03CC  3410               	retlw	16
  1476     03CD  3460               	retlw	96
  1477     03CE  3440               	retlw	64
  1478     03CF  343C               	retlw	60
  1479     03D0  3420               	retlw	32
  1480     03D1  3420               	retlw	32
  1481     03D2  341C               	retlw	28
  1482     03D3  3408               	retlw	8
  1483     03D4  347C               	retlw	124
  1484     03D5  3404               	retlw	4
  1485     03D6  347C               	retlw	124
  1486     03D7  3402               	retlw	2
  1487     03D8  3438               	retlw	56
  1488     03D9  3444               	retlw	68
  1489     03DA  3444               	retlw	68
  1490     03DB  343C               	retlw	60
  1491     03DC  3404               	retlw	4
  1492     03DD  3441               	retlw	65
  1493     03DE  3463               	retlw	99
  1494     03DF  3455               	retlw	85
  1495     03E0  3449               	retlw	73
  1496     03E1  3441               	retlw	65
  1497     03E2  3410               	retlw	16
  1498     03E3  3408               	retlw	8
  1499     03E4  3478               	retlw	120
  1500     03E5  3408               	retlw	8
  1501     03E6  3404               	retlw	4
  1502     03E7  3418               	retlw	24
  1503     03E8  3424               	retlw	36
  1504     03E9  347E               	retlw	126
  1505     03EA  3424               	retlw	36
  1506     03EB  3418               	retlw	24
  1507     03EC  345E               	retlw	94
  1508     03ED  3461               	retlw	97
  1509     03EE  3401               	retlw	1
  1510     03EF  3461               	retlw	97
  1511     03F0  345E               	retlw	94
  1512     03F1  3478               	retlw	120
  1513     03F2  3414               	retlw	20
  1514     03F3  3415               	retlw	21
  1515     03F4  3414               	retlw	20
  1516     03F5  3478               	retlw	120
  1517     03F6  3438               	retlw	56
  1518     03F7  3444               	retlw	68
  1519     03F8  3445               	retlw	69
  1520     03F9  343C               	retlw	60
  1521     03FA  3440               	retlw	64
  1522     03FB  3478               	retlw	120
  1523     03FC  3415               	retlw	21
  1524     03FD  3414               	retlw	20
  1525     03FE  3415               	retlw	21
  1526     03FF  3478               	retlw	120
  1527     0400  3438               	retlw	56
  1528     0401  3445               	retlw	69
  1529     0402  3444               	retlw	68
  1530     0403  343D               	retlw	61
  1531     0404  3440               	retlw	64
  1532     0405  343C               	retlw	60
  1533     0406  3443               	retlw	67
  1534     0407  3442               	retlw	66
  1535     0408  3443               	retlw	67
  1536     0409  343C               	retlw	60
  1537     040A  3438               	retlw	56
  1538     040B  3445               	retlw	69
  1539     040C  3444               	retlw	68
  1540     040D  3445               	retlw	69
  1541     040E  3438               	retlw	56
  1542     040F  343C               	retlw	60
  1543     0410  3441               	retlw	65
  1544     0411  3440               	retlw	64
  1545     0412  3441               	retlw	65
  1546     0413  343C               	retlw	60
  1547     0414  3438               	retlw	56
  1548     0415  3442               	retlw	66
  1549     0416  3440               	retlw	64
  1550     0417  3442               	retlw	66
  1551     0418  3438               	retlw	56
  1552     0419  3408               	retlw	8
  1553     041A  3408               	retlw	8
  1554     041B  342A               	retlw	42
  1555     041C  341C               	retlw	28
  1556     041D  3408               	retlw	8
  1557     041E  3420               	retlw	32
  1558     041F  347E               	retlw	126
  1559     0420  3402               	retlw	2
  1560     0421  3402               	retlw	2
  1561     0422  3402               	retlw	2
  1562     0423  3412               	retlw	18
  1563     0424  3419               	retlw	25
  1564     0425  3415               	retlw	21
  1565     0426  3412               	retlw	18
  1566     0427  3400               	retlw	0
  1567     0428  3448               	retlw	72
  1568     0429  347E               	retlw	126
  1569     042A  3449               	retlw	73
  1570     042B  3441               	retlw	65
  1571     042C  3442               	retlw	66
  1572     042D  3401               	retlw	1
  1573     042E  3412               	retlw	18
  1574     042F  347C               	retlw	124
  1575     0430  3412               	retlw	18
  1576     0431  3401               	retlw	1
  1577     0432  3400               	retlw	0
  1578     0433  3400               	retlw	0
  1579     0434  3400               	retlw	0
  1580     0435  3400               	retlw	0
  1581     0436  3400               	retlw	0
  1582     0437  3400               	retlw	0
  1583     0438  3400               	retlw	0
  1584     0439  345F               	retlw	95
  1585     043A  3400               	retlw	0
  1586     043B  3400               	retlw	0
  1587     043C  3400               	retlw	0
  1588     043D  3403               	retlw	3
  1589     043E  3400               	retlw	0
  1590     043F  3403               	retlw	3
  1591     0440  3400               	retlw	0
  1592     0441  3414               	retlw	20
  1593     0442  347F               	retlw	127
  1594     0443  3414               	retlw	20
  1595     0444  347F               	retlw	127
  1596     0445  3414               	retlw	20
  1597     0446  3424               	retlw	36
  1598     0447  342A               	retlw	42
  1599     0448  347F               	retlw	127
  1600     0449  342A               	retlw	42
  1601     044A  3412               	retlw	18
  1602     044B  3423               	retlw	35
  1603     044C  3413               	retlw	19
  1604     044D  3408               	retlw	8
  1605     044E  3464               	retlw	100
  1606     044F  3462               	retlw	98
  1607     0450  3436               	retlw	54
  1608     0451  3449               	retlw	73
  1609     0452  3456               	retlw	86
  1610     0453  3420               	retlw	32
  1611     0454  3450               	retlw	80
  1612     0455  3400               	retlw	0
  1613     0456  340B               	retlw	11
  1614     0457  3407               	retlw	7
  1615     0458  3400               	retlw	0
  1616     0459  3400               	retlw	0
  1617     045A  3400               	retlw	0
  1618     045B  3400               	retlw	0
  1619     045C  343E               	retlw	62
  1620     045D  3441               	retlw	65
  1621     045E  3400               	retlw	0
  1622     045F  3400               	retlw	0
  1623     0460  3441               	retlw	65
  1624     0461  343E               	retlw	62
  1625     0462  3400               	retlw	0
  1626     0463  3400               	retlw	0
  1627     0464  3408               	retlw	8
  1628     0465  342A               	retlw	42
  1629     0466  341C               	retlw	28
  1630     0467  342A               	retlw	42
  1631     0468  3408               	retlw	8
  1632     0469  3408               	retlw	8
  1633     046A  3408               	retlw	8
  1634     046B  343E               	retlw	62
  1635     046C  3408               	retlw	8
  1636     046D  3408               	retlw	8
  1637     046E  3400               	retlw	0
  1638     046F  3458               	retlw	88
  1639     0470  3438               	retlw	56
  1640     0471  3400               	retlw	0
  1641     0472  3400               	retlw	0
  1642     0473  3408               	retlw	8
  1643     0474  3408               	retlw	8
  1644     0475  3408               	retlw	8
  1645     0476  3408               	retlw	8
  1646     0477  3408               	retlw	8
  1647     0478  3400               	retlw	0
  1648     0479  3430               	retlw	48
  1649     047A  3430               	retlw	48
  1650     047B  3400               	retlw	0
  1651     047C  3400               	retlw	0
  1652     047D  3420               	retlw	32
  1653     047E  3410               	retlw	16
  1654     047F  3408               	retlw	8
  1655     0480  3404               	retlw	4
  1656     0481  3402               	retlw	2
  1657     0482  343E               	retlw	62
  1658     0483  3451               	retlw	81
  1659     0484  3449               	retlw	73
  1660     0485  3445               	retlw	69
  1661     0486  343E               	retlw	62
  1662     0487  3400               	retlw	0
  1663     0488  3442               	retlw	66
  1664     0489  347F               	retlw	127
  1665     048A  3440               	retlw	64
  1666     048B  3400               	retlw	0
  1667     048C  3462               	retlw	98
  1668     048D  3451               	retlw	81
  1669     048E  3449               	retlw	73
  1670     048F  3449               	retlw	73
  1671     0490  3446               	retlw	70
  1672     0491  3422               	retlw	34
  1673     0492  3441               	retlw	65
  1674     0493  3449               	retlw	73
  1675     0494  3449               	retlw	73
  1676     0495  3436               	retlw	54
  1677     0496  3418               	retlw	24
  1678     0497  3414               	retlw	20
  1679     0498  3412               	retlw	18
  1680     0499  347F               	retlw	127
  1681     049A  3410               	retlw	16
  1682     049B  3427               	retlw	39
  1683     049C  3445               	retlw	69
  1684     049D  3445               	retlw	69
  1685     049E  3445               	retlw	69
  1686     049F  3439               	retlw	57
  1687     04A0  343C               	retlw	60
  1688     04A1  344A               	retlw	74
  1689     04A2  3449               	retlw	73
  1690     04A3  3449               	retlw	73
  1691     04A4  3430               	retlw	48
  1692     04A5  3401               	retlw	1
  1693     04A6  3471               	retlw	113
  1694     04A7  3409               	retlw	9
  1695     04A8  3405               	retlw	5
  1696     04A9  3403               	retlw	3
  1697     04AA  3436               	retlw	54
  1698     04AB  3449               	retlw	73
  1699     04AC  3449               	retlw	73
  1700     04AD  3449               	retlw	73
  1701     04AE  3437               	retlw	55
  1702     04AF  3406               	retlw	6
  1703     04B0  3449               	retlw	73
  1704     04B1  3449               	retlw	73
  1705     04B2  3429               	retlw	41
  1706     04B3  341E               	retlw	30
  1707     04B4  3400               	retlw	0
  1708     04B5  3436               	retlw	54
  1709     04B6  3436               	retlw	54
  1710     04B7  3400               	retlw	0
  1711     04B8  3400               	retlw	0
  1712     04B9  3400               	retlw	0
  1713     04BA  345B               	retlw	91
  1714     04BB  343B               	retlw	59
  1715     04BC  3400               	retlw	0
  1716     04BD  3400               	retlw	0
  1717     04BE  3400               	retlw	0
  1718     04BF  3408               	retlw	8
  1719     04C0  3414               	retlw	20
  1720     04C1  3422               	retlw	34
  1721     04C2  3441               	retlw	65
  1722     04C3  3414               	retlw	20
  1723     04C4  3414               	retlw	20
  1724     04C5  3414               	retlw	20
  1725     04C6  3414               	retlw	20
  1726     04C7  3414               	retlw	20
  1727     04C8  3441               	retlw	65
  1728     04C9  3422               	retlw	34
  1729     04CA  3414               	retlw	20
  1730     04CB  3408               	retlw	8
  1731     04CC  3400               	retlw	0
  1732     04CD  3402               	retlw	2
  1733     04CE  3401               	retlw	1
  1734     04CF  3451               	retlw	81
  1735     04D0  3409               	retlw	9
  1736     04D1  3406               	retlw	6
  1737     04D2  343E               	retlw	62
  1738     04D3  3441               	retlw	65
  1739     04D4  345D               	retlw	93
  1740     04D5  3455               	retlw	85
  1741     04D6  341E               	retlw	30
  1742     04D7  3432               	retlw	50
  1743     04D8  3414               	retlw	20
  1744     04D9  3408               	retlw	8
  1745     04DA  3414               	retlw	20
  1746     04DB  3426               	retlw	38
  1747     04DC  3422               	retlw	34
  1748     04DD  3422               	retlw	34
  1749     04DE  3422               	retlw	34
  1750     04DF  343C               	retlw	60
  1751     04E0  3420               	retlw	32
  1752     04E1  3400               	retlw	0
  1753     04E2  3422               	retlw	34
  1754     04E3  3412               	retlw	18
  1755     04E4  343C               	retlw	60
  1756     04E5  3400               	retlw	0
  1757     04E6  3402               	retlw	2
  1758     04E7  3402               	retlw	2
  1759     04E8  3402               	retlw	2
  1760     04E9  343E               	retlw	62
  1761     04EA  3402               	retlw	2
  1762     04EB  343A               	retlw	58
  1763     04EC  3402               	retlw	2
  1764     04ED  3402               	retlw	2
  1765     04EE  3402               	retlw	2
  1766     04EF  343C               	retlw	60
  1767     04F0  3400               	retlw	0
  1768     04F1  3402               	retlw	2
  1769     04F2  3402               	retlw	2
  1770     04F3  343C               	retlw	60
  1771     04F4  3400               	retlw	0
  1772     04F5  3400               	retlw	0
  1773     04F6  3402               	retlw	2
  1774     04F7  343E               	retlw	62
  1775     04F8  3402               	retlw	2
  1776     04F9  3400               	retlw	0
  1777     04FA  3422               	retlw	34
  1778     04FB  3424               	retlw	36
  1779     04FC  3428               	retlw	40
  1780     04FD  3438               	retlw	56
  1781     04FE  3426               	retlw	38
  1782     04FF  341E               	retlw	30
  1783     0500  3460               	retlw	96
  1784     0501  3442               	retlw	66
  1785     0502  3442               	retlw	66
  1786     0503  343C               	retlw	60
  1787     0504  3400               	retlw	0
  1788     0505  3400               	retlw	0
  1789     0506  3402               	retlw	2
  1790     0507  340E               	retlw	14
  1791     0508  3400               	retlw	0
  1792     0509  3400               	retlw	0
  1793     050A  3422               	retlw	34
  1794     050B  3422               	retlw	34
  1795     050C  3422               	retlw	34
  1796     050D  343C               	retlw	60
  1797     050E  3400               	retlw	0
  1798     050F  3422               	retlw	34
  1799     0510  3422               	retlw	34
  1800     0511  343C               	retlw	60
  1801     0512  3400               	retlw	0
  1802     0513  3402               	retlw	2
  1803     0514  343C               	retlw	60
  1804     0515  3402               	retlw	2
  1805     0516  3422               	retlw	34
  1806     0517  343C               	retlw	60
  1807     0518  3400               	retlw	0
  1808     0519  3407               	retlw	7
  1809     051A  3444               	retlw	68
  1810     051B  3424               	retlw	36
  1811     051C  341C               	retlw	28
  1812     051D  342C               	retlw	44
  1813     051E  342A               	retlw	42
  1814     051F  3422               	retlw	34
  1815     0520  3422               	retlw	34
  1816     0521  343C               	retlw	60
  1817     0522  347A               	retlw	122
  1818     0523  3402               	retlw	2
  1819     0524  3422               	retlw	34
  1820     0525  341C               	retlw	28
  1821     0526  3400               	retlw	0
  1822     0527  3400               	retlw	0
  1823     0528  3402               	retlw	2
  1824     0529  3402               	retlw	2
  1825     052A  347C               	retlw	124
  1826     052B  3400               	retlw	0
  1827     052C  3402               	retlw	2
  1828     052D  340E               	retlw	14
  1829     052E  3432               	retlw	50
  1830     052F  3422               	retlw	34
  1831     0530  341C               	retlw	28
  1832     0531  3422               	retlw	34
  1833     0532  3424               	retlw	36
  1834     0533  3428               	retlw	40
  1835     0534  3428               	retlw	40
  1836     0535  341E               	retlw	30
  1837     0536  3400               	retlw	0
  1838     0537  3400               	retlw	0
  1839     0538  3400               	retlw	0
  1840     0539  3400               	retlw	0
  1841     053A  3400               	retlw	0
  1842     053B  3400               	retlw	0
  1843     053C  3400               	retlw	0
  1844     053D  3400               	retlw	0
  1845     053E  3400               	retlw	0
  1846     053F  3400               	retlw	0
  1847     0540  3402               	retlw	2
  1848     0541  343E               	retlw	62
  1849     0542  3402               	retlw	2
  1850     0543  3402               	retlw	2
  1851     0544  343C               	retlw	60
  1852     0545  3402               	retlw	2
  1853     0546  3404               	retlw	4
  1854     0547  3408               	retlw	8
  1855     0548  3478               	retlw	120
  1856     0549  3406               	retlw	6
  1857     054A  3400               	retlw	0
  1858     054B  3402               	retlw	2
  1859     054C  3402               	retlw	2
  1860     054D  347E               	retlw	126
  1861     054E  3400               	retlw	0
  1862     054F  3402               	retlw	2
  1863     0550  3402               	retlw	2
  1864     0551  3402               	retlw	2
  1865     0552  343C               	retlw	60
  1866     0553  3400               	retlw	0
  1867     0554  343E               	retlw	62
  1868     0555  3428               	retlw	40
  1869     0556  342E               	retlw	46
  1870     0557  3420               	retlw	32
  1871     0558  341E               	retlw	30
  1872     0559  3400               	retlw	0
  1873     055A  3400               	retlw	0
  1874     055B  347F               	retlw	127
  1875     055C  3441               	retlw	65
  1876     055D  3441               	retlw	65
  1877     055E  3402               	retlw	2
  1878     055F  3404               	retlw	4
  1879     0560  3408               	retlw	8
  1880     0561  3410               	retlw	16
  1881     0562  3420               	retlw	32
  1882     0563  3441               	retlw	65
  1883     0564  3441               	retlw	65
  1884     0565  347F               	retlw	127
  1885     0566  3400               	retlw	0
  1886     0567  3400               	retlw	0
  1887     0568  3404               	retlw	4
  1888     0569  3402               	retlw	2
  1889     056A  347F               	retlw	127
  1890     056B  3402               	retlw	2
  1891     056C  3404               	retlw	4
  1892     056D  3440               	retlw	64
  1893     056E  3440               	retlw	64
  1894     056F  3440               	retlw	64
  1895     0570  3440               	retlw	64
  1896     0571  3440               	retlw	64
  1897     0572  3400               	retlw	0
  1898     0573  3407               	retlw	7
  1899     0574  340B               	retlw	11
  1900     0575  3400               	retlw	0
  1901     0576  3400               	retlw	0
  1902     0577  3438               	retlw	56
  1903     0578  3444               	retlw	68
  1904     0579  3444               	retlw	68
  1905     057A  343C               	retlw	60
  1906     057B  3440               	retlw	64
  1907     057C  347F               	retlw	127
  1908     057D  3448               	retlw	72
  1909     057E  3444               	retlw	68
  1910     057F  3444               	retlw	68
  1911     0580  3438               	retlw	56
  1912     0581  3438               	retlw	56
  1913     0582  3444               	retlw	68
  1914     0583  3444               	retlw	68
  1915     0584  3444               	retlw	68
  1916     0585  3444               	retlw	68
  1917     0586  3438               	retlw	56
  1918     0587  3444               	retlw	68
  1919     0588  3444               	retlw	68
  1920     0589  3448               	retlw	72
  1921     058A  347F               	retlw	127
  1922     058B  3438               	retlw	56
  1923     058C  3454               	retlw	84
  1924     058D  3454               	retlw	84
  1925     058E  3454               	retlw	84
  1926     058F  3408               	retlw	8
  1927     0590  3408               	retlw	8
  1928     0591  347E               	retlw	126
  1929     0592  3409               	retlw	9
  1930     0593  3402               	retlw	2
  1931     0594  3400               	retlw	0
  1932     0595  3408               	retlw	8
  1933     0596  3414               	retlw	20
  1934     0597  3454               	retlw	84
  1935     0598  3454               	retlw	84
  1936     0599  343C               	retlw	60
  1937     059A  347F               	retlw	127
  1938     059B  3408               	retlw	8
  1939     059C  3404               	retlw	4
  1940     059D  3404               	retlw	4
  1941     059E  3478               	retlw	120
  1942     059F  3400               	retlw	0
  1943     05A0  3444               	retlw	68
  1944     05A1  347D               	retlw	125
  1945     05A2  3440               	retlw	64
  1946     05A3  3400               	retlw	0
  1947     05A4  3420               	retlw	32
  1948     05A5  3440               	retlw	64
  1949     05A6  3444               	retlw	68
  1950     05A7  343D               	retlw	61
  1951     05A8  3400               	retlw	0
  1952     05A9  3400               	retlw	0
  1953     05AA  347F               	retlw	127
  1954     05AB  3410               	retlw	16
  1955     05AC  3428               	retlw	40
  1956     05AD  3444               	retlw	68
  1957     05AE  3400               	retlw	0
  1958     05AF  3441               	retlw	65
  1959     05B0  347F               	retlw	127
  1960     05B1  3440               	retlw	64
  1961     05B2  3400               	retlw	0
  1962     05B3  3478               	retlw	120
  1963     05B4  3404               	retlw	4
  1964     05B5  3418               	retlw	24
  1965     05B6  3404               	retlw	4
  1966     05B7  3478               	retlw	120
  1967     05B8  347C               	retlw	124
  1968     05B9  3408               	retlw	8
  1969     05BA  3404               	retlw	4
  1970     05BB  3404               	retlw	4
  1971     05BC  3478               	retlw	120
  1972     05BD  3438               	retlw	56
  1973     05BE  3444               	retlw	68
  1974     05BF  3444               	retlw	68
  1975     05C0  3444               	retlw	68
  1976     05C1  3438               	retlw	56
  1977     05C2  347C               	retlw	124
  1978     05C3  3414               	retlw	20
  1979     05C4  3424               	retlw	36
  1980     05C5  3424               	retlw	36
  1981     05C6  3418               	retlw	24
  1982     05C7  3418               	retlw	24
  1983     05C8  3424               	retlw	36
  1984     05C9  3414               	retlw	20
  1985     05CA  347C               	retlw	124
  1986     05CB  3440               	retlw	64
  1987     05CC  3400               	retlw	0
  1988     05CD  347C               	retlw	124
  1989     05CE  3408               	retlw	8
  1990     05CF  3404               	retlw	4
  1991     05D0  3404               	retlw	4
  1992     05D1  3448               	retlw	72
  1993     05D2  3454               	retlw	84
  1994     05D3  3454               	retlw	84
  1995     05D4  3454               	retlw	84
  1996     05D5  3420               	retlw	32
  1997     05D6  3404               	retlw	4
  1998     05D7  343E               	retlw	62
  1999     05D8  3444               	retlw	68
  2000     05D9  3420               	retlw	32
  2001     05DA  3400               	retlw	0
  2002     05DB  343C               	retlw	60
  2003     05DC  3440               	retlw	64
  2004     05DD  3440               	retlw	64
  2005     05DE  3420               	retlw	32
  2006     05DF  347C               	retlw	124
  2007     05E0  341C               	retlw	28
  2008     05E1  3420               	retlw	32
  2009     05E2  3440               	retlw	64
  2010     05E3  3420               	retlw	32
  2011     05E4  341C               	retlw	28
  2012     05E5  343C               	retlw	60
  2013     05E6  3440               	retlw	64
  2014     05E7  3430               	retlw	48
  2015     05E8  3440               	retlw	64
  2016     05E9  343C               	retlw	60
  2017     05EA  3444               	retlw	68
  2018     05EB  3428               	retlw	40
  2019     05EC  3410               	retlw	16
  2020     05ED  3428               	retlw	40
  2021     05EE  3444               	retlw	68
  2022     05EF  3404               	retlw	4
  2023     05F0  3448               	retlw	72
  2024     05F1  3430               	retlw	48
  2025     05F2  3408               	retlw	8
  2026     05F3  3404               	retlw	4
  2027     05F4  3444               	retlw	68
  2028     05F5  3464               	retlw	100
  2029     05F6  3454               	retlw	84
  2030     05F7  344C               	retlw	76
  2031     05F8  3444               	retlw	68
  2032     05F9  3400               	retlw	0
  2033     05FA  3408               	retlw	8
  2034     05FB  3436               	retlw	54
  2035     05FC  3441               	retlw	65
  2036     05FD  3400               	retlw	0
  2037     05FE  3400               	retlw	0
  2038     05FF  3400               	retlw	0
  2039     0600  3477               	retlw	119
  2040     0601  3400               	retlw	0
  2041     0602  3400               	retlw	0
  2042     0603  3400               	retlw	0
  2043     0604  3441               	retlw	65
  2044     0605  3436               	retlw	54
  2045     0606  3408               	retlw	8
  2046     0607  3400               	retlw	0
  2047     0608  3408               	retlw	8
  2048     0609  3404               	retlw	4
  2049     060A  3408               	retlw	8
  2050     060B  3410               	retlw	16
  2051     060C  3408               	retlw	8
  2052     060D  342A               	retlw	42
  2053     060E  3455               	retlw	85
  2054     060F  342A               	retlw	42
  2055     0610  3455               	retlw	85
  2056     0611  342A               	retlw	42
  2057     0612                     __end_of_hebrew:
  2058     0612                     _arabic:
  2059     0612  3408               	retlw	8
  2060     0613  341C               	retlw	28
  2061     0614  343E               	retlw	62
  2062     0615  347F               	retlw	127
  2063     0616  3400               	retlw	0
  2064     0617  3430               	retlw	48
  2065     0618  3435               	retlw	53
  2066     0619  3448               	retlw	72
  2067     061A  3440               	retlw	64
  2068     061B  3430               	retlw	48
  2069     061C  3445               	retlw	69
  2070     061D  3429               	retlw	41
  2071     061E  3411               	retlw	17
  2072     061F  3421               	retlw	33
  2073     0620  347D               	retlw	125
  2074     0621  347D               	retlw	125
  2075     0622  3409               	retlw	9
  2076     0623  3405               	retlw	5
  2077     0624  3405               	retlw	5
  2078     0625  3479               	retlw	121
  2079     0626  347D               	retlw	125
  2080     0627  3409               	retlw	9
  2081     0628  3411               	retlw	17
  2082     0629  3421               	retlw	33
  2083     062A  347D               	retlw	125
  2084     062B  3438               	retlw	56
  2085     062C  3444               	retlw	68
  2086     062D  3444               	retlw	68
  2087     062E  3438               	retlw	56
  2088     062F  3444               	retlw	68
  2089     0630  347E               	retlw	126
  2090     0631  3401               	retlw	1
  2091     0632  3429               	retlw	41
  2092     0633  342E               	retlw	46
  2093     0634  3410               	retlw	16
  2094     0635  3430               	retlw	48
  2095     0636  344A               	retlw	74
  2096     0637  344D               	retlw	77
  2097     0638  3449               	retlw	73
  2098     0639  3430               	retlw	48
  2099     063A  3460               	retlw	96
  2100     063B  3450               	retlw	80
  2101     063C  3448               	retlw	72
  2102     063D  3450               	retlw	80
  2103     063E  3460               	retlw	96
  2104     063F  341E               	retlw	30
  2105     0640  3404               	retlw	4
  2106     0641  3404               	retlw	4
  2107     0642  3438               	retlw	56
  2108     0643  3440               	retlw	64
  2109     0644  343E               	retlw	62
  2110     0645  3449               	retlw	73
  2111     0646  3449               	retlw	73
  2112     0647  3449               	retlw	73
  2113     0648  343E               	retlw	62
  2114     0649  3462               	retlw	98
  2115     064A  3414               	retlw	20
  2116     064B  3408               	retlw	8
  2117     064C  3410               	retlw	16
  2118     064D  3460               	retlw	96
  2119     064E  3440               	retlw	64
  2120     064F  343C               	retlw	60
  2121     0650  3420               	retlw	32
  2122     0651  3420               	retlw	32
  2123     0652  341C               	retlw	28
  2124     0653  3408               	retlw	8
  2125     0654  347C               	retlw	124
  2126     0655  3404               	retlw	4
  2127     0656  347C               	retlw	124
  2128     0657  3402               	retlw	2
  2129     0658  3438               	retlw	56
  2130     0659  3444               	retlw	68
  2131     065A  3444               	retlw	68
  2132     065B  343C               	retlw	60
  2133     065C  3404               	retlw	4
  2134     065D  3441               	retlw	65
  2135     065E  3463               	retlw	99
  2136     065F  3455               	retlw	85
  2137     0660  3449               	retlw	73
  2138     0661  3441               	retlw	65
  2139     0662  3410               	retlw	16
  2140     0663  3408               	retlw	8
  2141     0664  3478               	retlw	120
  2142     0665  3408               	retlw	8
  2143     0666  3404               	retlw	4
  2144     0667  3418               	retlw	24
  2145     0668  3424               	retlw	36
  2146     0669  347E               	retlw	126
  2147     066A  3424               	retlw	36
  2148     066B  3418               	retlw	24
  2149     066C  345E               	retlw	94
  2150     066D  3461               	retlw	97
  2151     066E  3401               	retlw	1
  2152     066F  3461               	retlw	97
  2153     0670  345E               	retlw	94
  2154     0671  3478               	retlw	120
  2155     0672  3414               	retlw	20
  2156     0673  3415               	retlw	21
  2157     0674  3414               	retlw	20
  2158     0675  3478               	retlw	120
  2159     0676  3438               	retlw	56
  2160     0677  3444               	retlw	68
  2161     0678  3445               	retlw	69
  2162     0679  343C               	retlw	60
  2163     067A  3440               	retlw	64
  2164     067B  3478               	retlw	120
  2165     067C  3415               	retlw	21
  2166     067D  3414               	retlw	20
  2167     067E  3415               	retlw	21
  2168     067F  3478               	retlw	120
  2169     0680  3438               	retlw	56
  2170     0681  3445               	retlw	69
  2171     0682  3444               	retlw	68
  2172     0683  343D               	retlw	61
  2173     0684  3440               	retlw	64
  2174     0685  343C               	retlw	60
  2175     0686  3443               	retlw	67
  2176     0687  3442               	retlw	66
  2177     0688  3443               	retlw	67
  2178     0689  343C               	retlw	60
  2179     068A  3438               	retlw	56
  2180     068B  3445               	retlw	69
  2181     068C  3444               	retlw	68
  2182     068D  3445               	retlw	69
  2183     068E  3438               	retlw	56
  2184     068F  343C               	retlw	60
  2185     0690  3441               	retlw	65
  2186     0691  3440               	retlw	64
  2187     0692  3441               	retlw	65
  2188     0693  343C               	retlw	60
  2189     0694  3438               	retlw	56
  2190     0695  3442               	retlw	66
  2191     0696  3440               	retlw	64
  2192     0697  3442               	retlw	66
  2193     0698  3438               	retlw	56
  2194     0699  3408               	retlw	8
  2195     069A  3408               	retlw	8
  2196     069B  342A               	retlw	42
  2197     069C  341C               	retlw	28
  2198     069D  3408               	retlw	8
  2199     069E  3420               	retlw	32
  2200     069F  347E               	retlw	126
  2201     06A0  3402               	retlw	2
  2202     06A1  3402               	retlw	2
  2203     06A2  3402               	retlw	2
  2204     06A3  3412               	retlw	18
  2205     06A4  3419               	retlw	25
  2206     06A5  3415               	retlw	21
  2207     06A6  3412               	retlw	18
  2208     06A7  3400               	retlw	0
  2209     06A8  3448               	retlw	72
  2210     06A9  347E               	retlw	126
  2211     06AA  3449               	retlw	73
  2212     06AB  3441               	retlw	65
  2213     06AC  3442               	retlw	66
  2214     06AD  3401               	retlw	1
  2215     06AE  3412               	retlw	18
  2216     06AF  347C               	retlw	124
  2217     06B0  3412               	retlw	18
  2218     06B1  3401               	retlw	1
  2219     06B2  3400               	retlw	0
  2220     06B3  3400               	retlw	0
  2221     06B4  3400               	retlw	0
  2222     06B5  3400               	retlw	0
  2223     06B6  3400               	retlw	0
  2224     06B7  3400               	retlw	0
  2225     06B8  345F               	retlw	95
  2226     06B9  3400               	retlw	0
  2227     06BA  3400               	retlw	0
  2228     06BB  3400               	retlw	0
  2229     06BC  3400               	retlw	0
  2230     06BD  3403               	retlw	3
  2231     06BE  3400               	retlw	0
  2232     06BF  3403               	retlw	3
  2233     06C0  3400               	retlw	0
  2234     06C1  3414               	retlw	20
  2235     06C2  347F               	retlw	127
  2236     06C3  3414               	retlw	20
  2237     06C4  347F               	retlw	127
  2238     06C5  3414               	retlw	20
  2239     06C6  3424               	retlw	36
  2240     06C7  342A               	retlw	42
  2241     06C8  347F               	retlw	127
  2242     06C9  342A               	retlw	42
  2243     06CA  3412               	retlw	18
  2244     06CB  3423               	retlw	35
  2245     06CC  3413               	retlw	19
  2246     06CD  3408               	retlw	8
  2247     06CE  3464               	retlw	100
  2248     06CF  3462               	retlw	98
  2249     06D0  3436               	retlw	54
  2250     06D1  3449               	retlw	73
  2251     06D2  3456               	retlw	86
  2252     06D3  3420               	retlw	32
  2253     06D4  3450               	retlw	80
  2254     06D5  3400               	retlw	0
  2255     06D6  3400               	retlw	0
  2256     06D7  340C               	retlw	12
  2257     06D8  3400               	retlw	0
  2258     06D9  3400               	retlw	0
  2259     06DA  3400               	retlw	0
  2260     06DB  3400               	retlw	0
  2261     06DC  343E               	retlw	62
  2262     06DD  3441               	retlw	65
  2263     06DE  3400               	retlw	0
  2264     06DF  3400               	retlw	0
  2265     06E0  3441               	retlw	65
  2266     06E1  343E               	retlw	62
  2267     06E2  3400               	retlw	0
  2268     06E3  3400               	retlw	0
  2269     06E4  3408               	retlw	8
  2270     06E5  342A               	retlw	42
  2271     06E6  341C               	retlw	28
  2272     06E7  342A               	retlw	42
  2273     06E8  3408               	retlw	8
  2274     06E9  3408               	retlw	8
  2275     06EA  3408               	retlw	8
  2276     06EB  343E               	retlw	62
  2277     06EC  3408               	retlw	8
  2278     06ED  3408               	retlw	8
  2279     06EE  3400               	retlw	0
  2280     06EF  3400               	retlw	0
  2281     06F0  3458               	retlw	88
  2282     06F1  3438               	retlw	56
  2283     06F2  3400               	retlw	0
  2284     06F3  3400               	retlw	0
  2285     06F4  3400               	retlw	0
  2286     06F5  3410               	retlw	16
  2287     06F6  3410               	retlw	16
  2288     06F7  3400               	retlw	0
  2289     06F8  3400               	retlw	0
  2290     06F9  3400               	retlw	0
  2291     06FA  3430               	retlw	48
  2292     06FB  3430               	retlw	48
  2293     06FC  3400               	retlw	0
  2294     06FD  3420               	retlw	32
  2295     06FE  3410               	retlw	16
  2296     06FF  3408               	retlw	8
  2297     0700  3404               	retlw	4
  2298     0701  3402               	retlw	2
  2299     0702  3400               	retlw	0
  2300     0703  3400               	retlw	0
  2301     0704  3430               	retlw	48
  2302     0705  3430               	retlw	48
  2303     0706  3400               	retlw	0
  2304     0707  3400               	retlw	0
  2305     0708  3400               	retlw	0
  2306     0709  343E               	retlw	62
  2307     070A  3400               	retlw	0
  2308     070B  3400               	retlw	0
  2309     070C  3400               	retlw	0
  2310     070D  347E               	retlw	126
  2311     070E  3408               	retlw	8
  2312     070F  3408               	retlw	8
  2313     0710  3406               	retlw	6
  2314     0711  347E               	retlw	126
  2315     0712  3408               	retlw	8
  2316     0713  340E               	retlw	14
  2317     0714  3408               	retlw	8
  2318     0715  3406               	retlw	6
  2319     0716  3400               	retlw	0
  2320     0717  3434               	retlw	52
  2321     0718  344A               	retlw	74
  2322     0719  344A               	retlw	74
  2323     071A  3400               	retlw	0
  2324     071B  3400               	retlw	0
  2325     071C  341C               	retlw	28
  2326     071D  3422               	retlw	34
  2327     071E  3422               	retlw	34
  2328     071F  341C               	retlw	28
  2329     0720  3402               	retlw	2
  2330     0721  3402               	retlw	2
  2331     0722  3402               	retlw	2
  2332     0723  347E               	retlw	126
  2333     0724  3400               	retlw	0
  2334     0725  340E               	retlw	14
  2335     0726  3438               	retlw	56
  2336     0727  3460               	retlw	96
  2337     0728  3438               	retlw	56
  2338     0729  340E               	retlw	14
  2339     072A  3470               	retlw	112
  2340     072B  341C               	retlw	28
  2341     072C  3406               	retlw	6
  2342     072D  341C               	retlw	28
  2343     072E  3470               	retlw	112
  2344     072F  3406               	retlw	6
  2345     0730  3409               	retlw	9
  2346     0731  3409               	retlw	9
  2347     0732  347E               	retlw	126
  2348     0733  3400               	retlw	0
  2349     0734  3400               	retlw	0
  2350     0735  3400               	retlw	0
  2351     0736  3424               	retlw	36
  2352     0737  3400               	retlw	0
  2353     0738  3400               	retlw	0
  2354     0739  3400               	retlw	0
  2355     073A  3400               	retlw	0
  2356     073B  3464               	retlw	100
  2357     073C  3400               	retlw	0
  2358     073D  3400               	retlw	0
  2359     073E  3400               	retlw	0
  2360     073F  3410               	retlw	16
  2361     0740  3428               	retlw	40
  2362     0741  3444               	retlw	68
  2363     0742  3400               	retlw	0
  2364     0743  3400               	retlw	0
  2365     0744  3414               	retlw	20
  2366     0745  3414               	retlw	20
  2367     0746  3414               	retlw	20
  2368     0747  3400               	retlw	0
  2369     0748  3400               	retlw	0
  2370     0749  3444               	retlw	68
  2371     074A  3428               	retlw	40
  2372     074B  3410               	retlw	16
  2373     074C  3400               	retlw	0
  2374     074D  3402               	retlw	2
  2375     074E  3401               	retlw	1
  2376     074F  3451               	retlw	81
  2377     0750  3409               	retlw	9
  2378     0751  3406               	retlw	6
  2379     0752  343E               	retlw	62
  2380     0753  3441               	retlw	65
  2381     0754  345D               	retlw	93
  2382     0755  3455               	retlw	85
  2383     0756  341E               	retlw	30
  2384     0757  3400               	retlw	0
  2385     0758  3401               	retlw	1
  2386     0759  347D               	retlw	125
  2387     075A  3401               	retlw	1
  2388     075B  3400               	retlw	0
  2389     075C  3408               	retlw	8
  2390     075D  3410               	retlw	16
  2391     075E  3450               	retlw	80
  2392     075F  3410               	retlw	16
  2393     0760  340C               	retlw	12
  2394     0761  3438               	retlw	56
  2395     0762  3420               	retlw	32
  2396     0763  3438               	retlw	56
  2397     0764  3410               	retlw	16
  2398     0765  3418               	retlw	24
  2399     0766  3408               	retlw	8
  2400     0767  3412               	retlw	18
  2401     0768  3413               	retlw	19
  2402     0769  3412               	retlw	18
  2403     076A  340C               	retlw	12
  2404     076B  3400               	retlw	0
  2405     076C  3431               	retlw	49
  2406     076D  3449               	retlw	73
  2407     076E  345E               	retlw	94
  2408     076F  3448               	retlw	72
  2409     0770  3400               	retlw	0
  2410     0771  3432               	retlw	50
  2411     0772  344B               	retlw	75
  2412     0773  344E               	retlw	78
  2413     0774  3448               	retlw	72
  2414     0775  3400               	retlw	0
  2415     0776  3431               	retlw	49
  2416     0777  3449               	retlw	73
  2417     0778  344E               	retlw	78
  2418     0779  3448               	retlw	72
  2419     077A  3400               	retlw	0
  2420     077B  3420               	retlw	32
  2421     077C  3424               	retlw	36
  2422     077D  3424               	retlw	36
  2423     077E  3438               	retlw	56
  2424     077F  3470               	retlw	112
  2425     0780  3408               	retlw	8
  2426     0781  340C               	retlw	12
  2427     0782  340A               	retlw	10
  2428     0783  3404               	retlw	4
  2429     0784  3400               	retlw	0
  2430     0785  3440               	retlw	64
  2431     0786  3440               	retlw	64
  2432     0787  3438               	retlw	56
  2433     0788  3400               	retlw	0
  2434     0789  3400               	retlw	0
  2435     078A  3440               	retlw	64
  2436     078B  3440               	retlw	64
  2437     078C  343A               	retlw	58
  2438     078D  3400               	retlw	0
  2439     078E  3408               	retlw	8
  2440     078F  3410               	retlw	16
  2441     0790  3412               	retlw	18
  2442     0791  3412               	retlw	18
  2443     0792  3408               	retlw	8
  2444     0793  3438               	retlw	56
  2445     0794  3420               	retlw	32
  2446     0795  343A               	retlw	58
  2447     0796  3411               	retlw	17
  2448     0797  341A               	retlw	26
  2449     0798  3430               	retlw	48
  2450     0799  3440               	retlw	64
  2451     079A  3444               	retlw	68
  2452     079B  3440               	retlw	64
  2453     079C  3438               	retlw	56
  2454     079D  3420               	retlw	32
  2455     079E  3444               	retlw	68
  2456     079F  344A               	retlw	74
  2457     07A0  343C               	retlw	60
  2458     07A1  3400               	retlw	0
  2459     07A2  3460               	retlw	96
  2460     07A3  3440               	retlw	64
  2461     07A4  3448               	retlw	72
  2462     07A5  3455               	retlw	85
  2463     07A6  3478               	retlw	120
  2464     07A7  3420               	retlw	32
  2465     07A8  343E               	retlw	62
  2466     07A9  3428               	retlw	40
  2467     07AA  3428               	retlw	40
  2468     07AB  3430               	retlw	48
  2469     07AC  3400               	retlw	0
  2470     07AD  3438               	retlw	56
  2471     07AE  344C               	retlw	76
  2472     07AF  344A               	retlw	74
  2473     07B0  344A               	retlw	74
  2474     07B1  3460               	retlw	96
  2475     07B2  3440               	retlw	64
  2476     07B3  3449               	retlw	73
  2477     07B4  3455               	retlw	85
  2478     07B5  3479               	retlw	121
  2479     07B6  3408               	retlw	8
  2480     07B7  3414               	retlw	20
  2481     07B8  3450               	retlw	80
  2482     07B9  3454               	retlw	84
  2483     07BA  340A               	retlw	10
  2484     07BB  3400               	retlw	0
  2485     07BC  3420               	retlw	32
  2486     07BD  3425               	retlw	37
  2487     07BE  3424               	retlw	36
  2488     07BF  3438               	retlw	56
  2489     07C0  3438               	retlw	56
  2490     07C1  3420               	retlw	32
  2491     07C2  343C               	retlw	60
  2492     07C3  3414               	retlw	20
  2493     07C4  341C               	retlw	28
  2494     07C5  3430               	retlw	48
  2495     07C6  3440               	retlw	64
  2496     07C7  3440               	retlw	64
  2497     07C8  347E               	retlw	126
  2498     07C9  3400               	retlw	0
  2499     07CA  3400               	retlw	0
  2500     07CB  341C               	retlw	28
  2501     07CC  3424               	retlw	36
  2502     07CD  3424               	retlw	36
  2503     07CE  3418               	retlw	24
  2504     07CF  3430               	retlw	48
  2505     07D0  3448               	retlw	72
  2506     07D1  344C               	retlw	76
  2507     07D2  3440               	retlw	64
  2508     07D3  347E               	retlw	126
  2509     07D4  3400               	retlw	0
  2510     07D5  3438               	retlw	56
  2511     07D6  344C               	retlw	76
  2512     07D7  344B               	retlw	75
  2513     07D8  344A               	retlw	74
  2514     07D9  3400               	retlw	0
  2515     07DA  3400               	retlw	0
  2516     07DB  347F               	retlw	127
  2517     07DC  3441               	retlw	65
  2518     07DD  3441               	retlw	65
  2519     07DE  3402               	retlw	2
  2520     07DF  3404               	retlw	4
  2521     07E0  3408               	retlw	8
  2522     07E1  3410               	retlw	16
  2523     07E2  3420               	retlw	32
  2524     07E3  3441               	retlw	65
  2525     07E4  3441               	retlw	65
  2526     07E5  347F               	retlw	127
  2527     07E6  3400               	retlw	0
  2528     07E7  3400               	retlw	0
  2529     07E8  3404               	retlw	4
  2530     07E9  3402               	retlw	2
  2531     07EA  347F               	retlw	127
  2532     07EB  3402               	retlw	2
  2533     07EC  3404               	retlw	4
  2534     07ED  3440               	retlw	64
  2535     07EE  3440               	retlw	64
  2536     07EF  3440               	retlw	64
  2537     07F0  3440               	retlw	64
  2538     07F1  3440               	retlw	64
  2539     07F2  3400               	retlw	0
  2540     07F3  3407               	retlw	7
  2541     07F4  340B               	retlw	11
  2542     07F5  3400               	retlw	0
  2543     07F6  3400               	retlw	0
  2544     07F7  3400               	retlw	0
  2545     07F8  3400               	retlw	0
  2546     07F9  3400               	retlw	0
  2547     07FA  343F               	retlw	63
  2548     07FB  3420               	retlw	32
  2549     07FC  3410               	retlw	16
  2550     07FD  3410               	retlw	16
  2551     07FE  344C               	retlw	76
  2552     07FF  3410               	retlw	16
  2553     0800  3410               	retlw	16
  2554     0801  3410               	retlw	16
  2555     0802  3411               	retlw	17
  2556     0803  340D               	retlw	13
  2557     0804  3410               	retlw	16
  2558     0805  3410               	retlw	16
  2559     0806  3410               	retlw	16
  2560     0807  3412               	retlw	18
  2561     0808  341B               	retlw	27
  2562     0809  3412               	retlw	18
  2563     080A  3410               	retlw	16
  2564     080B  3410               	retlw	16
  2565     080C  3414               	retlw	20
  2566     080D  3452               	retlw	82
  2567     080E  3412               	retlw	18
  2568     080F  340C               	retlw	12
  2569     0810  3410               	retlw	16
  2570     0811  3414               	retlw	20
  2571     0812  3413               	retlw	19
  2572     0813  3412               	retlw	18
  2573     0814  340C               	retlw	12
  2574     0815  3410               	retlw	16
  2575     0816  3414               	retlw	20
  2576     0817  3412               	retlw	18
  2577     0818  3412               	retlw	18
  2578     0819  340C               	retlw	12
  2579     081A  3400               	retlw	0
  2580     081B  3420               	retlw	32
  2581     081C  3424               	retlw	36
  2582     081D  3424               	retlw	36
  2583     081E  3438               	retlw	56
  2584     081F  3400               	retlw	0
  2585     0820  3420               	retlw	32
  2586     0821  3425               	retlw	37
  2587     0822  3424               	retlw	36
  2588     0823  3438               	retlw	56
  2589     0824  3400               	retlw	0
  2590     0825  3440               	retlw	64
  2591     0826  3440               	retlw	64
  2592     0827  3438               	retlw	56
  2593     0828  3410               	retlw	16
  2594     0829  3400               	retlw	0
  2595     082A  3440               	retlw	64
  2596     082B  3440               	retlw	64
  2597     082C  343A               	retlw	58
  2598     082D  3410               	retlw	16
  2599     082E  3438               	retlw	56
  2600     082F  3420               	retlw	32
  2601     0830  3438               	retlw	56
  2602     0831  3420               	retlw	32
  2603     0832  3418               	retlw	24
  2604     0833  3438               	retlw	56
  2605     0834  3422               	retlw	34
  2606     0835  343B               	retlw	59
  2607     0836  3422               	retlw	34
  2608     0837  3418               	retlw	24
  2609     0838  3438               	retlw	56
  2610     0839  3428               	retlw	40
  2611     083A  3424               	retlw	36
  2612     083B  3424               	retlw	36
  2613     083C  3418               	retlw	24
  2614     083D  3438               	retlw	56
  2615     083E  3428               	retlw	40
  2616     083F  3424               	retlw	36
  2617     0840  3425               	retlw	37
  2618     0841  3418               	retlw	24
  2619     0842  3420               	retlw	32
  2620     0843  343E               	retlw	62
  2621     0844  3428               	retlw	40
  2622     0845  3428               	retlw	40
  2623     0846  3430               	retlw	48
  2624     0847  3420               	retlw	32
  2625     0848  343E               	retlw	62
  2626     0849  3428               	retlw	40
  2627     084A  342A               	retlw	42
  2628     084B  3430               	retlw	48
  2629     084C  3420               	retlw	32
  2630     084D  3428               	retlw	40
  2631     084E  343C               	retlw	60
  2632     084F  343C               	retlw	60
  2633     0850  3420               	retlw	32
  2634     0851  3420               	retlw	32
  2635     0852  3428               	retlw	40
  2636     0853  343C               	retlw	60
  2637     0854  343D               	retlw	61
  2638     0855  3420               	retlw	32
  2639     0856  3420               	retlw	32
  2640     0857  3420               	retlw	32
  2641     0858  3428               	retlw	40
  2642     0859  3435               	retlw	53
  2643     085A  341C               	retlw	28
  2644     085B  3420               	retlw	32
  2645     085C  3420               	retlw	32
  2646     085D  3429               	retlw	41
  2647     085E  3435               	retlw	53
  2648     085F  341D               	retlw	29
  2649     0860  3420               	retlw	32
  2650     0861  342C               	retlw	44
  2651     0862  342A               	retlw	42
  2652     0863  3411               	retlw	17
  2653     0864  3421               	retlw	33
  2654     0865  3420               	retlw	32
  2655     0866  3420               	retlw	32
  2656     0867  343E               	retlw	62
  2657     0868  3420               	retlw	32
  2658     0869  3420               	retlw	32
  2659     086A  3420               	retlw	32
  2660     086B  3430               	retlw	48
  2661     086C  3428               	retlw	40
  2662     086D  3428               	retlw	40
  2663     086E  3410               	retlw	16
  2664     086F  3420               	retlw	32
  2665     0870  3420               	retlw	32
  2666     0871  341A               	retlw	26
  2667     0872  3420               	retlw	32
  2668     0873  3420               	retlw	32
  2669     0874  3410               	retlw	16
  2670     0875  3450               	retlw	80
  2671     0876  344C               	retlw	76
  2672     0877  3450               	retlw	80
  2673     0878  3410               	retlw	16
  2674     0879  3400               	retlw	0
  2675     087A  3408               	retlw	8
  2676     087B  3436               	retlw	54
  2677     087C  3441               	retlw	65
  2678     087D  3400               	retlw	0
  2679     087E  3400               	retlw	0
  2680     087F  3400               	retlw	0
  2681     0880  3477               	retlw	119
  2682     0881  3400               	retlw	0
  2683     0882  3400               	retlw	0
  2684     0883  3400               	retlw	0
  2685     0884  3441               	retlw	65
  2686     0885  3436               	retlw	54
  2687     0886  3408               	retlw	8
  2688     0887  3400               	retlw	0
  2689     0888  3408               	retlw	8
  2690     0889  3404               	retlw	4
  2691     088A  3408               	retlw	8
  2692     088B  3410               	retlw	16
  2693     088C  3408               	retlw	8
  2694     088D  342A               	retlw	42
  2695     088E  3455               	retlw	85
  2696     088F  342A               	retlw	42
  2697     0890  3455               	retlw	85
  2698     0891  342A               	retlw	42
  2699     0892                     __end_of_arabic:
  2700     0892                     _ascii:
  2701     0892  3408               	retlw	8
  2702     0893  341C               	retlw	28
  2703     0894  343E               	retlw	62
  2704     0895  347F               	retlw	127
  2705     0896  3400               	retlw	0
  2706     0897  3430               	retlw	48
  2707     0898  3435               	retlw	53
  2708     0899  3448               	retlw	72
  2709     089A  3440               	retlw	64
  2710     089B  3430               	retlw	48
  2711     089C  3445               	retlw	69
  2712     089D  3429               	retlw	41
  2713     089E  3411               	retlw	17
  2714     089F  3421               	retlw	33
  2715     08A0  347D               	retlw	125
  2716     08A1  347D               	retlw	125
  2717     08A2  3409               	retlw	9
  2718     08A3  3405               	retlw	5
  2719     08A4  3405               	retlw	5
  2720     08A5  3479               	retlw	121
  2721     08A6  347D               	retlw	125
  2722     08A7  3409               	retlw	9
  2723     08A8  3411               	retlw	17
  2724     08A9  3421               	retlw	33
  2725     08AA  347D               	retlw	125
  2726     08AB  3438               	retlw	56
  2727     08AC  3444               	retlw	68
  2728     08AD  3444               	retlw	68
  2729     08AE  3438               	retlw	56
  2730     08AF  3444               	retlw	68
  2731     08B0  347E               	retlw	126
  2732     08B1  3401               	retlw	1
  2733     08B2  3429               	retlw	41
  2734     08B3  342E               	retlw	46
  2735     08B4  3410               	retlw	16
  2736     08B5  3430               	retlw	48
  2737     08B6  344A               	retlw	74
  2738     08B7  344D               	retlw	77
  2739     08B8  3449               	retlw	73
  2740     08B9  3430               	retlw	48
  2741     08BA  3460               	retlw	96
  2742     08BB  3450               	retlw	80
  2743     08BC  3448               	retlw	72
  2744     08BD  3450               	retlw	80
  2745     08BE  3460               	retlw	96
  2746     08BF  341E               	retlw	30
  2747     08C0  3404               	retlw	4
  2748     08C1  3404               	retlw	4
  2749     08C2  3438               	retlw	56
  2750     08C3  3440               	retlw	64
  2751     08C4  343E               	retlw	62
  2752     08C5  3449               	retlw	73
  2753     08C6  3449               	retlw	73
  2754     08C7  3449               	retlw	73
  2755     08C8  343E               	retlw	62
  2756     08C9  3462               	retlw	98
  2757     08CA  3414               	retlw	20
  2758     08CB  3408               	retlw	8
  2759     08CC  3410               	retlw	16
  2760     08CD  3460               	retlw	96
  2761     08CE  3440               	retlw	64
  2762     08CF  343C               	retlw	60
  2763     08D0  3420               	retlw	32
  2764     08D1  3420               	retlw	32
  2765     08D2  341C               	retlw	28
  2766     08D3  3408               	retlw	8
  2767     08D4  347C               	retlw	124
  2768     08D5  3404               	retlw	4
  2769     08D6  347C               	retlw	124
  2770     08D7  3402               	retlw	2
  2771     08D8  3438               	retlw	56
  2772     08D9  3444               	retlw	68
  2773     08DA  3444               	retlw	68
  2774     08DB  343C               	retlw	60
  2775     08DC  3404               	retlw	4
  2776     08DD  3441               	retlw	65
  2777     08DE  3463               	retlw	99
  2778     08DF  3455               	retlw	85
  2779     08E0  3449               	retlw	73
  2780     08E1  3441               	retlw	65
  2781     08E2  3410               	retlw	16
  2782     08E3  3408               	retlw	8
  2783     08E4  3478               	retlw	120
  2784     08E5  3408               	retlw	8
  2785     08E6  3404               	retlw	4
  2786     08E7  3418               	retlw	24
  2787     08E8  3424               	retlw	36
  2788     08E9  347E               	retlw	126
  2789     08EA  3424               	retlw	36
  2790     08EB  3418               	retlw	24
  2791     08EC  345E               	retlw	94
  2792     08ED  3461               	retlw	97
  2793     08EE  3401               	retlw	1
  2794     08EF  3461               	retlw	97
  2795     08F0  345E               	retlw	94
  2796     08F1  3478               	retlw	120
  2797     08F2  3414               	retlw	20
  2798     08F3  3415               	retlw	21
  2799     08F4  3414               	retlw	20
  2800     08F5  3478               	retlw	120
  2801     08F6  3438               	retlw	56
  2802     08F7  3444               	retlw	68
  2803     08F8  3445               	retlw	69
  2804     08F9  343C               	retlw	60
  2805     08FA  3440               	retlw	64
  2806     08FB  3478               	retlw	120
  2807     08FC  3415               	retlw	21
  2808     08FD  3414               	retlw	20
  2809     08FE  3415               	retlw	21
  2810     08FF  3478               	retlw	120
  2811     0900  3438               	retlw	56
  2812     0901  3445               	retlw	69
  2813     0902  3444               	retlw	68
  2814     0903  343D               	retlw	61
  2815     0904  3440               	retlw	64
  2816     0905  343C               	retlw	60
  2817     0906  3443               	retlw	67
  2818     0907  3442               	retlw	66
  2819     0908  3443               	retlw	67
  2820     0909  343C               	retlw	60
  2821     090A  3438               	retlw	56
  2822     090B  3445               	retlw	69
  2823     090C  3444               	retlw	68
  2824     090D  3445               	retlw	69
  2825     090E  3438               	retlw	56
  2826     090F  343C               	retlw	60
  2827     0910  3441               	retlw	65
  2828     0911  3440               	retlw	64
  2829     0912  3441               	retlw	65
  2830     0913  343C               	retlw	60
  2831     0914  3438               	retlw	56
  2832     0915  3442               	retlw	66
  2833     0916  3440               	retlw	64
  2834     0917  3442               	retlw	66
  2835     0918  3438               	retlw	56
  2836     0919  3408               	retlw	8
  2837     091A  3408               	retlw	8
  2838     091B  342A               	retlw	42
  2839     091C  341C               	retlw	28
  2840     091D  3408               	retlw	8
  2841     091E  3420               	retlw	32
  2842     091F  347E               	retlw	126
  2843     0920  3402               	retlw	2
  2844     0921  3402               	retlw	2
  2845     0922  3402               	retlw	2
  2846     0923  3412               	retlw	18
  2847     0924  3419               	retlw	25
  2848     0925  3415               	retlw	21
  2849     0926  3412               	retlw	18
  2850     0927  3400               	retlw	0
  2851     0928  3448               	retlw	72
  2852     0929  347E               	retlw	126
  2853     092A  3449               	retlw	73
  2854     092B  3441               	retlw	65
  2855     092C  3442               	retlw	66
  2856     092D  3401               	retlw	1
  2857     092E  3412               	retlw	18
  2858     092F  347C               	retlw	124
  2859     0930  3412               	retlw	18
  2860     0931  3401               	retlw	1
  2861     0932  3400               	retlw	0
  2862     0933  3400               	retlw	0
  2863     0934  3400               	retlw	0
  2864     0935  3400               	retlw	0
  2865     0936  3400               	retlw	0
  2866     0937  3400               	retlw	0
  2867     0938  3400               	retlw	0
  2868     0939  345F               	retlw	95
  2869     093A  3400               	retlw	0
  2870     093B  3400               	retlw	0
  2871     093C  3400               	retlw	0
  2872     093D  3403               	retlw	3
  2873     093E  3400               	retlw	0
  2874     093F  3403               	retlw	3
  2875     0940  3400               	retlw	0
  2876     0941  3414               	retlw	20
  2877     0942  347F               	retlw	127
  2878     0943  3414               	retlw	20
  2879     0944  347F               	retlw	127
  2880     0945  3414               	retlw	20
  2881     0946  3424               	retlw	36
  2882     0947  342A               	retlw	42
  2883     0948  347F               	retlw	127
  2884     0949  342A               	retlw	42
  2885     094A  3412               	retlw	18
  2886     094B  3423               	retlw	35
  2887     094C  3413               	retlw	19
  2888     094D  3408               	retlw	8
  2889     094E  3464               	retlw	100
  2890     094F  3462               	retlw	98
  2891     0950  3436               	retlw	54
  2892     0951  3449               	retlw	73
  2893     0952  3456               	retlw	86
  2894     0953  3420               	retlw	32
  2895     0954  3450               	retlw	80
  2896     0955  3400               	retlw	0
  2897     0956  340B               	retlw	11
  2898     0957  3407               	retlw	7
  2899     0958  3400               	retlw	0
  2900     0959  3400               	retlw	0
  2901     095A  3400               	retlw	0
  2902     095B  3400               	retlw	0
  2903     095C  343E               	retlw	62
  2904     095D  3441               	retlw	65
  2905     095E  3400               	retlw	0
  2906     095F  3400               	retlw	0
  2907     0960  3441               	retlw	65
  2908     0961  343E               	retlw	62
  2909     0962  3400               	retlw	0
  2910     0963  3400               	retlw	0
  2911     0964  3408               	retlw	8
  2912     0965  342A               	retlw	42
  2913     0966  341C               	retlw	28
  2914     0967  342A               	retlw	42
  2915     0968  3408               	retlw	8
  2916     0969  3408               	retlw	8
  2917     096A  3408               	retlw	8
  2918     096B  343E               	retlw	62
  2919     096C  3408               	retlw	8
  2920     096D  3408               	retlw	8
  2921     096E  3400               	retlw	0
  2922     096F  3458               	retlw	88
  2923     0970  3438               	retlw	56
  2924     0971  3400               	retlw	0
  2925     0972  3400               	retlw	0
  2926     0973  3408               	retlw	8
  2927     0974  3408               	retlw	8
  2928     0975  3408               	retlw	8
  2929     0976  3408               	retlw	8
  2930     0977  3408               	retlw	8
  2931     0978  3400               	retlw	0
  2932     0979  3430               	retlw	48
  2933     097A  3430               	retlw	48
  2934     097B  3400               	retlw	0
  2935     097C  3400               	retlw	0
  2936     097D  3420               	retlw	32
  2937     097E  3410               	retlw	16
  2938     097F  3408               	retlw	8
  2939     0980  3404               	retlw	4
  2940     0981  3402               	retlw	2
  2941     0982  343E               	retlw	62
  2942     0983  3451               	retlw	81
  2943     0984  3449               	retlw	73
  2944     0985  3445               	retlw	69
  2945     0986  343E               	retlw	62
  2946     0987  3400               	retlw	0
  2947     0988  3442               	retlw	66
  2948     0989  347F               	retlw	127
  2949     098A  3440               	retlw	64
  2950     098B  3400               	retlw	0
  2951     098C  3462               	retlw	98
  2952     098D  3451               	retlw	81
  2953     098E  3449               	retlw	73
  2954     098F  3449               	retlw	73
  2955     0990  3446               	retlw	70
  2956     0991  3422               	retlw	34
  2957     0992  3441               	retlw	65
  2958     0993  3449               	retlw	73
  2959     0994  3449               	retlw	73
  2960     0995  3436               	retlw	54
  2961     0996  3418               	retlw	24
  2962     0997  3414               	retlw	20
  2963     0998  3412               	retlw	18
  2964     0999  347F               	retlw	127
  2965     099A  3410               	retlw	16
  2966     099B  3427               	retlw	39
  2967     099C  3445               	retlw	69
  2968     099D  3445               	retlw	69
  2969     099E  3445               	retlw	69
  2970     099F  3439               	retlw	57
  2971     09A0  343C               	retlw	60
  2972     09A1  344A               	retlw	74
  2973     09A2  3449               	retlw	73
  2974     09A3  3449               	retlw	73
  2975     09A4  3430               	retlw	48
  2976     09A5  3401               	retlw	1
  2977     09A6  3471               	retlw	113
  2978     09A7  3409               	retlw	9
  2979     09A8  3405               	retlw	5
  2980     09A9  3403               	retlw	3
  2981     09AA  3436               	retlw	54
  2982     09AB  3449               	retlw	73
  2983     09AC  3449               	retlw	73
  2984     09AD  3449               	retlw	73
  2985     09AE  3437               	retlw	55
  2986     09AF  3406               	retlw	6
  2987     09B0  3449               	retlw	73
  2988     09B1  3449               	retlw	73
  2989     09B2  3429               	retlw	41
  2990     09B3  341E               	retlw	30
  2991     09B4  3400               	retlw	0
  2992     09B5  3436               	retlw	54
  2993     09B6  3436               	retlw	54
  2994     09B7  3400               	retlw	0
  2995     09B8  3400               	retlw	0
  2996     09B9  3400               	retlw	0
  2997     09BA  345B               	retlw	91
  2998     09BB  343B               	retlw	59
  2999     09BC  3400               	retlw	0
  3000     09BD  3400               	retlw	0
  3001     09BE  3400               	retlw	0
  3002     09BF  3408               	retlw	8
  3003     09C0  3414               	retlw	20
  3004     09C1  3422               	retlw	34
  3005     09C2  3441               	retlw	65
  3006     09C3  3414               	retlw	20
  3007     09C4  3414               	retlw	20
  3008     09C5  3414               	retlw	20
  3009     09C6  3414               	retlw	20
  3010     09C7  3414               	retlw	20
  3011     09C8  3441               	retlw	65
  3012     09C9  3422               	retlw	34
  3013     09CA  3414               	retlw	20
  3014     09CB  3408               	retlw	8
  3015     09CC  3400               	retlw	0
  3016     09CD  3402               	retlw	2
  3017     09CE  3401               	retlw	1
  3018     09CF  3451               	retlw	81
  3019     09D0  3409               	retlw	9
  3020     09D1  3406               	retlw	6
  3021     09D2  343E               	retlw	62
  3022     09D3  3441               	retlw	65
  3023     09D4  345D               	retlw	93
  3024     09D5  3455               	retlw	85
  3025     09D6  341E               	retlw	30
  3026     09D7  347E               	retlw	126
  3027     09D8  3409               	retlw	9
  3028     09D9  3409               	retlw	9
  3029     09DA  3409               	retlw	9
  3030     09DB  347E               	retlw	126
  3031     09DC  347E               	retlw	126
  3032     09DD  3449               	retlw	73
  3033     09DE  3449               	retlw	73
  3034     09DF  3449               	retlw	73
  3035     09E0  3436               	retlw	54
  3036     09E1  343E               	retlw	62
  3037     09E2  3441               	retlw	65
  3038     09E3  3441               	retlw	65
  3039     09E4  3441               	retlw	65
  3040     09E5  3422               	retlw	34
  3041     09E6  347F               	retlw	127
  3042     09E7  3441               	retlw	65
  3043     09E8  3441               	retlw	65
  3044     09E9  3441               	retlw	65
  3045     09EA  343E               	retlw	62
  3046     09EB  347F               	retlw	127
  3047     09EC  3449               	retlw	73
  3048     09ED  3449               	retlw	73
  3049     09EE  3449               	retlw	73
  3050     09EF  3441               	retlw	65
  3051     09F0  347F               	retlw	127
  3052     09F1  3409               	retlw	9
  3053     09F2  3409               	retlw	9
  3054     09F3  3409               	retlw	9
  3055     09F4  3401               	retlw	1
  3056     09F5  343E               	retlw	62
  3057     09F6  3441               	retlw	65
  3058     09F7  3441               	retlw	65
  3059     09F8  3451               	retlw	81
  3060     09F9  3432               	retlw	50
  3061     09FA  347F               	retlw	127
  3062     09FB  3408               	retlw	8
  3063     09FC  3408               	retlw	8
  3064     09FD  3408               	retlw	8
  3065     09FE  347F               	retlw	127
  3066     09FF  3400               	retlw	0
  3067     0A00  3441               	retlw	65
  3068     0A01  347F               	retlw	127
  3069     0A02  3441               	retlw	65
  3070     0A03  3400               	retlw	0
  3071     0A04  3420               	retlw	32
  3072     0A05  3440               	retlw	64
  3073     0A06  3440               	retlw	64
  3074     0A07  3440               	retlw	64
  3075     0A08  343F               	retlw	63
  3076     0A09  347F               	retlw	127
  3077     0A0A  3408               	retlw	8
  3078     0A0B  3414               	retlw	20
  3079     0A0C  3422               	retlw	34
  3080     0A0D  3441               	retlw	65
  3081     0A0E  347F               	retlw	127
  3082     0A0F  3440               	retlw	64
  3083     0A10  3440               	retlw	64
  3084     0A11  3440               	retlw	64
  3085     0A12  3440               	retlw	64
  3086     0A13  347F               	retlw	127
  3087     0A14  3402               	retlw	2
  3088     0A15  340C               	retlw	12
  3089     0A16  3402               	retlw	2
  3090     0A17  347F               	retlw	127
  3091     0A18  347F               	retlw	127
  3092     0A19  3404               	retlw	4
  3093     0A1A  3408               	retlw	8
  3094     0A1B  3410               	retlw	16
  3095     0A1C  347F               	retlw	127
  3096     0A1D  343E               	retlw	62
  3097     0A1E  3441               	retlw	65
  3098     0A1F  3441               	retlw	65
  3099     0A20  3441               	retlw	65
  3100     0A21  343E               	retlw	62
  3101     0A22  347F               	retlw	127
  3102     0A23  3409               	retlw	9
  3103     0A24  3409               	retlw	9
  3104     0A25  3409               	retlw	9
  3105     0A26  3406               	retlw	6
  3106     0A27  343E               	retlw	62
  3107     0A28  3441               	retlw	65
  3108     0A29  3451               	retlw	81
  3109     0A2A  3421               	retlw	33
  3110     0A2B  345E               	retlw	94
  3111     0A2C  347F               	retlw	127
  3112     0A2D  3409               	retlw	9
  3113     0A2E  3419               	retlw	25
  3114     0A2F  3429               	retlw	41
  3115     0A30  3446               	retlw	70
  3116     0A31  3426               	retlw	38
  3117     0A32  3449               	retlw	73
  3118     0A33  3449               	retlw	73
  3119     0A34  3449               	retlw	73
  3120     0A35  3432               	retlw	50
  3121     0A36  3401               	retlw	1
  3122     0A37  3401               	retlw	1
  3123     0A38  347F               	retlw	127
  3124     0A39  3401               	retlw	1
  3125     0A3A  3401               	retlw	1
  3126     0A3B  343F               	retlw	63
  3127     0A3C  3440               	retlw	64
  3128     0A3D  3440               	retlw	64
  3129     0A3E  3440               	retlw	64
  3130     0A3F  343F               	retlw	63
  3131     0A40  3407               	retlw	7
  3132     0A41  3418               	retlw	24
  3133     0A42  3460               	retlw	96
  3134     0A43  3418               	retlw	24
  3135     0A44  3407               	retlw	7
  3136     0A45  347F               	retlw	127
  3137     0A46  3420               	retlw	32
  3138     0A47  3418               	retlw	24
  3139     0A48  3420               	retlw	32
  3140     0A49  347F               	retlw	127
  3141     0A4A  3463               	retlw	99
  3142     0A4B  3414               	retlw	20
  3143     0A4C  3408               	retlw	8
  3144     0A4D  3414               	retlw	20
  3145     0A4E  3463               	retlw	99
  3146     0A4F  3403               	retlw	3
  3147     0A50  3404               	retlw	4
  3148     0A51  3478               	retlw	120
  3149     0A52  3404               	retlw	4
  3150     0A53  3403               	retlw	3
  3151     0A54  3461               	retlw	97
  3152     0A55  3451               	retlw	81
  3153     0A56  3449               	retlw	73
  3154     0A57  3445               	retlw	69
  3155     0A58  3443               	retlw	67
  3156     0A59  3400               	retlw	0
  3157     0A5A  3400               	retlw	0
  3158     0A5B  347F               	retlw	127
  3159     0A5C  3441               	retlw	65
  3160     0A5D  3441               	retlw	65
  3161     0A5E  3402               	retlw	2
  3162     0A5F  3404               	retlw	4
  3163     0A60  3408               	retlw	8
  3164     0A61  3410               	retlw	16
  3165     0A62  3420               	retlw	32
  3166     0A63  3441               	retlw	65
  3167     0A64  3441               	retlw	65
  3168     0A65  347F               	retlw	127
  3169     0A66  3400               	retlw	0
  3170     0A67  3400               	retlw	0
  3171     0A68  3404               	retlw	4
  3172     0A69  3402               	retlw	2
  3173     0A6A  347F               	retlw	127
  3174     0A6B  3402               	retlw	2
  3175     0A6C  3404               	retlw	4
  3176     0A6D  3440               	retlw	64
  3177     0A6E  3440               	retlw	64
  3178     0A6F  3440               	retlw	64
  3179     0A70  3440               	retlw	64
  3180     0A71  3440               	retlw	64
  3181     0A72  3400               	retlw	0
  3182     0A73  3407               	retlw	7
  3183     0A74  340B               	retlw	11
  3184     0A75  3400               	retlw	0
  3185     0A76  3400               	retlw	0
  3186     0A77  3438               	retlw	56
  3187     0A78  3444               	retlw	68
  3188     0A79  3444               	retlw	68
  3189     0A7A  343C               	retlw	60
  3190     0A7B  3440               	retlw	64
  3191     0A7C  347F               	retlw	127
  3192     0A7D  3448               	retlw	72
  3193     0A7E  3444               	retlw	68
  3194     0A7F  3444               	retlw	68
  3195     0A80  3438               	retlw	56
  3196     0A81  3438               	retlw	56
  3197     0A82  3444               	retlw	68
  3198     0A83  3444               	retlw	68
  3199     0A84  3444               	retlw	68
  3200     0A85  3444               	retlw	68
  3201     0A86  3438               	retlw	56
  3202     0A87  3444               	retlw	68
  3203     0A88  3444               	retlw	68
  3204     0A89  3448               	retlw	72
  3205     0A8A  347F               	retlw	127
  3206     0A8B  3438               	retlw	56
  3207     0A8C  3454               	retlw	84
  3208     0A8D  3454               	retlw	84
  3209     0A8E  3454               	retlw	84
  3210     0A8F  3408               	retlw	8
  3211     0A90  3408               	retlw	8
  3212     0A91  347E               	retlw	126
  3213     0A92  3409               	retlw	9
  3214     0A93  3402               	retlw	2
  3215     0A94  3400               	retlw	0
  3216     0A95  3408               	retlw	8
  3217     0A96  3414               	retlw	20
  3218     0A97  3454               	retlw	84
  3219     0A98  3454               	retlw	84
  3220     0A99  343C               	retlw	60
  3221     0A9A  347F               	retlw	127
  3222     0A9B  3408               	retlw	8
  3223     0A9C  3404               	retlw	4
  3224     0A9D  3404               	retlw	4
  3225     0A9E  3478               	retlw	120
  3226     0A9F  3400               	retlw	0
  3227     0AA0  3444               	retlw	68
  3228     0AA1  347D               	retlw	125
  3229     0AA2  3440               	retlw	64
  3230     0AA3  3400               	retlw	0
  3231     0AA4  3420               	retlw	32
  3232     0AA5  3440               	retlw	64
  3233     0AA6  3444               	retlw	68
  3234     0AA7  343D               	retlw	61
  3235     0AA8  3400               	retlw	0
  3236     0AA9  3400               	retlw	0
  3237     0AAA  347F               	retlw	127
  3238     0AAB  3410               	retlw	16
  3239     0AAC  3428               	retlw	40
  3240     0AAD  3444               	retlw	68
  3241     0AAE  3400               	retlw	0
  3242     0AAF  3441               	retlw	65
  3243     0AB0  347F               	retlw	127
  3244     0AB1  3440               	retlw	64
  3245     0AB2  3400               	retlw	0
  3246     0AB3  3478               	retlw	120
  3247     0AB4  3404               	retlw	4
  3248     0AB5  3418               	retlw	24
  3249     0AB6  3404               	retlw	4
  3250     0AB7  3478               	retlw	120
  3251     0AB8  347C               	retlw	124
  3252     0AB9  3408               	retlw	8
  3253     0ABA  3404               	retlw	4
  3254     0ABB  3404               	retlw	4
  3255     0ABC  3478               	retlw	120
  3256     0ABD  3438               	retlw	56
  3257     0ABE  3444               	retlw	68
  3258     0ABF  3444               	retlw	68
  3259     0AC0  3444               	retlw	68
  3260     0AC1  3438               	retlw	56
  3261     0AC2  347C               	retlw	124
  3262     0AC3  3414               	retlw	20
  3263     0AC4  3424               	retlw	36
  3264     0AC5  3424               	retlw	36
  3265     0AC6  3418               	retlw	24
  3266     0AC7  3418               	retlw	24
  3267     0AC8  3424               	retlw	36
  3268     0AC9  3414               	retlw	20
  3269     0ACA  347C               	retlw	124
  3270     0ACB  3440               	retlw	64
  3271     0ACC  3400               	retlw	0
  3272     0ACD  347C               	retlw	124
  3273     0ACE  3408               	retlw	8
  3274     0ACF  3404               	retlw	4
  3275     0AD0  3404               	retlw	4
  3276     0AD1  3448               	retlw	72
  3277     0AD2  3454               	retlw	84
  3278     0AD3  3454               	retlw	84
  3279     0AD4  3454               	retlw	84
  3280     0AD5  3420               	retlw	32
  3281     0AD6  3404               	retlw	4
  3282     0AD7  343E               	retlw	62
  3283     0AD8  3444               	retlw	68
  3284     0AD9  3420               	retlw	32
  3285     0ADA  3400               	retlw	0
  3286     0ADB  343C               	retlw	60
  3287     0ADC  3440               	retlw	64
  3288     0ADD  3440               	retlw	64
  3289     0ADE  3420               	retlw	32
  3290     0ADF  347C               	retlw	124
  3291     0AE0  341C               	retlw	28
  3292     0AE1  3420               	retlw	32
  3293     0AE2  3440               	retlw	64
  3294     0AE3  3420               	retlw	32
  3295     0AE4  341C               	retlw	28
  3296     0AE5  343C               	retlw	60
  3297     0AE6  3440               	retlw	64
  3298     0AE7  3430               	retlw	48
  3299     0AE8  3440               	retlw	64
  3300     0AE9  343C               	retlw	60
  3301     0AEA  3444               	retlw	68
  3302     0AEB  3428               	retlw	40
  3303     0AEC  3410               	retlw	16
  3304     0AED  3428               	retlw	40
  3305     0AEE  3444               	retlw	68
  3306     0AEF  3404               	retlw	4
  3307     0AF0  3448               	retlw	72
  3308     0AF1  3430               	retlw	48
  3309     0AF2  3408               	retlw	8
  3310     0AF3  3404               	retlw	4
  3311     0AF4  3444               	retlw	68
  3312     0AF5  3464               	retlw	100
  3313     0AF6  3454               	retlw	84
  3314     0AF7  344C               	retlw	76
  3315     0AF8  3444               	retlw	68
  3316     0AF9  3400               	retlw	0
  3317     0AFA  3408               	retlw	8
  3318     0AFB  3436               	retlw	54
  3319     0AFC  3441               	retlw	65
  3320     0AFD  3400               	retlw	0
  3321     0AFE  3400               	retlw	0
  3322     0AFF  3400               	retlw	0
  3323     0B00  3477               	retlw	119
  3324     0B01  3400               	retlw	0
  3325     0B02  3400               	retlw	0
  3326     0B03  3400               	retlw	0
  3327     0B04  3441               	retlw	65
  3328     0B05  3436               	retlw	54
  3329     0B06  3408               	retlw	8
  3330     0B07  3400               	retlw	0
  3331     0B08  3408               	retlw	8
  3332     0B09  3404               	retlw	4
  3333     0B0A  3408               	retlw	8
  3334     0B0B  3410               	retlw	16
  3335     0B0C  3408               	retlw	8
  3336     0B0D  342A               	retlw	42
  3337     0B0E  3455               	retlw	85
  3338     0B0F  342A               	retlw	42
  3339     0B10  3455               	retlw	85
  3340     0B11  342A               	retlw	42
  3341     0B12                     __end_of_ascii:
  3342     0B12                     _adcBounds:
  3343     0B12  3400               	retlw	0
  3344     0B13  3400               	retlw	0
  3345     0B14  3419               	retlw	25
  3346     0B15  3400               	retlw	0
  3347     0B16  3432               	retlw	50
  3348     0B17  3400               	retlw	0
  3349     0B18  344B               	retlw	75
  3350     0B19  3400               	retlw	0
  3351     0B1A  3464               	retlw	100
  3352     0B1B  3400               	retlw	0
  3353     0B1C  347D               	retlw	125
  3354     0B1D  3400               	retlw	0
  3355     0B1E  3496               	retlw	150
  3356     0B1F  3400               	retlw	0
  3357     0B20  34AF               	retlw	175
  3358     0B21  3400               	retlw	0
  3359     0B22  34C8               	retlw	200
  3360     0B23  3400               	retlw	0
  3361     0B24  34E1               	retlw	225
  3362     0B25  3400               	retlw	0
  3363     0B26  34FA               	retlw	250
  3364     0B27  3400               	retlw	0
  3365     0B28  3413               	retlw	19
  3366     0B29  3401               	retlw	1
  3367     0B2A  342C               	retlw	44
  3368     0B2B  3401               	retlw	1
  3369     0B2C  3445               	retlw	69
  3370     0B2D  3401               	retlw	1
  3371     0B2E  345E               	retlw	94
  3372     0B2F  3401               	retlw	1
  3373     0B30  3477               	retlw	119
  3374     0B31  3401               	retlw	1
  3375     0B32  3490               	retlw	144
  3376     0B33  3401               	retlw	1
  3377     0B34  34A9               	retlw	169
  3378     0B35  3401               	retlw	1
  3379     0B36  34C2               	retlw	194
  3380     0B37  3401               	retlw	1
  3381     0B38  34DB               	retlw	219
  3382     0B39  3401               	retlw	1
  3383     0B3A  34F4               	retlw	244
  3384     0B3B  3401               	retlw	1
  3385     0B3C  340D               	retlw	13
  3386     0B3D  3402               	retlw	2
  3387     0B3E  3426               	retlw	38
  3388     0B3F  3402               	retlw	2
  3389     0B40  343F               	retlw	63
  3390     0B41  3402               	retlw	2
  3391     0B42  3458               	retlw	88
  3392     0B43  3402               	retlw	2
  3393     0B44  3471               	retlw	113
  3394     0B45  3402               	retlw	2
  3395     0B46  348A               	retlw	138
  3396     0B47  3402               	retlw	2
  3397     0B48  34A3               	retlw	163
  3398     0B49  3402               	retlw	2
  3399     0B4A  34BC               	retlw	188
  3400     0B4B  3402               	retlw	2
  3401     0B4C  34D5               	retlw	213
  3402     0B4D  3402               	retlw	2
  3403     0B4E  34EE               	retlw	238
  3404     0B4F  3402               	retlw	2
  3405     0B50  3407               	retlw	7
  3406     0B51  3403               	retlw	3
  3407     0B52  3420               	retlw	32
  3408     0B53  3403               	retlw	3
  3409     0B54  3439               	retlw	57
  3410     0B55  3403               	retlw	3
  3411     0B56  3452               	retlw	82
  3412     0B57  3403               	retlw	3
  3413     0B58  346B               	retlw	107
  3414     0B59  3403               	retlw	3
  3415     0B5A  3484               	retlw	132
  3416     0B5B  3403               	retlw	3
  3417     0B5C  349D               	retlw	157
  3418     0B5D  3403               	retlw	3
  3419     0B5E  34B6               	retlw	182
  3420     0B5F  3403               	retlw	3
  3421     0B60  34CF               	retlw	207
  3422     0B61  3403               	retlw	3
  3423     0B62  34E8               	retlw	232
  3424     0B63  3403               	retlw	3
  3425     0B64  3401               	retlw	1
  3426     0B65  3404               	retlw	4
  3427     0B66                     __end_of_adcBounds:
  3428     0B66                     _inputLeds:
  3429     0B66  34FE               	retlw	254
  3430     0B67  34FD               	retlw	253
  3431     0B68  34FB               	retlw	251
  3432     0B69  34F7               	retlw	247
  3433     0B6A                     __end_of_inputLeds:
  3434     000E                     _TMR1	set	14
  3435     0014                     _SSPCONbits	set	20
  3436     0013                     _SSPBUF	set	19
  3437     0008                     _PORTDbits	set	8
  3438     0007                     _PORTCbits	set	7
  3439     0006                     _PORTBbits	set	6
  3440     001F                     _ADCON0bits	set	31
  3441     0010                     _T1CONbits	set	16
  3442     000B                     _INTCONbits	set	11
  3443     0009                     _PORTE	set	9
  3444     0008                     _PORTD	set	8
  3445     0007                     _PORTC	set	7
  3446     0006                     _PORTB	set	6
  3447     0005                     _PORTA	set	5
  3448     000C                     _PIR1bits	set	12
  3449     001E                     _ADRESH	set	30
  3450     00F9                     _GO	set	249
  3451     0094                     _SSPSTATbits	set	148
  3452     0087                     _TRISCbits	set	135
  3453     009F                     _ADCON1bits	set	159
  3454     0081                     _OPTION_REGbits	set	129
  3455     0096                     _IOCBbits	set	150
  3456     008C                     _PIE1bits	set	140
  3457     009D                     _PSTRCONbits	set	157
  3458     0086                     _TRISBbits	set	134
  3459     0089                     _TRISEbits	set	137
  3460     0089                     _TRISE	set	137
  3461     0088                     _TRISD	set	136
  3462     0087                     _TRISC	set	135
  3463     0086                     _TRISB	set	134
  3464     0085                     _TRISA	set	133
  3465     008F                     _OSCCONbits	set	143
  3466     009E                     _ADRESL	set	158
  3467     0188                     _ANSELbits	set	392
  3468     0189                     _ANSELH	set	393
  3469     0188                     _ANSEL	set	392
  3470                           
  3471                           	psect	cinit
  3472     0013                     start_initialization:	
  3473                           ; #config settings
  3474                           
  3475     0013                     __initialization:
  3476                           
  3477                           ; Initialize objects allocated to BANK1
  3478     0013  1383               	bcf	3,7	;select IRP bank0
  3479     0014  30B9               	movlw	low (__pdataBANK1+25)
  3480     0015  00FD               	movwf	btemp+-1
  3481     0016  3010               	movlw	high __pidataBANK1
  3482     0017  00FE               	movwf	btemp
  3483     0018  30BD               	movlw	low __pidataBANK1
  3484     0019  00FF               	movwf	btemp+1
  3485     001A  30A0               	movlw	low __pdataBANK1
  3486     001B  0084               	movwf	4
  3487     001C  160A  118A  2056  120A  118A  	fcall	init_ram0
  3488                           
  3489                           ; Clear objects allocated to BANK3
  3490     0021  1783               	bsf	3,7	;select IRP bank2
  3491     0022  3090               	movlw	low __pbssBANK3
  3492     0023  0084               	movwf	4
  3493     0024  30E0               	movlw	low (__pbssBANK3+80)
  3494     0025  160A  118A  2032  120A  118A  	fcall	clear_ram0
  3495                           
  3496                           ; Clear objects allocated to BANK1
  3497     002A  1383               	bcf	3,7	;select IRP bank0
  3498     002B  30B9               	movlw	low __pbssBANK1
  3499     002C  0084               	movwf	4
  3500     002D  30C5               	movlw	low (__pbssBANK1+12)
  3501     002E  160A  118A  2032  120A  118A  	fcall	clear_ram0
  3502                           
  3503                           ; Clear objects allocated to BANK0
  3504     0033  01ED               	clrf	__pbssBANK0& (0+127)
  3505     0034  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3506     0035  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  3507                           
  3508                           ; Clear objects allocated to COMMON
  3509     0036  01FD               	clrf	__pbssCOMMON& (0+127)
  3510     0037                     end_of_initialization:	
  3511                           ;End of C runtime variable initialization code
  3512                           
  3513     0037                     __end_of__initialization:
  3514     0037  0183               	clrf	3
  3515     0038  120A  158A  2C30   	ljmp	_main	;jump to C main() function
  3516                           
  3517                           	psect	bssCOMMON
  3518     007D                     __pbssCOMMON:
  3519     007D                     _state:
  3520     007D                     	ds	1
  3521                           
  3522                           	psect	bssBANK0
  3523     006D                     __pbssBANK0:
  3524     006D                     _volume:
  3525     006D                     	ds	2
  3526     006F                     _oldstate:
  3527     006F                     	ds	1
  3528                           
  3529                           	psect	bssBANK1
  3530     00B9                     __pbssBANK1:
  3531     00B9                     _final_code:
  3532     00B9                     	ds	4
  3533     00BD                     _motoraan:
  3534     00BD                     	ds	2
  3535     00BF                     _remote_counter:
  3536     00BF                     	ds	2
  3537     00C1                     _timeraan:
  3538     00C1                     	ds	2
  3539     00C3                     _num_of_lang:
  3540     00C3                     	ds	2
  3541                           
  3542                           	psect	dataBANK1
  3543     00A0                     __pdataBANK1:
  3544     00A0                     scherm_setup@F1479:
  3545     00A0                     	ds	8
  3546     00A8                     scherm_setup@F1477:
  3547     00A8                     	ds	8
  3548     00B0                     _inputChanged:
  3549     00B0                     	ds	2
  3550     00B2                     _miniCount:
  3551     00B2                     	ds	2
  3552     00B4                     _input:
  3553     00B4                     	ds	2
  3554     00B6                     _volumeOud:
  3555     00B6                     	ds	2
  3556     00B8                     _nummerOffset:
  3557     00B8                     	ds	1
  3558                           
  3559                           	psect	bssBANK3
  3560     0190                     __pbssBANK3:
  3561     0190                     _scherm2_buffer:
  3562     0190                     	ds	40
  3563     01B8                     _scherm1_buffer:
  3564     01B8                     	ds	40
  3565                           
  3566                           	psect	inittext
  3567     1052                     init_fetch0:	
  3568                           ;	Called with low address in FSR and high address in W
  3569                           
  3570     1052  087E               	movf	btemp,w
  3571     1053  008A               	movwf	10
  3572     1054  087F               	movf	btemp+1,w
  3573     1055  0082               	movwf	2
  3574     1056                     init_ram0:	
  3575                           ;Called with:
  3576                           ;	high address of idata address in btemp 
  3577                           ;	low address of idata address in btemp+1 
  3578                           ;	low address of data in FSR
  3579                           ;	high address + 1 of data in btemp-1
  3580                           
  3581     1056  160A  118A  2052  160A  118A  	fcall	init_fetch0
  3582     105B  0080               	movwf	0
  3583     105C  0A84               	incf	4,f
  3584     105D  0804               	movf	4,w
  3585     105E  067D               	xorwf	btemp+-1,w
  3586     105F  1903               	btfsc	3,2
  3587     1060  3400               	retlw	0
  3588     1061  0AFF               	incf	btemp+1,f
  3589     1062  1903               	btfsc	3,2
  3590     1063  0AFE               	incf	btemp,f
  3591     1064  2856               	goto	init_ram0
  3592                           
  3593                           	psect	clrtext
  3594     1032                     clear_ram0:	
  3595                           ;	Called with FSR containing the base address, and
  3596                           ;	W with the last address+1
  3597                           
  3598     1032  0064               	clrwdt	;clear the watchdog before getting into this loop
  3599     1033                     clrloop0:
  3600     1033  0180               	clrf	0	;clear RAM location pointed to by FSR
  3601     1034  0A84               	incf	4,f	;increment pointer
  3602     1035  0604               	xorwf	4,w	;XOR with final address
  3603     1036  1903               	btfsc	3,2	;have we reached the end yet?
  3604     1037  3400               	retlw	0	;all done for this memory range, return
  3605     1038  0604               	xorwf	4,w	;XOR again to restore value
  3606     1039  2833               	goto	clrloop0	;do the next byte
  3607                           
  3608                           	psect	cstackBANK1
  3609     00C5                     __pcstackBANK1:
  3610     00C5                     ?_main:
  3611     00C5                     main@argc:	
  3612                           ; 2 bytes @ 0x0
  3613                           
  3614                           
  3615                           ; 2 bytes @ 0x0
  3616     00C5                     	ds	2
  3617     00C7                     main@argv:
  3618                           
  3619                           ; 2 bytes @ 0x2
  3620     00C7                     	ds	2
  3621                           
  3622                           	psect	cstackCOMMON
  3623     0070                     __pcstackCOMMON:
  3624     0070                     ?_init_osc:
  3625     0070                     ?_ports_init:	
  3626                           ; 1 bytes @ 0x0
  3627                           
  3628     0070                     ?_pins_init:	
  3629                           ; 1 bytes @ 0x0
  3630                           
  3631     0070                     ?_interrupt_init:	
  3632                           ; 1 bytes @ 0x0
  3633                           
  3634     0070                     ?_timer_init:	
  3635                           ; 1 bytes @ 0x0
  3636                           
  3637     0070                     ?_adc_init:	
  3638                           ; 1 bytes @ 0x0
  3639                           
  3640     0070                     ?_scherm_init:	
  3641                           ; 1 bytes @ 0x0
  3642                           
  3643     0070                     ?_scherm_setup:	
  3644                           ; 1 bytes @ 0x0
  3645                           
  3646     0070                     ?_key_detection:	
  3647                           ; 1 bytes @ 0x0
  3648                           
  3649     0070                     ?_input_conversion:	
  3650                           ; 1 bytes @ 0x0
  3651                           
  3652     0070                     ?_send_buffer:	
  3653                           ; 1 bytes @ 0x0
  3654                           
  3655     0070                     ?_remote_edge_handeling:	
  3656                           ; 1 bytes @ 0x0
  3657                           
  3658     0070                     ??_remote_edge_handeling:	
  3659                           ; 1 bytes @ 0x0
  3660                           
  3661     0070                     ?_remote_timer_handeling:	
  3662                           ; 1 bytes @ 0x0
  3663                           
  3664     0070                     ??_remote_timer_handeling:	
  3665                           ; 1 bytes @ 0x0
  3666                           
  3667     0070                     ?_rotaryHandeling:	
  3668                           ; 1 bytes @ 0x0
  3669                           
  3670     0070                     ??_rotaryHandeling:	
  3671                           ; 1 bytes @ 0x0
  3672                           
  3673     0070                     ?_screen_transmit:	
  3674                           ; 1 bytes @ 0x0
  3675                           
  3676     0070                     ?_adcHandeling:	
  3677                           ; 1 bytes @ 0x0
  3678                           
  3679     0070                     ??_adcHandeling:	
  3680                           ; 1 bytes @ 0x0
  3681                           
  3682     0070                     ?_volume_conversion:	
  3683                           ; 1 bytes @ 0x0
  3684                           
  3685     0070                     ?_pic_init:	
  3686                           ; 1 bytes @ 0x0
  3687                           
  3688     0070                     ?_ISR:	
  3689                           ; 1 bytes @ 0x0
  3690                           
  3691                           
  3692                           ; 1 bytes @ 0x0
  3693     0070                     	ds	3
  3694     0073                     adcHandeling@upperValue:
  3695                           
  3696                           ; 2 bytes @ 0x3
  3697     0073                     	ds	2
  3698     0075                     adcHandeling@lowerValue:
  3699                           
  3700                           ; 2 bytes @ 0x5
  3701     0075                     	ds	2
  3702     0077                     adcHandeling@adcValue:
  3703                           
  3704                           ; 2 bytes @ 0x7
  3705     0077                     	ds	2
  3706     0079                     ??_ISR:
  3707                           
  3708                           ; 1 bytes @ 0x9
  3709     0079                     	ds	4
  3710                           
  3711                           	psect	cstackBANK0
  3712     0020                     __pcstackBANK0:
  3713     0020                     ??_init_osc:
  3714     0020                     ??_ports_init:	
  3715                           ; 1 bytes @ 0x0
  3716                           
  3717     0020                     ??_pins_init:	
  3718                           ; 1 bytes @ 0x0
  3719                           
  3720     0020                     ??_interrupt_init:	
  3721                           ; 1 bytes @ 0x0
  3722                           
  3723     0020                     ??_timer_init:	
  3724                           ; 1 bytes @ 0x0
  3725                           
  3726     0020                     ??_adc_init:	
  3727                           ; 1 bytes @ 0x0
  3728                           
  3729     0020                     ?_spi_init:	
  3730                           ; 1 bytes @ 0x0
  3731                           
  3732     0020                     ??_screen_transmit:	
  3733                           ; 1 bytes @ 0x0
  3734                           
  3735     0020                     ??_pic_init:	
  3736                           ; 1 bytes @ 0x0
  3737                           
  3738     0020                     ?___bmul:	
  3739                           ; 1 bytes @ 0x0
  3740                           
  3741     0020                     ?___wmul:	
  3742                           ; 1 bytes @ 0x0
  3743                           
  3744     0020                     screen_transmit@c:	
  3745                           ; 2 bytes @ 0x0
  3746                           
  3747     0020                     spi_init@sdi_rx_smp:	
  3748                           ; 1 bytes @ 0x0
  3749                           
  3750     0020                     ___bmul@multiplicand:	
  3751                           ; 1 bytes @ 0x0
  3752                           
  3753     0020                     ___wmul@multiplier:	
  3754                           ; 1 bytes @ 0x0
  3755                           
  3756                           
  3757                           ; 2 bytes @ 0x0
  3758     0020                     	ds	1
  3759     0021                     ??_scherm_init:
  3760     0021                     ??_send_buffer:	
  3761                           ; 1 bytes @ 0x1
  3762                           
  3763     0021                     ??___bmul:	
  3764                           ; 1 bytes @ 0x1
  3765                           
  3766     0021                     spi_init@clock_pol:	
  3767                           ; 1 bytes @ 0x1
  3768                           
  3769     0021                     ___bmul@product:	
  3770                           ; 1 bytes @ 0x1
  3771                           
  3772                           
  3773                           ; 1 bytes @ 0x1
  3774     0021                     	ds	1
  3775     0022                     send_buffer@scherm:
  3776     0022                     spi_init@sdo_tx_edge:	
  3777                           ; 1 bytes @ 0x2
  3778                           
  3779     0022                     ___bmul@multiplier:	
  3780                           ; 1 bytes @ 0x2
  3781                           
  3782     0022                     scherm_init@i:	
  3783                           ; 1 bytes @ 0x2
  3784                           
  3785     0022                     ___wmul@multiplicand:	
  3786                           ; 2 bytes @ 0x2
  3787                           
  3788                           
  3789                           ; 2 bytes @ 0x2
  3790     0022                     	ds	1
  3791     0023                     ??_spi_init:
  3792     0023                     spi_init@mst_slv_oscdiv:	
  3793                           ; 1 bytes @ 0x3
  3794                           
  3795     0023                     send_buffer@i:	
  3796                           ; 1 bytes @ 0x3
  3797                           
  3798                           
  3799                           ; 2 bytes @ 0x3
  3800     0023                     	ds	1
  3801     0024                     ??___wmul:
  3802     0024                     scherm_init@helderheid:	
  3803                           ; 1 bytes @ 0x4
  3804                           
  3805     0024                     ___wmul@product:	
  3806                           ; 1 bytes @ 0x4
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0x4
  3810     0024                     	ds	1
  3811     0025                     scherm_init@controlWord_1:
  3812     0025                     send_buffer@i_974:	
  3813                           ; 1 bytes @ 0x5
  3814                           
  3815                           
  3816                           ; 2 bytes @ 0x5
  3817     0025                     	ds	1
  3818     0026                     ?_load_buffer:
  3819     0026                     scherm_init@controlWord_0:	
  3820                           ; 1 bytes @ 0x6
  3821                           
  3822     0026                     load_buffer@lang:	
  3823                           ; 1 bytes @ 0x6
  3824                           
  3825                           
  3826                           ; 2 bytes @ 0x6
  3827     0026                     	ds	2
  3828     0028                     load_buffer@character:
  3829                           
  3830                           ; 1 bytes @ 0x8
  3831     0028                     	ds	1
  3832     0029                     load_buffer@position:
  3833                           
  3834                           ; 2 bytes @ 0x9
  3835     0029                     	ds	2
  3836     002B                     load_buffer@scherm:
  3837                           
  3838                           ; 1 bytes @ 0xB
  3839     002B                     	ds	1
  3840     002C                     ??_load_buffer:
  3841                           
  3842                           ; 1 bytes @ 0xC
  3843     002C                     	ds	8
  3844     0034                     load_buffer@i:
  3845                           
  3846                           ; 2 bytes @ 0x14
  3847     0034                     	ds	2
  3848     0036                     load_buffer@i_981:
  3849                           
  3850                           ; 2 bytes @ 0x16
  3851     0036                     	ds	2
  3852     0038                     load_buffer@i_983:
  3853                           
  3854                           ; 2 bytes @ 0x18
  3855     0038                     	ds	2
  3856     003A                     load_buffer@i_984:
  3857                           
  3858                           ; 2 bytes @ 0x1A
  3859     003A                     	ds	2
  3860     003C                     load_buffer@i_986:
  3861                           
  3862                           ; 2 bytes @ 0x1C
  3863     003C                     	ds	2
  3864     003E                     load_buffer@i_987:
  3865                           
  3866                           ; 2 bytes @ 0x1E
  3867     003E                     	ds	2
  3868     0040                     load_buffer@i_989:
  3869                           
  3870                           ; 2 bytes @ 0x20
  3871     0040                     	ds	2
  3872     0042                     load_buffer@i_990:
  3873                           
  3874                           ; 2 bytes @ 0x22
  3875     0042                     	ds	2
  3876     0044                     load_buffer@i_982:
  3877                           
  3878                           ; 2 bytes @ 0x24
  3879     0044                     	ds	2
  3880     0046                     load_buffer@i_985:
  3881                           
  3882                           ; 2 bytes @ 0x26
  3883     0046                     	ds	2
  3884     0048                     load_buffer@i_988:
  3885                           
  3886                           ; 2 bytes @ 0x28
  3887     0048                     	ds	2
  3888     004A                     load_buffer@i_991:
  3889                           
  3890                           ; 2 bytes @ 0x2A
  3891     004A                     	ds	2
  3892     004C                     ??_input_conversion:
  3893     004C                     ?_text_to_buffer:	
  3894                           ; 1 bytes @ 0x2C
  3895                           
  3896     004C                     ??_volume_conversion:	
  3897                           ; 1 bytes @ 0x2C
  3898                           
  3899     004C                     input_conversion@inputNew:	
  3900                           ; 1 bytes @ 0x2C
  3901                           
  3902     004C                     text_to_buffer@newtext:	
  3903                           ; 1 bytes @ 0x2C
  3904                           
  3905     004C                     volume_conversion@buffer:	
  3906                           ; 1 bytes @ 0x2C
  3907                           
  3908                           
  3909                           ; 2 bytes @ 0x2C
  3910     004C                     	ds	1
  3911     004D                     ??_text_to_buffer:
  3912                           
  3913                           ; 1 bytes @ 0x2D
  3914     004D                     	ds	1
  3915     004E                     text_to_buffer@scherm:
  3916     004E                     volume_conversion@i:	
  3917                           ; 1 bytes @ 0x2E
  3918                           
  3919                           
  3920                           ; 2 bytes @ 0x2E
  3921     004E                     	ds	1
  3922     004F                     text_to_buffer@i:
  3923                           
  3924                           ; 2 bytes @ 0x2F
  3925     004F                     	ds	1
  3926     0050                     volume_conversion@value:
  3927                           
  3928                           ; 1 bytes @ 0x30
  3929     0050                     	ds	1
  3930     0051                     ??_scherm_setup:
  3931                           
  3932                           ; 1 bytes @ 0x31
  3933     0051                     	ds	4
  3934     0055                     scherm_setup@screen2:
  3935                           
  3936                           ; 8 bytes @ 0x35
  3937     0055                     	ds	8
  3938     005D                     scherm_setup@screen1:
  3939                           
  3940                           ; 8 bytes @ 0x3D
  3941     005D                     	ds	8
  3942     0065                     ??_key_detection:
  3943     0065                     key_detection@check:	
  3944                           ; 1 bytes @ 0x45
  3945                           
  3946                           
  3947                           ; 4 bytes @ 0x45
  3948     0065                     	ds	4
  3949     0069                     key_detection@temp_code:
  3950                           
  3951                           ; 4 bytes @ 0x49
  3952     0069                     	ds	4
  3953     006D                     ??_main:
  3954                           
  3955                           	psect	maintext
  3956     0C30                     __pmaintext:	
  3957                           ; 1 bytes @ 0x4D
  3958 ;;
  3959 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3960 ;;
  3961 ;; *************** function _main *****************
  3962 ;; Defined at:
  3963 ;;		line 9 in file "main.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  argc            2    0[BANK1 ] int 
  3966 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  helderheid      1    0        unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  2    0[BANK1 ] int 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : B00/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3978 ;;      Params:         0       0       4       0       0
  3979 ;;      Locals:         0       0       0       0       0
  3980 ;;      Temps:          0       0       0       0       0
  3981 ;;      Totals:         0       0       4       0       0
  3982 ;;Total ram usage:        4 bytes
  3983 ;; Hardware stack levels required when called: 8
  3984 ;; This function calls:
  3985 ;;		_input_conversion
  3986 ;;		_key_detection
  3987 ;;		_pic_init
  3988 ;;		_scherm_init
  3989 ;;		_scherm_setup
  3990 ;;		_send_buffer
  3991 ;;		_spi_init
  3992 ;;		_volume_conversion
  3993 ;; This function is called by:
  3994 ;;		Startup code after reset
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998     0C30                     _main:	
  3999                           ;psect for function _main
  4000                           
  4001     0C30                     l2394:	
  4002                           ;incstack = 0
  4003 ;; using string table level
  4004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4005                           
  4006                           
  4007                           ;main.c: 11:     pic_init();
  4008     0C30  160A  118A  20D6  120A  158A  	fcall	_pic_init
  4009     0C35                     l2396:
  4010                           
  4011                           ;main.c: 12:     spi_init(MST_OSC_DIV_04, SMP1_SDI_END, CKP0_CPOL0_IDLE_LOW, CKE1_CPHA0_
      +                          TRSMIT_ACT2IDL);
  4012     0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4013     0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4014     0C37  01A0               	clrf	spi_init@sdi_rx_smp
  4015     0C38  0AA0               	incf	spi_init@sdi_rx_smp,f
  4016     0C39  01A1               	clrf	spi_init@clock_pol
  4017     0C3A  01A2               	clrf	spi_init@sdo_tx_edge
  4018     0C3B  0AA2               	incf	spi_init@sdo_tx_edge,f
  4019     0C3C  3000               	movlw	0
  4020     0C3D  160A  118A  21D1  120A  158A  	fcall	_spi_init
  4021     0C42                     l2398:
  4022     0C42                     l2400:
  4023                           
  4024                           ;main.c: 14:     scherm_init(helderheid);
  4025     0C42  300F               	movlw	15
  4026     0C43  120A  118A  203B  120A  158A  	fcall	_scherm_init
  4027     0C48                     l2402:
  4028                           
  4029                           ;main.c: 15:     scherm_setup();
  4030     0C48  120A  158A  2379  120A  158A  	fcall	_scherm_setup
  4031     0C4D                     l2404:
  4032                           
  4033                           ;main.c: 18:         if (remote_counter == 12) {
  4034     0C4D  300C               	movlw	12
  4035     0C4E  1683               	bsf	3,5	;RP0=1, select bank1
  4036     0C4F  1303               	bcf	3,6	;RP1=0, select bank1
  4037     0C50  063F               	xorwf	_remote_counter^(0+128),w	;volatile
  4038     0C51  0440               	iorwf	(_remote_counter+1)^(0+128),w	;volatile
  4039     0C52  1D03               	btfss	3,2
  4040     0C53  2C55               	goto	u1741
  4041     0C54  2C56               	goto	u1740
  4042     0C55                     u1741:
  4043     0C55  2C5B               	goto	l2408
  4044     0C56                     u1740:
  4045     0C56                     l2406:
  4046                           
  4047                           ;main.c: 19:             key_detection();
  4048     0C56  120A  158A  2615  120A  158A  	fcall	_key_detection
  4049     0C5B                     l2408:
  4050                           
  4051                           ;main.c: 21:         if(inputChanged == 1){
  4052     0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  4053     0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  4054     0C5D  0330               	decf	_inputChanged^(0+128),w
  4055     0C5E  0431               	iorwf	(_inputChanged+1)^(0+128),w
  4056     0C5F  1D03               	btfss	3,2
  4057     0C60  2C62               	goto	u1751
  4058     0C61  2C63               	goto	u1750
  4059     0C62                     u1751:
  4060     0C62  2C83               	goto	l2418
  4061     0C63                     u1750:
  4062     0C63                     l2410:
  4063                           
  4064                           ;main.c: 22:             input_conversion();
  4065     0C63  160A  118A  20F5  120A  158A  	fcall	_input_conversion
  4066     0C68                     l2412:
  4067                           
  4068                           ;main.c: 23:             PORTA = inputLeds[input - 1];
  4069     0C68  1683               	bsf	3,5	;RP0=1, select bank1
  4070     0C69  1303               	bcf	3,6	;RP1=0, select bank1
  4071     0C6A  0834               	movf	_input^(0+128),w
  4072     0C6B  3E65               	addlw	low ((_inputLeds| (0+32768)+65535))
  4073     0C6C  0084               	movwf	4
  4074     0C6D  308B               	movlw	high ((_inputLeds| (0+32768)+65535))
  4075     0C6E  1803               	skipnc
  4076     0C6F  3E01               	addlw	1
  4077     0C70  1283               	bcf	3,5	;RP0=0, select bank0
  4078     0C71  1303               	bcf	3,6	;RP1=0, select bank0
  4079     0C72  00FF               	movwf	btemp+1
  4080     0C73  120A  118A  2100  120A  158A  	fcall	stringtab
  4081     0C78  0085               	movwf	5	;volatile
  4082     0C79                     l2414:
  4083                           
  4084                           ;main.c: 24:             send_buffer(SCREEN_2);
  4085     0C79  3002               	movlw	2
  4086     0C7A  160A  118A  222C  120A  158A  	fcall	_send_buffer
  4087     0C7F                     l2416:
  4088                           
  4089                           ;main.c: 25:             inputChanged = 0;
  4090     0C7F  1683               	bsf	3,5	;RP0=1, select bank1
  4091     0C80  1303               	bcf	3,6	;RP1=0, select bank1
  4092     0C81  01B0               	clrf	_inputChanged^(0+128)
  4093     0C82  01B1               	clrf	(_inputChanged+1)^(0+128)
  4094     0C83                     l2418:
  4095                           
  4096                           ;main.c: 27:         if(volume != volumeOud){
  4097     0C83  0837               	movf	(_volumeOud+1)^(0+128),w
  4098     0C84  1283               	bcf	3,5	;RP0=0, select bank0
  4099     0C85  1303               	bcf	3,6	;RP1=0, select bank0
  4100     0C86  066E               	xorwf	_volume+1,w
  4101     0C87  1D03               	skipz
  4102     0C88  2C8F               	goto	u1765
  4103     0C89  1683               	bsf	3,5	;RP0=1, select bank1
  4104     0C8A  1303               	bcf	3,6	;RP1=0, select bank1
  4105     0C8B  0836               	movf	_volumeOud^(0+128),w
  4106     0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  4107     0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  4108     0C8E  066D               	xorwf	_volume,w
  4109     0C8F                     u1765:
  4110     0C8F  1903               	skipnz
  4111     0C90  2C92               	goto	u1761
  4112     0C91  2C93               	goto	u1760
  4113     0C92                     u1761:
  4114     0C92  2CAA               	goto	l2424
  4115     0C93                     u1760:
  4116     0C93                     l2420:
  4117                           
  4118                           ;main.c: 28:             volume_conversion();
  4119     0C93  120A  158A  2532  120A  158A  	fcall	_volume_conversion
  4120                           
  4121                           ;main.c: 29:             send_buffer(SCREEN_1);
  4122     0C98  3001               	movlw	1
  4123     0C99  160A  118A  222C  120A  158A  	fcall	_send_buffer
  4124     0C9E                     l2422:
  4125                           
  4126                           ;main.c: 30:             volumeOud = volume;
  4127     0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  4128     0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  4129     0CA0  086E               	movf	_volume+1,w
  4130     0CA1  1683               	bsf	3,5	;RP0=1, select bank1
  4131     0CA2  1303               	bcf	3,6	;RP1=0, select bank1
  4132     0CA3  00B7               	movwf	(_volumeOud+1)^(0+128)
  4133     0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4134     0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  4135     0CA6  086D               	movf	_volume,w
  4136     0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  4137     0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  4138     0CA9  00B6               	movwf	_volumeOud^(0+128)
  4139     0CAA                     l2424:
  4140                           
  4141                           ;main.c: 32:         GO = 1;
  4142     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  4143     0CAB  149F               	bsf	31,1	;volatile
  4144     0CAC  2C4D               	goto	l2404
  4145     0CAD  120A  118A  2810   	ljmp	start
  4146     0CB0                     __end_of_main:
  4147                           
  4148                           	psect	text1
  4149     0D32                     __ptext1:	
  4150 ;; *************** function _volume_conversion *****************
  4151 ;; Defined at:
  4152 ;;		line 17 in file "adc.c"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;  i               2   46[BANK0 ] int 
  4157 ;;  buffer          2   44[BANK0 ] unsigned char [2]
  4158 ;;  value           1   48[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         0       0       0       0       0
  4169 ;;      Locals:         0       5       0       0       0
  4170 ;;      Temps:          0       0       0       0       0
  4171 ;;      Totals:         0       5       0       0       0
  4172 ;;Total ram usage:        5 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 5
  4175 ;; This function calls:
  4176 ;;		_load_buffer
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182     0D32                     _volume_conversion:	
  4183                           ;psect for function _volume_conversion
  4184                           
  4185     0D32                     l2084:	
  4186                           ;incstack = 0
  4187                           ; Regs used in _volume_conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4188                           
  4189                           
  4190                           ;adc.c: 19:     char buffer[2];;adc.c: 20:     char value;;adc.c: 21:     if(volume < 10
      +                          ){
  4191     0D32  1283               	bcf	3,5	;RP0=0, select bank0
  4192     0D33  1303               	bcf	3,6	;RP1=0, select bank0
  4193     0D34  086E               	movf	_volume+1,w
  4194     0D35  3A80               	xorlw	128
  4195     0D36  00FF               	movwf	btemp+1
  4196     0D37  3080               	movlw	128
  4197     0D38  027F               	subwf	btemp+1,w
  4198     0D39  1D03               	skipz
  4199     0D3A  2D3D               	goto	u1375
  4200     0D3B  300A               	movlw	10
  4201     0D3C  026D               	subwf	_volume,w
  4202     0D3D                     u1375:
  4203     0D3D  1803               	skipnc
  4204     0D3E  2D40               	goto	u1371
  4205     0D3F  2D41               	goto	u1370
  4206     0D40                     u1371:
  4207     0D40  2D4A               	goto	l2094
  4208     0D41                     u1370:
  4209     0D41                     l2086:
  4210     0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4211     0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4212     0D43  086D               	movf	_volume,w
  4213     0D44  3E30               	addlw	48
  4214     0D45  00D0               	movwf	volume_conversion@value
  4215     0D46                     l2088:
  4216                           
  4217                           ;adc.c: 23:         buffer[0] = value;
  4218     0D46  0850               	movf	volume_conversion@value,w
  4219     0D47  00CC               	movwf	volume_conversion@buffer
  4220     0D48                     l2090:
  4221     0D48                     l2092:
  4222                           
  4223                           ;adc.c: 25:         buffer[1] = value;
  4224     0D48  01CD               	clrf	volume_conversion@buffer+1
  4225                           
  4226                           ;adc.c: 26:     }
  4227     0D49  2D99               	goto	l2124
  4228     0D4A                     l2094:
  4229     0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  4230     0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  4231     0D4C  086E               	movf	_volume+1,w
  4232     0D4D  3A80               	xorlw	128
  4233     0D4E  00FF               	movwf	btemp+1
  4234     0D4F  3080               	movlw	128
  4235     0D50  027F               	subwf	btemp+1,w
  4236     0D51  1D03               	skipz
  4237     0D52  2D55               	goto	u1385
  4238     0D53  3014               	movlw	20
  4239     0D54  026D               	subwf	_volume,w
  4240     0D55                     u1385:
  4241     0D55  1803               	skipnc
  4242     0D56  2D58               	goto	u1381
  4243     0D57  2D59               	goto	u1380
  4244     0D58                     u1381:
  4245     0D58  2D63               	goto	l2102
  4246     0D59                     u1380:
  4247     0D59                     l2096:
  4248                           
  4249                           ;adc.c: 29:         buffer[0] = value;
  4250     0D59  3031               	movlw	49
  4251     0D5A  1283               	bcf	3,5	;RP0=0, select bank0
  4252     0D5B  1303               	bcf	3,6	;RP1=0, select bank0
  4253     0D5C  00CC               	movwf	volume_conversion@buffer
  4254     0D5D                     l2098:
  4255     0D5D  086D               	movf	_volume,w
  4256     0D5E  3E26               	addlw	38
  4257     0D5F  00D0               	movwf	volume_conversion@value
  4258     0D60                     l2100:
  4259                           
  4260                           ;adc.c: 31:         buffer[1] = value;
  4261     0D60  0850               	movf	volume_conversion@value,w
  4262     0D61  00CD               	movwf	volume_conversion@buffer+1
  4263                           
  4264                           ;adc.c: 32:     }
  4265     0D62  2D99               	goto	l2124
  4266     0D63                     l2102:
  4267     0D63  1283               	bcf	3,5	;RP0=0, select bank0
  4268     0D64  1303               	bcf	3,6	;RP1=0, select bank0
  4269     0D65  086E               	movf	_volume+1,w
  4270     0D66  3A80               	xorlw	128
  4271     0D67  00FF               	movwf	btemp+1
  4272     0D68  3080               	movlw	128
  4273     0D69  027F               	subwf	btemp+1,w
  4274     0D6A  1D03               	skipz
  4275     0D6B  2D6E               	goto	u1395
  4276     0D6C  301E               	movlw	30
  4277     0D6D  026D               	subwf	_volume,w
  4278     0D6E                     u1395:
  4279     0D6E  1803               	skipnc
  4280     0D6F  2D71               	goto	u1391
  4281     0D70  2D72               	goto	u1390
  4282     0D71                     u1391:
  4283     0D71  2D7A               	goto	l2110
  4284     0D72                     u1390:
  4285     0D72                     l2104:
  4286                           
  4287                           ;adc.c: 35:         buffer[0] = value;
  4288     0D72  3032               	movlw	50
  4289     0D73  1283               	bcf	3,5	;RP0=0, select bank0
  4290     0D74  1303               	bcf	3,6	;RP1=0, select bank0
  4291     0D75  00CC               	movwf	volume_conversion@buffer
  4292     0D76                     l2106:
  4293     0D76  086D               	movf	_volume,w
  4294     0D77  3E1C               	addlw	28
  4295     0D78  00D0               	movwf	volume_conversion@value
  4296     0D79  2D60               	goto	l2100
  4297     0D7A                     l2110:
  4298     0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  4299     0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  4300     0D7C  086E               	movf	_volume+1,w
  4301     0D7D  3A80               	xorlw	128
  4302     0D7E  00FF               	movwf	btemp+1
  4303     0D7F  3080               	movlw	128
  4304     0D80  027F               	subwf	btemp+1,w
  4305     0D81  1D03               	skipz
  4306     0D82  2D85               	goto	u1405
  4307     0D83  3028               	movlw	40
  4308     0D84  026D               	subwf	_volume,w
  4309     0D85                     u1405:
  4310     0D85  1803               	skipnc
  4311     0D86  2D88               	goto	u1401
  4312     0D87  2D89               	goto	u1400
  4313     0D88                     u1401:
  4314     0D88  2D91               	goto	l2118
  4315     0D89                     u1400:
  4316     0D89                     l2112:
  4317                           
  4318                           ;adc.c: 41:         buffer[0] = value;
  4319     0D89  3033               	movlw	51
  4320     0D8A  1283               	bcf	3,5	;RP0=0, select bank0
  4321     0D8B  1303               	bcf	3,6	;RP1=0, select bank0
  4322     0D8C  00CC               	movwf	volume_conversion@buffer
  4323     0D8D                     l2114:
  4324     0D8D  086D               	movf	_volume,w
  4325     0D8E  3E12               	addlw	18
  4326     0D8F  00D0               	movwf	volume_conversion@value
  4327     0D90  2D60               	goto	l2100
  4328     0D91                     l2118:
  4329                           
  4330                           ;adc.c: 47:         buffer[0] = value;
  4331     0D91  3034               	movlw	52
  4332     0D92  1283               	bcf	3,5	;RP0=0, select bank0
  4333     0D93  1303               	bcf	3,6	;RP1=0, select bank0
  4334     0D94  00CC               	movwf	volume_conversion@buffer
  4335     0D95                     l2120:
  4336     0D95  086D               	movf	_volume,w
  4337     0D96  3E08               	addlw	8
  4338     0D97  00D0               	movwf	volume_conversion@value
  4339     0D98  2D60               	goto	l2100
  4340     0D99                     l2124:
  4341                           
  4342                           ;adc.c: 52:     for(int i = 0; i < 2; i++){
  4343     0D99  01CE               	clrf	volume_conversion@i
  4344     0D9A  01CF               	clrf	volume_conversion@i+1
  4345     0D9B                     l2130:
  4346                           
  4347                           ;adc.c: 53:         if(buffer[i] == '\0'){
  4348     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  4349     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  4350     0D9D  084E               	movf	volume_conversion@i,w
  4351     0D9E  3E4C               	addlw	(low (volume_conversion@buffer| 0))& (0+255)
  4352     0D9F  0084               	movwf	4
  4353     0DA0  1383               	bcf	3,7	;select IRP bank0
  4354     0DA1  0800               	movf	0,w
  4355     0DA2  1D03               	btfss	3,2
  4356     0DA3  2DA5               	goto	u1411
  4357     0DA4  2DA6               	goto	u1410
  4358     0DA5                     u1411:
  4359     0DA5  2DC6               	goto	l2138
  4360     0DA6                     u1410:
  4361     0DA6                     l2132:
  4362                           
  4363                           ;adc.c: 54:             if(i == 1){
  4364     0DA6  034E               	decf	volume_conversion@i,w
  4365     0DA7  044F               	iorwf	volume_conversion@i+1,w
  4366     0DA8  1D03               	btfss	3,2
  4367     0DA9  2DAB               	goto	u1421
  4368     0DAA  2DAC               	goto	u1420
  4369     0DAB                     u1421:
  4370     0DAB  2DFB               	goto	l2144
  4371     0DAC                     u1420:
  4372     0DAC                     l2134:
  4373                           
  4374                           ;adc.c: 55:                 load_buffer(num_of_lang ,' ',5,SCREEN_1);
  4375     0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  4376     0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  4377     0DAE  0844               	movf	(_num_of_lang+1)^(0+128),w
  4378     0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  4379     0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  4380     0DB1  00A7               	movwf	load_buffer@lang+1
  4381     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  4382     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  4383     0DB4  0843               	movf	_num_of_lang^(0+128),w
  4384     0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  4385     0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  4386     0DB7  00A6               	movwf	load_buffer@lang
  4387     0DB8  3020               	movlw	32
  4388     0DB9  00A8               	movwf	load_buffer@character
  4389     0DBA  3005               	movlw	5
  4390     0DBB  00A9               	movwf	load_buffer@position
  4391     0DBC  3000               	movlw	0
  4392     0DBD  00AA               	movwf	load_buffer@position+1
  4393     0DBE  01AB               	clrf	load_buffer@scherm
  4394     0DBF  0AAB               	incf	load_buffer@scherm,f
  4395     0DC0  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4396     0DC5  2DFB               	goto	l2144
  4397     0DC6                     l2138:
  4398                           
  4399                           ;adc.c: 60:             load_buffer(num_of_lang ,buffer[i],i+4, SCREEN_1);
  4400     0DC6  1683               	bsf	3,5	;RP0=1, select bank1
  4401     0DC7  1303               	bcf	3,6	;RP1=0, select bank1
  4402     0DC8  0844               	movf	(_num_of_lang+1)^(0+128),w
  4403     0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  4404     0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  4405     0DCB  00A7               	movwf	load_buffer@lang+1
  4406     0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  4407     0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  4408     0DCE  0843               	movf	_num_of_lang^(0+128),w
  4409     0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  4410     0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  4411     0DD1  00A6               	movwf	load_buffer@lang
  4412     0DD2  084E               	movf	volume_conversion@i,w
  4413     0DD3  3E4C               	addlw	(low (volume_conversion@buffer| 0))& (0+255)
  4414     0DD4  0084               	movwf	4
  4415     0DD5  0800               	movf	0,w
  4416     0DD6  00A8               	movwf	load_buffer@character
  4417     0DD7  084E               	movf	volume_conversion@i,w
  4418     0DD8  3E04               	addlw	4
  4419     0DD9  00A9               	movwf	load_buffer@position
  4420     0DDA  084F               	movf	volume_conversion@i+1,w
  4421     0DDB  1803               	skipnc
  4422     0DDC  3E01               	addlw	1
  4423     0DDD  3E00               	addlw	0
  4424     0DDE  00AA               	movwf	load_buffer@position+1
  4425     0DDF  01AB               	clrf	load_buffer@scherm
  4426     0DE0  0AAB               	incf	load_buffer@scherm,f
  4427     0DE1  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4428     0DE6                     l2140:
  4429                           
  4430                           ;adc.c: 62:     }
  4431     0DE6  3001               	movlw	1
  4432     0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  4433     0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  4434     0DE9  07CE               	addwf	volume_conversion@i,f
  4435     0DEA  1803               	skipnc
  4436     0DEB  0ACF               	incf	volume_conversion@i+1,f
  4437     0DEC  3000               	movlw	0
  4438     0DED  07CF               	addwf	volume_conversion@i+1,f
  4439     0DEE                     l2142:
  4440     0DEE  084F               	movf	volume_conversion@i+1,w
  4441     0DEF  3A80               	xorlw	128
  4442     0DF0  00FF               	movwf	btemp+1
  4443     0DF1  3080               	movlw	128
  4444     0DF2  027F               	subwf	btemp+1,w
  4445     0DF3  1D03               	skipz
  4446     0DF4  2DF7               	goto	u1435
  4447     0DF5  3002               	movlw	2
  4448     0DF6  024E               	subwf	volume_conversion@i,w
  4449     0DF7                     u1435:
  4450     0DF7  1C03               	skipc
  4451     0DF8  2DFA               	goto	u1431
  4452     0DF9  2DFB               	goto	u1430
  4453     0DFA                     u1431:
  4454     0DFA  2D9B               	goto	l2130
  4455     0DFB                     u1430:
  4456     0DFB                     l2144:
  4457                           
  4458                           ;adc.c: 63:     load_buffer(num_of_lang ,' ', 7, SCREEN_1);
  4459     0DFB  1683               	bsf	3,5	;RP0=1, select bank1
  4460     0DFC  1303               	bcf	3,6	;RP1=0, select bank1
  4461     0DFD  0844               	movf	(_num_of_lang+1)^(0+128),w
  4462     0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  4463     0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  4464     0E00  00A7               	movwf	load_buffer@lang+1
  4465     0E01  1683               	bsf	3,5	;RP0=1, select bank1
  4466     0E02  1303               	bcf	3,6	;RP1=0, select bank1
  4467     0E03  0843               	movf	_num_of_lang^(0+128),w
  4468     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4469     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4470     0E06  00A6               	movwf	load_buffer@lang
  4471     0E07  3020               	movlw	32
  4472     0E08  00A8               	movwf	load_buffer@character
  4473     0E09  3007               	movlw	7
  4474     0E0A  00A9               	movwf	load_buffer@position
  4475     0E0B  3000               	movlw	0
  4476     0E0C  00AA               	movwf	load_buffer@position+1
  4477     0E0D  01AB               	clrf	load_buffer@scherm
  4478     0E0E  0AAB               	incf	load_buffer@scherm,f
  4479     0E0F  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4480     0E14                     l66:
  4481     0E14  0008               	return
  4482     0E15                     __end_of_volume_conversion:
  4483                           
  4484                           	psect	text2
  4485     11D1                     __ptext2:	
  4486 ;; *************** function _spi_init *****************
  4487 ;; Defined at:
  4488 ;;		line 14 in file "spi.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  mst_slv_oscd    1    wreg     enum E1420
  4491 ;;  sdi_rx_smp      1    0[BANK0 ] enum E1428
  4492 ;;  clock_pol       1    1[BANK0 ] enum E1432
  4493 ;;  sdo_tx_edge     1    2[BANK0 ] enum E1436
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  mst_slv_oscd    1    3[BANK0 ] enum E1420
  4496 ;; Return value:  Size  Location     Type
  4497 ;;                  1    wreg      void 
  4498 ;; Registers used:
  4499 ;;		wreg, status,2, status,0, btemp+1
  4500 ;; Tracked objects:
  4501 ;;		On entry : 0/0
  4502 ;;		On exit  : 0/0
  4503 ;;		Unchanged: 0/0
  4504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4505 ;;      Params:         0       3       0       0       0
  4506 ;;      Locals:         0       1       0       0       0
  4507 ;;      Temps:          0       0       0       0       0
  4508 ;;      Totals:         0       4       0       0       0
  4509 ;;Total ram usage:        4 bytes
  4510 ;; Hardware stack levels used: 1
  4511 ;; Hardware stack levels required when called: 3
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_main
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519     11D1                     _spi_init:	
  4520                           ;psect for function _spi_init
  4521                           
  4522                           
  4523                           ;incstack = 0
  4524                           ; Regs used in _spi_init: [wreg+status,2+status,0+btemp+1]
  4525                           ;spi_init@mst_slv_oscdiv stored from wreg
  4526     11D1  1283               	bcf	3,5	;RP0=0, select bank0
  4527     11D2  1303               	bcf	3,6	;RP1=0, select bank0
  4528     11D3  00A3               	movwf	spi_init@mst_slv_oscdiv
  4529     11D4                     l2152:
  4530                           
  4531                           ;spi.c: 17:     SSPCONbits.SSPM = mst_slv_oscdiv;
  4532     11D4  0814               	movf	20,w	;volatile
  4533     11D5  0623               	xorwf	spi_init@mst_slv_oscdiv,w
  4534     11D6  39F0               	andlw	-16
  4535     11D7  0623               	xorwf	spi_init@mst_slv_oscdiv,w
  4536     11D8  0094               	movwf	20	;volatile
  4537     11D9                     l2154:
  4538                           
  4539                           ;spi.c: 19:     TRISCbits.TRISC5 = 0;
  4540     11D9  1683               	bsf	3,5	;RP0=1, select bank1
  4541     11DA  1303               	bcf	3,6	;RP1=0, select bank1
  4542     11DB  1287               	bcf	7,5	;volatile
  4543     11DC                     l2156:
  4544                           
  4545                           ;spi.c: 20:     TRISCbits.TRISC4 = 0;
  4546     11DC  1207               	bcf	7,4	;volatile
  4547     11DD                     l2158:
  4548                           
  4549                           ;spi.c: 29:     if(mst_slv_oscdiv > 3){
  4550     11DD  3004               	movlw	4
  4551     11DE  1283               	bcf	3,5	;RP0=0, select bank0
  4552     11DF  1303               	bcf	3,6	;RP1=0, select bank0
  4553     11E0  0223               	subwf	spi_init@mst_slv_oscdiv,w
  4554     11E1  1C03               	skipc
  4555     11E2  29E4               	goto	u1441
  4556     11E3  29E5               	goto	u1440
  4557     11E4                     u1441:
  4558     11E4  29F6               	goto	l2162
  4559     11E5                     u1440:
  4560     11E5                     l2160:
  4561                           
  4562                           ;spi.c: 30:         SSPSTATbits.SMP = 0;
  4563     11E5  1683               	bsf	3,5	;RP0=1, select bank1
  4564     11E6  1303               	bcf	3,6	;RP1=0, select bank1
  4565     11E7  1394               	bcf	20,7	;volatile
  4566                           
  4567                           ;spi.c: 31:         TRISCbits.TRISC3 = 1;
  4568     11E8  1587               	bsf	7,3	;volatile
  4569                           
  4570                           ;spi.c: 32:         SSPCONbits.CKP = PORTCbits.RC3;
  4571     11E9  1283               	bcf	3,5	;RP0=0, select bank0
  4572     11EA  1303               	bcf	3,6	;RP1=0, select bank0
  4573     11EB  1987               	btfsc	7,3	;volatile
  4574     11EC  29EE               	goto	u1451
  4575     11ED  29F2               	goto	u1450
  4576     11EE                     u1451:
  4577     11EE  1283               	bcf	3,5	;RP0=0, select bank0
  4578     11EF  1303               	bcf	3,6	;RP1=0, select bank0
  4579     11F0  1614               	bsf	20,4	;volatile
  4580     11F1  29F5               	goto	u1464
  4581     11F2                     u1450:
  4582     11F2  1283               	bcf	3,5	;RP0=0, select bank0
  4583     11F3  1303               	bcf	3,6	;RP1=0, select bank0
  4584     11F4  1214               	bcf	20,4	;volatile
  4585     11F5                     u1464:
  4586                           
  4587                           ;spi.c: 33:     }
  4588     11F5  2A05               	goto	l546
  4589     11F6                     l2162:
  4590                           
  4591                           ;spi.c: 41:         SSPSTATbits.SMP = sdi_rx_smp;
  4592     11F6  0C20               	rrf	spi_init@sdi_rx_smp,w
  4593     11F7  1683               	bsf	3,5	;RP0=1, select bank1
  4594     11F8  1303               	bcf	3,6	;RP1=0, select bank1
  4595     11F9  1C03               	skipc
  4596     11FA  1394               	bcf	20,7	;volatile
  4597     11FB  1803               	skipnc
  4598     11FC  1794               	bsf	20,7	;volatile
  4599     11FD                     l2164:
  4600                           
  4601                           ;spi.c: 42:         TRISCbits.TRISC3 = 0;
  4602     11FD  1187               	bcf	7,3	;volatile
  4603                           
  4604                           ;spi.c: 43:         SSPCONbits.CKP = clock_pol;
  4605     11FE  1283               	bcf	3,5	;RP0=0, select bank0
  4606     11FF  1303               	bcf	3,6	;RP1=0, select bank0
  4607     1200  0C21               	rrf	spi_init@clock_pol,w
  4608     1201  1C03               	skipc
  4609     1202  1214               	bcf	20,4	;volatile
  4610     1203  1803               	skipnc
  4611     1204  1614               	bsf	20,4	;volatile
  4612     1205                     l546:	
  4613                           ;spi.c: 44:     }
  4614                           
  4615                           
  4616                           ;spi.c: 50:     SSPSTATbits.CKE = sdo_tx_edge;
  4617     1205  0C22               	rrf	spi_init@sdo_tx_edge,w
  4618     1206  1683               	bsf	3,5	;RP0=1, select bank1
  4619     1207  1303               	bcf	3,6	;RP1=0, select bank1
  4620     1208  1C03               	skipc
  4621     1209  1314               	bcf	20,6	;volatile
  4622     120A  1803               	skipnc
  4623     120B  1714               	bsf	20,6	;volatile
  4624     120C                     l2166:
  4625                           
  4626                           ;spi.c: 51:     if(clock_pol == 1 || PORTCbits.RC3 == 1){
  4627     120C  1283               	bcf	3,5	;RP0=0, select bank0
  4628     120D  1303               	bcf	3,6	;RP1=0, select bank0
  4629     120E  0321               	decf	spi_init@clock_pol,w
  4630     120F  1903               	btfsc	3,2
  4631     1210  2A12               	goto	u1471
  4632     1211  2A13               	goto	u1470
  4633     1212                     u1471:
  4634     1212  2A17               	goto	l2170
  4635     1213                     u1470:
  4636     1213                     l2168:
  4637     1213  1D87               	btfss	7,3	;volatile
  4638     1214  2A16               	goto	u1481
  4639     1215  2A17               	goto	u1480
  4640     1216                     u1481:
  4641     1216  2A29               	goto	l2172
  4642     1217                     u1480:
  4643     1217                     l2170:
  4644                           
  4645                           ;spi.c: 52:         SSPSTATbits.CKE ^= 1;
  4646     1217  1683               	bsf	3,5	;RP0=1, select bank1
  4647     1218  1303               	bcf	3,6	;RP1=0, select bank1
  4648     1219  0E14               	swapf	20,w	;volatile
  4649     121A  00FF               	movwf	btemp+1
  4650     121B  0CFF               	rrf	btemp+1,f
  4651     121C  0C7F               	rrf	btemp+1,w
  4652     121D  3901               	andlw	1
  4653     121E  00FF               	movwf	btemp+1
  4654     121F  3001               	movlw	1
  4655     1220  06FF               	xorwf	btemp+1,f
  4656     1221  0EFF               	swapf	btemp+1,f
  4657     1222  0DFF               	rlf	btemp+1,f
  4658     1223  0DFF               	rlf	btemp+1,f
  4659     1224  0814               	movf	20,w	;volatile
  4660     1225  067F               	xorwf	btemp+1,w
  4661     1226  39BF               	andlw	-65
  4662     1227  067F               	xorwf	btemp+1,w
  4663     1228  0094               	movwf	20	;volatile
  4664     1229                     l2172:
  4665                           
  4666                           ;spi.c: 55:     SSPCONbits.SSPEN = 1;
  4667     1229  1283               	bcf	3,5	;RP0=0, select bank0
  4668     122A  1694               	bsf	20,5	;volatile
  4669     122B                     l550:
  4670     122B  0008               	return
  4671     122C                     __end_of_spi_init:
  4672                           
  4673                           	psect	text3
  4674     003B                     __ptext3:	
  4675 ;; *************** function _scherm_init *****************
  4676 ;; Defined at:
  4677 ;;		line 3 in file "scherm.c"
  4678 ;; Parameters:    Size  Location     Type
  4679 ;;  helderheid      1    wreg     unsigned char 
  4680 ;; Auto vars:     Size  Location     Type
  4681 ;;  helderheid      1    4[BANK0 ] unsigned char 
  4682 ;;  i               2    2[BANK0 ] int 
  4683 ;;  controlWord_    1    6[BANK0 ] unsigned char 
  4684 ;;  controlWord_    1    5[BANK0 ] unsigned char 
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 0/0
  4691 ;;		On exit  : 0/0
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4694 ;;      Params:         0       0       0       0       0
  4695 ;;      Locals:         0       5       0       0       0
  4696 ;;      Temps:          0       1       0       0       0
  4697 ;;      Totals:         0       6       0       0       0
  4698 ;;Total ram usage:        6 bytes
  4699 ;; Hardware stack levels used: 1
  4700 ;; Hardware stack levels required when called: 4
  4701 ;; This function calls:
  4702 ;;		_screen_transmit
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;; This function uses a non-reentrant model
  4706 ;;
  4707                           
  4708     003B                     _scherm_init:	
  4709                           ;psect for function _scherm_init
  4710                           
  4711                           
  4712                           ;incstack = 0
  4713                           ; Regs used in _scherm_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4714                           ;scherm_init@helderheid stored from wreg
  4715     003B  1283               	bcf	3,5	;RP0=0, select bank0
  4716     003C  1303               	bcf	3,6	;RP1=0, select bank0
  4717     003D  00A4               	movwf	scherm_init@helderheid
  4718     003E                     l2174:
  4719                           
  4720                           ;scherm.c: 4:     char controlWord_0 = 0b01110000;
  4721     003E  3070               	movlw	112
  4722     003F  00A6               	movwf	scherm_init@controlWord_0
  4723                           
  4724                           ;scherm.c: 5:     char controlWord_1 = 0b10000000;
  4725     0040  3080               	movlw	128
  4726     0041  00A5               	movwf	scherm_init@controlWord_1
  4727                           
  4728                           ;scherm.c: 7:     if (helderheid > 15) {
  4729     0042  3010               	movlw	16
  4730     0043  0224               	subwf	scherm_init@helderheid,w
  4731     0044  1C03               	skipc
  4732     0045  2847               	goto	u1491
  4733     0046  2848               	goto	u1490
  4734     0047                     u1491:
  4735     0047  284A               	goto	l2178
  4736     0048                     u1490:
  4737     0048                     l2176:
  4738                           
  4739                           ;scherm.c: 8:         helderheid = 15;
  4740     0048  300F               	movlw	15
  4741     0049  00A4               	movwf	scherm_init@helderheid
  4742     004A                     l2178:
  4743                           
  4744                           ;scherm.c: 11:     controlWord_0 = controlWord_0 + helderheid;
  4745     004A  0824               	movf	scherm_init@helderheid,w
  4746     004B  0726               	addwf	scherm_init@controlWord_0,w
  4747     004C  00A6               	movwf	scherm_init@controlWord_0
  4748     004D                     l2180:
  4749                           
  4750                           ;scherm.c: 13:     PORTCbits.RC2 = 1;
  4751     004D  1507               	bsf	7,2	;volatile
  4752     004E                     l2182:
  4753                           
  4754                           ;scherm.c: 14:     PORTCbits.RC4 = 1;
  4755     004E  1607               	bsf	7,4	;volatile
  4756     004F                     l2184:
  4757                           
  4758                           ;scherm.c: 15:     PORTCbits.RC6 = 0;
  4759     004F  1307               	bcf	7,6	;volatile
  4760     0050                     l2186:
  4761                           
  4762                           ;scherm.c: 16:     PORTCbits.RC7 = 1;
  4763     0050  1787               	bsf	7,7	;volatile
  4764     0051                     l2188:
  4765                           
  4766                           ;scherm.c: 18:     PORTDbits.RD2 = 1;
  4767     0051  1508               	bsf	8,2	;volatile
  4768     0052                     l2190:
  4769                           
  4770                           ;scherm.c: 19:     PORTDbits.RD4 = 1;
  4771     0052  1608               	bsf	8,4	;volatile
  4772     0053                     l2192:
  4773                           
  4774                           ;scherm.c: 20:     PORTDbits.RD6 = 0;
  4775     0053  1308               	bcf	8,6	;volatile
  4776     0054                     l2194:
  4777                           
  4778                           ;scherm.c: 21:     PORTDbits.RD7 = 1;
  4779     0054  1788               	bsf	8,7	;volatile
  4780     0055                     l2196:
  4781                           
  4782                           ;scherm.c: 23:     PORTCbits.RC2 = 0;
  4783     0055  1107               	bcf	7,2	;volatile
  4784     0056                     l2198:
  4785                           
  4786                           ;scherm.c: 24:     PORTDbits.RD2 = 0;
  4787     0056  1108               	bcf	8,2	;volatile
  4788     0057                     l2200:
  4789                           
  4790                           ;scherm.c: 25:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4791     0057  3007               	movlw	7
  4792     0058  1283               	bcf	3,5	;RP0=0, select bank0
  4793     0059  1303               	bcf	3,6	;RP1=0, select bank0
  4794     005A  00A1               	movwf	??_scherm_init
  4795     005B                     u1817:
  4796     005B  0BA1               	decfsz	??_scherm_init,f
  4797     005C  285B               	goto	u1817
  4798     005D  0000               	nop
  4799     005E                     l2202:
  4800                           
  4801                           ;scherm.c: 26:     PORTCbits.RC2 = 1;
  4802     005E  1283               	bcf	3,5	;RP0=0, select bank0
  4803     005F  1303               	bcf	3,6	;RP1=0, select bank0
  4804     0060  1507               	bsf	7,2	;volatile
  4805     0061                     l2204:
  4806                           
  4807                           ;scherm.c: 27:     PORTDbits.RD2 = 1;
  4808     0061  1508               	bsf	8,2	;volatile
  4809     0062                     l2206:
  4810                           
  4811                           ;scherm.c: 29:     PORTCbits.RC7 = 0;
  4812     0062  1387               	bcf	7,7	;volatile
  4813     0063                     l2208:
  4814                           
  4815                           ;scherm.c: 30:     PORTDbits.RD7 = 0;
  4816     0063  1388               	bcf	8,7	;volatile
  4817     0064                     l2210:
  4818                           
  4819                           ;scherm.c: 32:     PORTCbits.RC4 = 0;
  4820     0064  1207               	bcf	7,4	;volatile
  4821     0065                     l2212:
  4822                           
  4823                           ;scherm.c: 33:     PORTDbits.RD4 = 0;
  4824     0065  1208               	bcf	8,4	;volatile
  4825     0066                     l2214:
  4826                           
  4827                           ;scherm.c: 34:     for (int i = 0; i < 40; i++) {
  4828     0066  01A2               	clrf	scherm_init@i
  4829     0067  01A3               	clrf	scherm_init@i+1
  4830     0068                     l2220:
  4831                           
  4832                           ;scherm.c: 35:         screen_transmit(0b00000000);
  4833     0068  3000               	movlw	0
  4834     0069  160A  118A  2024  120A  118A  	fcall	_screen_transmit
  4835     006E                     l2222:
  4836                           
  4837                           ;scherm.c: 36:     }
  4838     006E  3001               	movlw	1
  4839     006F  1283               	bcf	3,5	;RP0=0, select bank0
  4840     0070  1303               	bcf	3,6	;RP1=0, select bank0
  4841     0071  07A2               	addwf	scherm_init@i,f
  4842     0072  1803               	skipnc
  4843     0073  0AA3               	incf	scherm_init@i+1,f
  4844     0074  3000               	movlw	0
  4845     0075  07A3               	addwf	scherm_init@i+1,f
  4846     0076                     l2224:
  4847     0076  0823               	movf	scherm_init@i+1,w
  4848     0077  3A80               	xorlw	128
  4849     0078  00FF               	movwf	btemp+1
  4850     0079  3080               	movlw	128
  4851     007A  027F               	subwf	btemp+1,w
  4852     007B  1D03               	skipz
  4853     007C  287F               	goto	u1505
  4854     007D  3028               	movlw	40
  4855     007E  0222               	subwf	scherm_init@i,w
  4856     007F                     u1505:
  4857     007F  1C03               	skipc
  4858     0080  2882               	goto	u1501
  4859     0081  2883               	goto	u1500
  4860     0082                     u1501:
  4861     0082  2868               	goto	l2220
  4862     0083                     u1500:
  4863     0083                     l2226:
  4864                           
  4865                           ;scherm.c: 37:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4866     0083  3007               	movlw	7
  4867     0084  1283               	bcf	3,5	;RP0=0, select bank0
  4868     0085  1303               	bcf	3,6	;RP1=0, select bank0
  4869     0086  00A1               	movwf	??_scherm_init
  4870     0087                     u1827:
  4871     0087  0BA1               	decfsz	??_scherm_init,f
  4872     0088  2887               	goto	u1827
  4873     0089  0000               	nop
  4874     008A                     l2228:
  4875                           
  4876                           ;scherm.c: 38:     PORTCbits.RC4 = 1;
  4877     008A  1283               	bcf	3,5	;RP0=0, select bank0
  4878     008B  1303               	bcf	3,6	;RP1=0, select bank0
  4879     008C  1607               	bsf	7,4	;volatile
  4880     008D                     l2230:
  4881                           
  4882                           ;scherm.c: 39:     PORTDbits.RD4 = 1;
  4883     008D  1608               	bsf	8,4	;volatile
  4884     008E                     l2232:
  4885                           
  4886                           ;scherm.c: 41:     PORTCbits.RC7 = 1;
  4887     008E  1787               	bsf	7,7	;volatile
  4888     008F                     l2234:
  4889                           
  4890                           ;scherm.c: 42:     PORTDbits.RD7 = 1;
  4891     008F  1788               	bsf	8,7	;volatile
  4892     0090                     l2236:
  4893                           
  4894                           ;scherm.c: 45:     PORTCbits.RC4 = 0;
  4895     0090  1207               	bcf	7,4	;volatile
  4896     0091                     l2238:
  4897                           
  4898                           ;scherm.c: 46:     PORTDbits.RD4 = 0;
  4899     0091  1208               	bcf	8,4	;volatile
  4900     0092                     l2240:
  4901                           
  4902                           ;scherm.c: 48:     screen_transmit(controlWord_0);
  4903     0092  0826               	movf	scherm_init@controlWord_0,w
  4904     0093  160A  118A  2024  120A  118A  	fcall	_screen_transmit
  4905     0098                     l2242:
  4906                           
  4907                           ;scherm.c: 49:     screen_transmit(controlWord_0);
  4908     0098  1283               	bcf	3,5	;RP0=0, select bank0
  4909     0099  1303               	bcf	3,6	;RP1=0, select bank0
  4910     009A  0826               	movf	scherm_init@controlWord_0,w
  4911     009B  160A  118A  2024  120A  118A  	fcall	_screen_transmit
  4912                           
  4913                           ;scherm.c: 50:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4914     00A0  3007               	movlw	7
  4915     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  4916     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  4917     00A3  00A1               	movwf	??_scherm_init
  4918     00A4                     u1837:
  4919     00A4  0BA1               	decfsz	??_scherm_init,f
  4920     00A5  28A4               	goto	u1837
  4921     00A6  0000               	nop
  4922     00A7                     l2244:
  4923                           
  4924                           ;scherm.c: 52:     PORTCbits.RC4 = 1;
  4925     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  4926     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  4927     00A9  1607               	bsf	7,4	;volatile
  4928     00AA                     l2246:
  4929                           
  4930                           ;scherm.c: 53:     PORTDbits.RD4 = 1;
  4931     00AA  1608               	bsf	8,4	;volatile
  4932     00AB                     l2248:
  4933                           
  4934                           ;scherm.c: 56:     PORTCbits.RC4 = 0;
  4935     00AB  1207               	bcf	7,4	;volatile
  4936     00AC                     l2250:
  4937                           
  4938                           ;scherm.c: 57:     PORTDbits.RD4 = 0;
  4939     00AC  1208               	bcf	8,4	;volatile
  4940     00AD                     l2252:
  4941                           
  4942                           ;scherm.c: 59:     screen_transmit(controlWord_1);
  4943     00AD  0825               	movf	scherm_init@controlWord_1,w
  4944     00AE  160A  118A  2024  120A  118A  	fcall	_screen_transmit
  4945     00B3                     l2254:
  4946                           
  4947                           ;scherm.c: 60:     screen_transmit(controlWord_1);
  4948     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  4949     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  4950     00B5  0825               	movf	scherm_init@controlWord_1,w
  4951     00B6  160A  118A  2024  120A  118A  	fcall	_screen_transmit
  4952                           
  4953                           ;scherm.c: 61:     _delay((unsigned long)((200)*(500000/4000000.0)));
  4954     00BB  3007               	movlw	7
  4955     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4956     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4957     00BE  00A1               	movwf	??_scherm_init
  4958     00BF                     u1847:
  4959     00BF  0BA1               	decfsz	??_scherm_init,f
  4960     00C0  28BF               	goto	u1847
  4961     00C1  0000               	nop
  4962     00C2                     l2256:
  4963                           
  4964                           ;scherm.c: 63:     PORTCbits.RC4 = 1;
  4965     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  4966     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  4967     00C4  1607               	bsf	7,4	;volatile
  4968     00C5                     l2258:
  4969                           
  4970                           ;scherm.c: 64:     PORTDbits.RD4 = 1;
  4971     00C5  1608               	bsf	8,4	;volatile
  4972     00C6                     l2260:
  4973                           
  4974                           ;scherm.c: 66:     PORTCbits.RC7 = 0;
  4975     00C6  1387               	bcf	7,7	;volatile
  4976     00C7                     l2262:
  4977                           
  4978                           ;scherm.c: 67:     PORTDbits.RD7 = 0;
  4979     00C7  1388               	bcf	8,7	;volatile
  4980     00C8                     l455:
  4981     00C8  0008               	return
  4982     00C9                     __end_of_scherm_init:
  4983                           
  4984                           	psect	text4
  4985     10D6                     __ptext4:	
  4986 ;; *************** function _pic_init *****************
  4987 ;; Defined at:
  4988 ;;		line 3 in file "init.c"
  4989 ;; Parameters:    Size  Location     Type
  4990 ;;		None
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      void 
  4995 ;; Registers used:
  4996 ;;		wreg, status,2, status,0, pclath, cstack
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5002 ;;      Params:         0       0       0       0       0
  5003 ;;      Locals:         0       0       0       0       0
  5004 ;;      Temps:          0       0       0       0       0
  5005 ;;      Totals:         0       0       0       0       0
  5006 ;;Total ram usage:        0 bytes
  5007 ;; Hardware stack levels used: 1
  5008 ;; Hardware stack levels required when called: 4
  5009 ;; This function calls:
  5010 ;;		_adc_init
  5011 ;;		_init_osc
  5012 ;;		_interrupt_init
  5013 ;;		_pins_init
  5014 ;;		_ports_init
  5015 ;;		_timer_init
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021     10D6                     _pic_init:	
  5022                           ;psect for function _pic_init
  5023                           
  5024     10D6                     l2146:	
  5025                           ;incstack = 0
  5026                           ; Regs used in _pic_init: [wreg+status,2+status,0+pclath+cstack]
  5027                           
  5028                           
  5029                           ;init.c: 4:     init_osc();
  5030     10D6  160A  118A  203A  160A  118A  	fcall	_init_osc
  5031                           
  5032                           ;init.c: 5:     ports_init();
  5033     10DB  160A  118A  2065  160A  118A  	fcall	_ports_init
  5034     10E0                     l2148:
  5035                           
  5036                           ;init.c: 6:     pins_init();
  5037     10E0  160A  118A  2045  160A  118A  	fcall	_pins_init
  5038     10E5                     l2150:
  5039                           
  5040                           ;init.c: 7:     interrupt_init();
  5041     10E5  160A  118A  2079  160A  118A  	fcall	_interrupt_init
  5042                           
  5043                           ;init.c: 8:     timer_init();
  5044     10EA  160A  118A  202A  160A  118A  	fcall	_timer_init
  5045                           
  5046                           ;init.c: 9:     adc_init();
  5047     10EF  160A  118A  20A6  160A  118A  	fcall	_adc_init
  5048     10F4                     l145:
  5049     10F4  0008               	return
  5050     10F5                     __end_of_pic_init:
  5051                           
  5052                           	psect	text5
  5053     102A                     __ptext5:	
  5054 ;; *************** function _timer_init *****************
  5055 ;; Defined at:
  5056 ;;		line 60 in file "init.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;		None
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       0       0       0       0
  5071 ;;      Locals:         0       0       0       0       0
  5072 ;;      Temps:          0       0       0       0       0
  5073 ;;      Totals:         0       0       0       0       0
  5074 ;;Total ram usage:        0 bytes
  5075 ;; Hardware stack levels used: 1
  5076 ;; Hardware stack levels required when called: 3
  5077 ;; This function calls:
  5078 ;;		Nothing
  5079 ;; This function is called by:
  5080 ;;		_pic_init
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084     102A                     _timer_init:	
  5085                           ;psect for function _timer_init
  5086                           
  5087     102A                     l2006:	
  5088                           ;incstack = 0
  5089                           ; Regs used in _timer_init: [wreg+status,2+status,0]
  5090                           
  5091                           
  5092                           ;init.c: 61:     T1CONbits.TMR1CS = 0;
  5093     102A  1283               	bcf	3,5	;RP0=0, select bank0
  5094     102B  1303               	bcf	3,6	;RP1=0, select bank0
  5095     102C  1090               	bcf	16,1	;volatile
  5096     102D                     l2008:
  5097                           
  5098                           ;init.c: 62:     T1CONbits.T1CKPS = 0b10;
  5099     102D  0810               	movf	16,w	;volatile
  5100     102E  39CF               	andlw	-49
  5101     102F  3820               	iorlw	32
  5102     1030  0090               	movwf	16	;volatile
  5103     1031                     l163:
  5104     1031  0008               	return
  5105     1032                     __end_of_timer_init:
  5106                           
  5107                           	psect	text6
  5108     1065                     __ptext6:	
  5109 ;; *************** function _ports_init *****************
  5110 ;; Defined at:
  5111 ;;		line 19 in file "init.c"
  5112 ;; Parameters:    Size  Location     Type
  5113 ;;		None
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;		None
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      void 
  5118 ;; Registers used:
  5119 ;;		wreg, status,2
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5125 ;;      Params:         0       0       0       0       0
  5126 ;;      Locals:         0       0       0       0       0
  5127 ;;      Temps:          0       0       0       0       0
  5128 ;;      Totals:         0       0       0       0       0
  5129 ;;Total ram usage:        0 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 3
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_pic_init
  5136 ;; This function uses a non-reentrant model
  5137 ;;
  5138                           
  5139     1065                     _ports_init:	
  5140                           ;psect for function _ports_init
  5141                           
  5142     1065                     l1994:	
  5143                           ;incstack = 0
  5144                           ; Regs used in _ports_init: [wreg+status,2]
  5145                           
  5146                           
  5147                           ;init.c: 20:     ANSEL = 0;
  5148     1065  1683               	bsf	3,5	;RP0=1, select bank3
  5149     1066  1703               	bsf	3,6	;RP1=1, select bank3
  5150     1067  0188               	clrf	8	;volatile
  5151                           
  5152                           ;init.c: 21:     ANSELH = 0;
  5153     1068  0189               	clrf	9	;volatile
  5154                           
  5155                           ;init.c: 23:     TRISA = 0;
  5156     1069  1683               	bsf	3,5	;RP0=1, select bank1
  5157     106A  1303               	bcf	3,6	;RP1=0, select bank1
  5158     106B  0185               	clrf	5	;volatile
  5159                           
  5160                           ;init.c: 24:     TRISB = 0;
  5161     106C  0186               	clrf	6	;volatile
  5162                           
  5163                           ;init.c: 25:     TRISC = 0;
  5164     106D  0187               	clrf	7	;volatile
  5165                           
  5166                           ;init.c: 26:     TRISD = 0;
  5167     106E  0188               	clrf	8	;volatile
  5168                           
  5169                           ;init.c: 27:     TRISE = 0;
  5170     106F  0189               	clrf	9	;volatile
  5171                           
  5172                           ;init.c: 29:     PORTA = 0;
  5173     1070  1283               	bcf	3,5	;RP0=0, select bank0
  5174     1071  1303               	bcf	3,6	;RP1=0, select bank0
  5175     1072  0185               	clrf	5	;volatile
  5176                           
  5177                           ;init.c: 30:     PORTB = 0;
  5178     1073  0186               	clrf	6	;volatile
  5179     1074                     l1996:
  5180                           
  5181                           ;init.c: 31:     PORTC = 0b00000011;
  5182     1074  3003               	movlw	3
  5183     1075  0087               	movwf	7	;volatile
  5184     1076                     l1998:
  5185                           
  5186                           ;init.c: 32:     PORTD = 0;
  5187     1076  0188               	clrf	8	;volatile
  5188     1077                     l2000:
  5189                           
  5190                           ;init.c: 33:     PORTE = 0;
  5191     1077  0189               	clrf	9	;volatile
  5192     1078                     l154:
  5193     1078  0008               	return
  5194     1079                     __end_of_ports_init:
  5195                           
  5196                           	psect	text7
  5197     1045                     __ptext7:	
  5198 ;; *************** function _pins_init *****************
  5199 ;; Defined at:
  5200 ;;		line 35 in file "init.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		None
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5214 ;;      Params:         0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 3
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_pic_init
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228     1045                     _pins_init:	
  5229                           ;psect for function _pins_init
  5230                           
  5231     1045                     l2002:	
  5232                           ;incstack = 0
  5233                           ; Regs used in _pins_init: []
  5234                           
  5235                           
  5236                           ;init.c: 36:     TRISEbits.TRISE2 = 1;
  5237     1045  1683               	bsf	3,5	;RP0=1, select bank1
  5238     1046  1303               	bcf	3,6	;RP1=0, select bank1
  5239     1047  1509               	bsf	9,2	;volatile
  5240                           
  5241                           ;init.c: 37:     ANSELbits.ANS7 = 1;
  5242     1048  1683               	bsf	3,5	;RP0=1, select bank3
  5243     1049  1703               	bsf	3,6	;RP1=1, select bank3
  5244     104A  1788               	bsf	8,7	;volatile
  5245                           
  5246                           ;init.c: 38:     TRISBbits.TRISB0 = 1;
  5247     104B  1683               	bsf	3,5	;RP0=1, select bank1
  5248     104C  1303               	bcf	3,6	;RP1=0, select bank1
  5249     104D  1406               	bsf	6,0	;volatile
  5250                           
  5251                           ;init.c: 39:     TRISBbits.TRISB4 = 1;
  5252     104E  1606               	bsf	6,4	;volatile
  5253                           
  5254                           ;init.c: 40:     TRISBbits.TRISB5 = 1;
  5255     104F  1686               	bsf	6,5	;volatile
  5256                           
  5257                           ;init.c: 41:     PSTRCONbits.STRC = 0;
  5258     1050  111D               	bcf	29,2	;volatile
  5259     1051                     l157:
  5260     1051  0008               	return
  5261     1052                     __end_of_pins_init:
  5262                           
  5263                           	psect	text8
  5264     1079                     __ptext8:	
  5265 ;; *************** function _interrupt_init *****************
  5266 ;; Defined at:
  5267 ;;		line 43 in file "init.c"
  5268 ;; Parameters:    Size  Location     Type
  5269 ;;		None
  5270 ;; Auto vars:     Size  Location     Type
  5271 ;;		None
  5272 ;; Return value:  Size  Location     Type
  5273 ;;                  1    wreg      void 
  5274 ;; Registers used:
  5275 ;;		None
  5276 ;; Tracked objects:
  5277 ;;		On entry : 0/0
  5278 ;;		On exit  : 0/0
  5279 ;;		Unchanged: 0/0
  5280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5281 ;;      Params:         0       0       0       0       0
  5282 ;;      Locals:         0       0       0       0       0
  5283 ;;      Temps:          0       0       0       0       0
  5284 ;;      Totals:         0       0       0       0       0
  5285 ;;Total ram usage:        0 bytes
  5286 ;; Hardware stack levels used: 1
  5287 ;; Hardware stack levels required when called: 3
  5288 ;; This function calls:
  5289 ;;		Nothing
  5290 ;; This function is called by:
  5291 ;;		_pic_init
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295     1079                     _interrupt_init:	
  5296                           ;psect for function _interrupt_init
  5297                           
  5298     1079                     l2004:	
  5299                           ;incstack = 0
  5300                           ; Regs used in _interrupt_init: []
  5301                           
  5302                           
  5303                           ;init.c: 44:     INTCONbits.RBIF = 0;
  5304     1079  100B               	bcf	11,0	;volatile
  5305                           
  5306                           ;init.c: 45:     INTCONbits.RBIE = 1;
  5307     107A  158B               	bsf	11,3	;volatile
  5308                           
  5309                           ;init.c: 46:     PIE1bits.ADIE = 1;
  5310     107B  1683               	bsf	3,5	;RP0=1, select bank1
  5311     107C  1303               	bcf	3,6	;RP1=0, select bank1
  5312     107D  170C               	bsf	12,6	;volatile
  5313                           
  5314                           ;init.c: 47:     PIR1bits.ADIF = 0;
  5315     107E  1283               	bcf	3,5	;RP0=0, select bank0
  5316     107F  1303               	bcf	3,6	;RP1=0, select bank0
  5317     1080  130C               	bcf	12,6	;volatile
  5318                           
  5319                           ;init.c: 48:     IOCBbits.IOCB4 = 1;
  5320     1081  1683               	bsf	3,5	;RP0=1, select bank1
  5321     1082  1303               	bcf	3,6	;RP1=0, select bank1
  5322     1083  1616               	bsf	22,4	;volatile
  5323                           
  5324                           ;init.c: 49:     IOCBbits.IOCB5 = 1;
  5325     1084  1696               	bsf	22,5	;volatile
  5326                           
  5327                           ;init.c: 51:     OPTION_REGbits.INTEDG = 0;
  5328     1085  1301               	bcf	1,6	;volatile
  5329                           
  5330                           ;init.c: 52:     INTCONbits.INTE = 1;
  5331     1086  160B               	bsf	11,4	;volatile
  5332                           
  5333                           ;init.c: 53:     INTCONbits.INTF = 0;
  5334     1087  108B               	bcf	11,1	;volatile
  5335                           
  5336                           ;init.c: 54:     PIE1bits.TMR1IE = 1;
  5337     1088  140C               	bsf	12,0	;volatile
  5338                           
  5339                           ;init.c: 55:     PIR1bits.TMR1IF = 0;
  5340     1089  1283               	bcf	3,5	;RP0=0, select bank0
  5341     108A  1303               	bcf	3,6	;RP1=0, select bank0
  5342     108B  100C               	bcf	12,0	;volatile
  5343                           
  5344                           ;init.c: 57:     INTCONbits.PEIE = 1;
  5345     108C  170B               	bsf	11,6	;volatile
  5346                           
  5347                           ;init.c: 58:     INTCONbits.GIE = 1;
  5348     108D  178B               	bsf	11,7	;volatile
  5349     108E                     l160:
  5350     108E  0008               	return
  5351     108F                     __end_of_interrupt_init:
  5352                           
  5353                           	psect	text9
  5354     103A                     __ptext9:	
  5355 ;; *************** function _init_osc *****************
  5356 ;; Defined at:
  5357 ;;		line 12 in file "init.c"
  5358 ;; Parameters:    Size  Location     Type
  5359 ;;		None
  5360 ;; Auto vars:     Size  Location     Type
  5361 ;;		None
  5362 ;; Return value:  Size  Location     Type
  5363 ;;                  1    wreg      void 
  5364 ;; Registers used:
  5365 ;;		wreg, status,2, status,0
  5366 ;; Tracked objects:
  5367 ;;		On entry : 0/0
  5368 ;;		On exit  : 0/0
  5369 ;;		Unchanged: 0/0
  5370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5371 ;;      Params:         0       0       0       0       0
  5372 ;;      Locals:         0       0       0       0       0
  5373 ;;      Temps:          0       0       0       0       0
  5374 ;;      Totals:         0       0       0       0       0
  5375 ;;Total ram usage:        0 bytes
  5376 ;; Hardware stack levels used: 1
  5377 ;; Hardware stack levels required when called: 3
  5378 ;; This function calls:
  5379 ;;		Nothing
  5380 ;; This function is called by:
  5381 ;;		_pic_init
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385     103A                     _init_osc:	
  5386                           ;psect for function _init_osc
  5387                           
  5388     103A                     l1988:	
  5389                           ;incstack = 0
  5390                           ; Regs used in _init_osc: [wreg+status,2+status,0]
  5391                           
  5392                           
  5393                           ;init.c: 13:     OSCCONbits.SCS = 0;
  5394     103A  1683               	bsf	3,5	;RP0=1, select bank1
  5395     103B  1303               	bcf	3,6	;RP1=0, select bank1
  5396     103C  100F               	bcf	15,0	;volatile
  5397     103D                     l1990:
  5398                           
  5399                           ;init.c: 14:     OSCCONbits.IRCF = 0b111;
  5400     103D  3070               	movlw	112
  5401     103E  048F               	iorwf	15,f	;volatile
  5402     103F                     l1992:
  5403                           
  5404                           ;init.c: 15:     OSCCONbits.OSTS = 0b1;
  5405     103F  158F               	bsf	15,3	;volatile
  5406     1040                     l148:	
  5407                           ;init.c: 17:     while (OSCCONbits.HTS != 0b1);
  5408                           
  5409     1040  1D0F               	btfss	15,2	;volatile
  5410     1041  2843               	goto	u1261
  5411     1042  2844               	goto	u1260
  5412     1043                     u1261:
  5413     1043  2840               	goto	l148
  5414     1044                     u1260:
  5415     1044                     l151:
  5416     1044  0008               	return
  5417     1045                     __end_of_init_osc:
  5418                           
  5419                           	psect	text10
  5420     10A6                     __ptext10:	
  5421 ;; *************** function _adc_init *****************
  5422 ;; Defined at:
  5423 ;;		line 64 in file "init.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, status,2, status,0
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5437 ;;      Params:         0       0       0       0       0
  5438 ;;      Locals:         0       0       0       0       0
  5439 ;;      Temps:          0       0       0       0       0
  5440 ;;      Totals:         0       0       0       0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 3
  5444 ;; This function calls:
  5445 ;;		Nothing
  5446 ;; This function is called by:
  5447 ;;		_pic_init
  5448 ;; This function uses a non-reentrant model
  5449 ;;
  5450                           
  5451     10A6                     _adc_init:	
  5452                           ;psect for function _adc_init
  5453                           
  5454     10A6                     l2010:	
  5455                           ;incstack = 0
  5456                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  5457                           
  5458                           
  5459                           ;init.c: 65:     ADCON0bits.ADCS = 0b10;
  5460     10A6  1283               	bcf	3,5	;RP0=0, select bank0
  5461     10A7  1303               	bcf	3,6	;RP1=0, select bank0
  5462     10A8  081F               	movf	31,w	;volatile
  5463     10A9  393F               	andlw	-193
  5464     10AA  3880               	iorlw	128
  5465     10AB  009F               	movwf	31	;volatile
  5466     10AC                     l2012:
  5467                           
  5468                           ;init.c: 66:     ADCON1bits.VCFG0 = 0;
  5469     10AC  1683               	bsf	3,5	;RP0=1, select bank1
  5470     10AD  1303               	bcf	3,6	;RP1=0, select bank1
  5471     10AE  121F               	bcf	31,4	;volatile
  5472     10AF                     l2014:
  5473                           
  5474                           ;init.c: 67:     ADCON1bits.VCFG1 = 0;
  5475     10AF  129F               	bcf	31,5	;volatile
  5476                           
  5477                           ;init.c: 68:     ADCON0bits.CHS = 0b0111;
  5478     10B0  1283               	bcf	3,5	;RP0=0, select bank0
  5479     10B1  1303               	bcf	3,6	;RP1=0, select bank0
  5480     10B2  081F               	movf	31,w	;volatile
  5481     10B3  39C3               	andlw	-61
  5482     10B4  381C               	iorlw	28
  5483     10B5  009F               	movwf	31	;volatile
  5484     10B6                     l2016:
  5485                           
  5486                           ;init.c: 69:     ADCON1bits.ADFM = 1;
  5487     10B6  1683               	bsf	3,5	;RP0=1, select bank1
  5488     10B7  1303               	bcf	3,6	;RP1=0, select bank1
  5489     10B8  179F               	bsf	31,7	;volatile
  5490     10B9                     l2018:
  5491                           
  5492                           ;init.c: 70:     ADCON0bits.ADON = 1;
  5493     10B9  1283               	bcf	3,5	;RP0=0, select bank0
  5494     10BA  1303               	bcf	3,6	;RP1=0, select bank0
  5495     10BB  141F               	bsf	31,0	;volatile
  5496     10BC                     l166:
  5497     10BC  0008               	return
  5498     10BD                     __end_of_adc_init:
  5499                           
  5500                           	psect	text11
  5501     0E15                     __ptext11:	
  5502 ;; *************** function _key_detection *****************
  5503 ;; Defined at:
  5504 ;;		line 29 in file "remote.c"
  5505 ;; Parameters:    Size  Location     Type
  5506 ;;		None
  5507 ;; Auto vars:     Size  Location     Type
  5508 ;;  temp_code       4   73[BANK0 ] long 
  5509 ;;  check           4   69[BANK0 ] long 
  5510 ;; Return value:  Size  Location     Type
  5511 ;;                  1    wreg      void 
  5512 ;; Registers used:
  5513 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5514 ;; Tracked objects:
  5515 ;;		On entry : 0/0
  5516 ;;		On exit  : 0/0
  5517 ;;		Unchanged: 0/0
  5518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5519 ;;      Params:         0       0       0       0       0
  5520 ;;      Locals:         0       8       0       0       0
  5521 ;;      Temps:          0       0       0       0       0
  5522 ;;      Totals:         0       8       0       0       0
  5523 ;;Total ram usage:        8 bytes
  5524 ;; Hardware stack levels used: 1
  5525 ;; Hardware stack levels required when called: 7
  5526 ;; This function calls:
  5527 ;;		_scherm_setup
  5528 ;;		_send_buffer
  5529 ;; This function is called by:
  5530 ;;		_main
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534     0E15                     _key_detection:	
  5535                           ;psect for function _key_detection
  5536                           
  5537     0E15                     l2264:	
  5538                           ;incstack = 0
  5539                           ; Regs used in _key_detection: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5540                           
  5541                           
  5542                           ;remote.c: 30:     long check = final_code & 0b111000000000;
  5543     0E15  3000               	movlw	0
  5544     0E16  1683               	bsf	3,5	;RP0=1, select bank1
  5545     0E17  1303               	bcf	3,6	;RP1=0, select bank1
  5546     0E18  0539               	andwf	_final_code^(0+128),w	;volatile
  5547     0E19  1283               	bcf	3,5	;RP0=0, select bank0
  5548     0E1A  1303               	bcf	3,6	;RP1=0, select bank0
  5549     0E1B  00E5               	movwf	key_detection@check
  5550     0E1C  300E               	movlw	14
  5551     0E1D  1683               	bsf	3,5	;RP0=1, select bank1
  5552     0E1E  1303               	bcf	3,6	;RP1=0, select bank1
  5553     0E1F  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5554     0E20  1283               	bcf	3,5	;RP0=0, select bank0
  5555     0E21  1303               	bcf	3,6	;RP1=0, select bank0
  5556     0E22  00E6               	movwf	key_detection@check+1
  5557     0E23  3000               	movlw	0
  5558     0E24  1683               	bsf	3,5	;RP0=1, select bank1
  5559     0E25  1303               	bcf	3,6	;RP1=0, select bank1
  5560     0E26  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5561     0E27  1283               	bcf	3,5	;RP0=0, select bank0
  5562     0E28  1303               	bcf	3,6	;RP1=0, select bank0
  5563     0E29  00E7               	movwf	key_detection@check+2
  5564     0E2A  3000               	movlw	0
  5565     0E2B  1683               	bsf	3,5	;RP0=1, select bank1
  5566     0E2C  1303               	bcf	3,6	;RP1=0, select bank1
  5567     0E2D  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5568     0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5569     0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5570     0E30  00E8               	movwf	key_detection@check+3
  5571     0E31                     l2266:
  5572                           
  5573                           ;remote.c: 31:     long temp_code;;remote.c: 32:     if (check == 0b010000000000) {
  5574     0E31  3004               	movlw	4
  5575     0E32  0666               	xorwf	key_detection@check+1,w
  5576     0E33  0465               	iorwf	key_detection@check,w
  5577     0E34  0467               	iorwf	key_detection@check+2,w
  5578     0E35  0468               	iorwf	key_detection@check+3,w
  5579     0E36  1D03               	btfss	3,2
  5580     0E37  2E39               	goto	u1511
  5581     0E38  2E3A               	goto	u1510
  5582     0E39                     u1511:
  5583     0E39  2FE0               	goto	l2318
  5584     0E3A                     u1510:
  5585     0E3A                     l2268:
  5586                           
  5587                           ;remote.c: 33:         temp_code = (final_code & 0b010100100000);
  5588     0E3A  3020               	movlw	32
  5589     0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  5590     0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  5591     0E3D  0539               	andwf	_final_code^(0+128),w	;volatile
  5592     0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  5593     0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  5594     0E40  00E9               	movwf	key_detection@temp_code
  5595     0E41  3005               	movlw	5
  5596     0E42  1683               	bsf	3,5	;RP0=1, select bank1
  5597     0E43  1303               	bcf	3,6	;RP1=0, select bank1
  5598     0E44  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5599     0E45  1283               	bcf	3,5	;RP0=0, select bank0
  5600     0E46  1303               	bcf	3,6	;RP1=0, select bank0
  5601     0E47  00EA               	movwf	key_detection@temp_code+1
  5602     0E48  3000               	movlw	0
  5603     0E49  1683               	bsf	3,5	;RP0=1, select bank1
  5604     0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  5605     0E4B  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5606     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  5607     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  5608     0E4E  00EB               	movwf	key_detection@temp_code+2
  5609     0E4F  3000               	movlw	0
  5610     0E50  1683               	bsf	3,5	;RP0=1, select bank1
  5611     0E51  1303               	bcf	3,6	;RP1=0, select bank1
  5612     0E52  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5613     0E53  1283               	bcf	3,5	;RP0=0, select bank0
  5614     0E54  1303               	bcf	3,6	;RP1=0, select bank0
  5615     0E55  00EC               	movwf	key_detection@temp_code+3
  5616     0E56                     l2270:
  5617                           
  5618                           ;remote.c: 34:         if (temp_code == 0b010100100000) {
  5619     0E56  3020               	movlw	32
  5620     0E57  0669               	xorwf	key_detection@temp_code,w
  5621     0E58  3005               	movlw	5
  5622     0E59  1903               	skipnz
  5623     0E5A  066A               	xorwf	key_detection@temp_code+1,w
  5624     0E5B  046B               	iorwf	key_detection@temp_code+2,w
  5625     0E5C  046C               	iorwf	key_detection@temp_code+3,w
  5626     0E5D  1D03               	btfss	3,2
  5627     0E5E  2E60               	goto	u1521
  5628     0E5F  2E61               	goto	u1520
  5629     0E60                     u1521:
  5630     0E60  2E8E               	goto	l2280
  5631     0E61                     u1520:
  5632     0E61                     l2272:
  5633                           
  5634                           ;remote.c: 37:             if (volume < 40) {
  5635     0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5636     0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5637     0E63  086E               	movf	_volume+1,w
  5638     0E64  3A80               	xorlw	128
  5639     0E65  00FF               	movwf	btemp+1
  5640     0E66  3080               	movlw	128
  5641     0E67  027F               	subwf	btemp+1,w
  5642     0E68  1D03               	skipz
  5643     0E69  2E6C               	goto	u1535
  5644     0E6A  3028               	movlw	40
  5645     0E6B  026D               	subwf	_volume,w
  5646     0E6C                     u1535:
  5647     0E6C  1803               	skipnc
  5648     0E6D  2E6F               	goto	u1531
  5649     0E6E  2E70               	goto	u1530
  5650     0E6F                     u1531:
  5651     0E6F  2E75               	goto	l2276
  5652     0E70                     u1530:
  5653     0E70                     l2274:
  5654                           
  5655                           ;remote.c: 38:                 PORTCbits.RC0 = 0;
  5656     0E70  1283               	bcf	3,5	;RP0=0, select bank0
  5657     0E71  1303               	bcf	3,6	;RP1=0, select bank0
  5658     0E72  1007               	bcf	7,0	;volatile
  5659                           
  5660                           ;remote.c: 39:                 PORTCbits.RC1 = 1;
  5661     0E73  1487               	bsf	7,1	;volatile
  5662                           
  5663                           ;remote.c: 40:             } else if (volume >= 40) {
  5664     0E74  2E88               	goto	l325
  5665     0E75                     l2276:
  5666     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  5667     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  5668     0E77  086E               	movf	_volume+1,w
  5669     0E78  3A80               	xorlw	128
  5670     0E79  00FF               	movwf	btemp+1
  5671     0E7A  3080               	movlw	128
  5672     0E7B  027F               	subwf	btemp+1,w
  5673     0E7C  1D03               	skipz
  5674     0E7D  2E80               	goto	u1545
  5675     0E7E  3028               	movlw	40
  5676     0E7F  026D               	subwf	_volume,w
  5677     0E80                     u1545:
  5678     0E80  1C03               	skipc
  5679     0E81  2E83               	goto	u1541
  5680     0E82  2E84               	goto	u1540
  5681     0E83                     u1541:
  5682     0E83  2E88               	goto	l325
  5683     0E84                     u1540:
  5684     0E84                     l2278:
  5685                           
  5686                           ;remote.c: 41:                 PORTCbits.RC0 = 1;
  5687     0E84  1283               	bcf	3,5	;RP0=0, select bank0
  5688     0E85  1303               	bcf	3,6	;RP1=0, select bank0
  5689     0E86  1407               	bsf	7,0	;volatile
  5690                           
  5691                           ;remote.c: 42:                 PORTCbits.RC1 = 1;
  5692     0E87  1487               	bsf	7,1	;volatile
  5693     0E88                     l325:
  5694                           
  5695                           ;remote.c: 44:             TMR1 = 23000;
  5696     0E88  3059               	movlw	89
  5697     0E89  1283               	bcf	3,5	;RP0=0, select bank0
  5698     0E8A  1303               	bcf	3,6	;RP1=0, select bank0
  5699     0E8B  008F               	movwf	15	;volatile
  5700     0E8C  30D8               	movlw	216
  5701     0E8D  008E               	movwf	14	;volatile
  5702     0E8E                     l2280:
  5703                           
  5704                           ;remote.c: 47:         temp_code = (final_code & 0b010100010000);
  5705     0E8E  3010               	movlw	16
  5706     0E8F  1683               	bsf	3,5	;RP0=1, select bank1
  5707     0E90  1303               	bcf	3,6	;RP1=0, select bank1
  5708     0E91  0539               	andwf	_final_code^(0+128),w	;volatile
  5709     0E92  1283               	bcf	3,5	;RP0=0, select bank0
  5710     0E93  1303               	bcf	3,6	;RP1=0, select bank0
  5711     0E94  00E9               	movwf	key_detection@temp_code
  5712     0E95  3005               	movlw	5
  5713     0E96  1683               	bsf	3,5	;RP0=1, select bank1
  5714     0E97  1303               	bcf	3,6	;RP1=0, select bank1
  5715     0E98  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5716     0E99  1283               	bcf	3,5	;RP0=0, select bank0
  5717     0E9A  1303               	bcf	3,6	;RP1=0, select bank0
  5718     0E9B  00EA               	movwf	key_detection@temp_code+1
  5719     0E9C  3000               	movlw	0
  5720     0E9D  1683               	bsf	3,5	;RP0=1, select bank1
  5721     0E9E  1303               	bcf	3,6	;RP1=0, select bank1
  5722     0E9F  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5723     0EA0  1283               	bcf	3,5	;RP0=0, select bank0
  5724     0EA1  1303               	bcf	3,6	;RP1=0, select bank0
  5725     0EA2  00EB               	movwf	key_detection@temp_code+2
  5726     0EA3  3000               	movlw	0
  5727     0EA4  1683               	bsf	3,5	;RP0=1, select bank1
  5728     0EA5  1303               	bcf	3,6	;RP1=0, select bank1
  5729     0EA6  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5730     0EA7  1283               	bcf	3,5	;RP0=0, select bank0
  5731     0EA8  1303               	bcf	3,6	;RP1=0, select bank0
  5732     0EA9  00EC               	movwf	key_detection@temp_code+3
  5733     0EAA                     l2282:
  5734                           
  5735                           ;remote.c: 48:         if (temp_code == 0b010100010000) {
  5736     0EAA  3010               	movlw	16
  5737     0EAB  0669               	xorwf	key_detection@temp_code,w
  5738     0EAC  3005               	movlw	5
  5739     0EAD  1903               	skipnz
  5740     0EAE  066A               	xorwf	key_detection@temp_code+1,w
  5741     0EAF  046B               	iorwf	key_detection@temp_code+2,w
  5742     0EB0  046C               	iorwf	key_detection@temp_code+3,w
  5743     0EB1  1D03               	btfss	3,2
  5744     0EB2  2EB4               	goto	u1551
  5745     0EB3  2EB5               	goto	u1550
  5746     0EB4                     u1551:
  5747     0EB4  2EE2               	goto	l2292
  5748     0EB5                     u1550:
  5749     0EB5                     l2284:
  5750                           
  5751                           ;remote.c: 51:             if (volume > 0) {
  5752     0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  5753     0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  5754     0EB7  086E               	movf	_volume+1,w
  5755     0EB8  3A80               	xorlw	128
  5756     0EB9  00FF               	movwf	btemp+1
  5757     0EBA  3080               	movlw	128
  5758     0EBB  027F               	subwf	btemp+1,w
  5759     0EBC  1D03               	skipz
  5760     0EBD  2EC0               	goto	u1565
  5761     0EBE  3001               	movlw	1
  5762     0EBF  026D               	subwf	_volume,w
  5763     0EC0                     u1565:
  5764     0EC0  1C03               	skipc
  5765     0EC1  2EC3               	goto	u1561
  5766     0EC2  2EC4               	goto	u1560
  5767     0EC3                     u1561:
  5768     0EC3  2EC9               	goto	l2288
  5769     0EC4                     u1560:
  5770     0EC4                     l2286:
  5771                           
  5772                           ;remote.c: 52:                 PORTCbits.RC0 = 1;
  5773     0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5774     0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5775     0EC6  1407               	bsf	7,0	;volatile
  5776                           
  5777                           ;remote.c: 53:                 PORTCbits.RC1 = 0;
  5778     0EC7  1087               	bcf	7,1	;volatile
  5779                           
  5780                           ;remote.c: 54:             } else if (volume <= 0) {
  5781     0EC8  2EDC               	goto	l329
  5782     0EC9                     l2288:
  5783     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  5784     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  5785     0ECB  086E               	movf	_volume+1,w
  5786     0ECC  3A80               	xorlw	128
  5787     0ECD  00FF               	movwf	btemp+1
  5788     0ECE  3080               	movlw	128
  5789     0ECF  027F               	subwf	btemp+1,w
  5790     0ED0  1D03               	skipz
  5791     0ED1  2ED4               	goto	u1575
  5792     0ED2  3001               	movlw	1
  5793     0ED3  026D               	subwf	_volume,w
  5794     0ED4                     u1575:
  5795     0ED4  1803               	skipnc
  5796     0ED5  2ED7               	goto	u1571
  5797     0ED6  2ED8               	goto	u1570
  5798     0ED7                     u1571:
  5799     0ED7  2EDC               	goto	l329
  5800     0ED8                     u1570:
  5801     0ED8                     l2290:
  5802                           
  5803                           ;remote.c: 55:                 PORTCbits.RC0 = 1;
  5804     0ED8  1283               	bcf	3,5	;RP0=0, select bank0
  5805     0ED9  1303               	bcf	3,6	;RP1=0, select bank0
  5806     0EDA  1407               	bsf	7,0	;volatile
  5807                           
  5808                           ;remote.c: 56:                 PORTCbits.RC1 = 1;
  5809     0EDB  1487               	bsf	7,1	;volatile
  5810     0EDC                     l329:
  5811                           
  5812                           ;remote.c: 58:             TMR1 = 23000;
  5813     0EDC  3059               	movlw	89
  5814     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  5815     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  5816     0EDF  008F               	movwf	15	;volatile
  5817     0EE0  30D8               	movlw	216
  5818     0EE1  008E               	movwf	14	;volatile
  5819     0EE2                     l2292:
  5820                           
  5821                           ;remote.c: 61:         temp_code = (final_code & 0b010010010000);
  5822     0EE2  3090               	movlw	144
  5823     0EE3  1683               	bsf	3,5	;RP0=1, select bank1
  5824     0EE4  1303               	bcf	3,6	;RP1=0, select bank1
  5825     0EE5  0539               	andwf	_final_code^(0+128),w	;volatile
  5826     0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  5827     0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  5828     0EE8  00E9               	movwf	key_detection@temp_code
  5829     0EE9  3004               	movlw	4
  5830     0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  5831     0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  5832     0EEC  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5833     0EED  1283               	bcf	3,5	;RP0=0, select bank0
  5834     0EEE  1303               	bcf	3,6	;RP1=0, select bank0
  5835     0EEF  00EA               	movwf	key_detection@temp_code+1
  5836     0EF0  3000               	movlw	0
  5837     0EF1  1683               	bsf	3,5	;RP0=1, select bank1
  5838     0EF2  1303               	bcf	3,6	;RP1=0, select bank1
  5839     0EF3  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5840     0EF4  1283               	bcf	3,5	;RP0=0, select bank0
  5841     0EF5  1303               	bcf	3,6	;RP1=0, select bank0
  5842     0EF6  00EB               	movwf	key_detection@temp_code+2
  5843     0EF7  3000               	movlw	0
  5844     0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  5845     0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  5846     0EFA  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5847     0EFB  1283               	bcf	3,5	;RP0=0, select bank0
  5848     0EFC  1303               	bcf	3,6	;RP1=0, select bank0
  5849     0EFD  00EC               	movwf	key_detection@temp_code+3
  5850     0EFE                     l2294:
  5851                           
  5852                           ;remote.c: 62:         if (temp_code == 0b010010010000) {
  5853     0EFE  3090               	movlw	144
  5854     0EFF  0669               	xorwf	key_detection@temp_code,w
  5855     0F00  3004               	movlw	4
  5856     0F01  1903               	skipnz
  5857     0F02  066A               	xorwf	key_detection@temp_code+1,w
  5858     0F03  046B               	iorwf	key_detection@temp_code+2,w
  5859     0F04  046C               	iorwf	key_detection@temp_code+3,w
  5860     0F05  1D03               	btfss	3,2
  5861     0F06  2F08               	goto	u1581
  5862     0F07  2F09               	goto	u1580
  5863     0F08                     u1581:
  5864     0F08  2F13               	goto	l331
  5865     0F09                     u1580:
  5866     0F09                     l2296:
  5867                           
  5868                           ;remote.c: 63:             input = 1;
  5869     0F09  3001               	movlw	1
  5870     0F0A  1683               	bsf	3,5	;RP0=1, select bank1
  5871     0F0B  1303               	bcf	3,6	;RP1=0, select bank1
  5872     0F0C  00B4               	movwf	_input^(0+128)
  5873     0F0D  3000               	movlw	0
  5874     0F0E  00B5               	movwf	(_input^(0+128)+1)
  5875                           
  5876                           ;remote.c: 64:             inputChanged = 1;
  5877     0F0F  3001               	movlw	1
  5878     0F10  00B0               	movwf	_inputChanged^(0+128)
  5879     0F11  3000               	movlw	0
  5880     0F12  00B1               	movwf	(_inputChanged^(0+128)+1)
  5881     0F13                     l331:	
  5882                           ;remote.c: 65:         }
  5883                           
  5884                           
  5885                           ;remote.c: 67:         temp_code = final_code & 0b010100001000;
  5886     0F13  3008               	movlw	8
  5887     0F14  1683               	bsf	3,5	;RP0=1, select bank1
  5888     0F15  1303               	bcf	3,6	;RP1=0, select bank1
  5889     0F16  0539               	andwf	_final_code^(0+128),w	;volatile
  5890     0F17  1283               	bcf	3,5	;RP0=0, select bank0
  5891     0F18  1303               	bcf	3,6	;RP1=0, select bank0
  5892     0F19  00E9               	movwf	key_detection@temp_code
  5893     0F1A  3005               	movlw	5
  5894     0F1B  1683               	bsf	3,5	;RP0=1, select bank1
  5895     0F1C  1303               	bcf	3,6	;RP1=0, select bank1
  5896     0F1D  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5897     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  5898     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  5899     0F20  00EA               	movwf	key_detection@temp_code+1
  5900     0F21  3000               	movlw	0
  5901     0F22  1683               	bsf	3,5	;RP0=1, select bank1
  5902     0F23  1303               	bcf	3,6	;RP1=0, select bank1
  5903     0F24  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5904     0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5905     0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5906     0F27  00EB               	movwf	key_detection@temp_code+2
  5907     0F28  3000               	movlw	0
  5908     0F29  1683               	bsf	3,5	;RP0=1, select bank1
  5909     0F2A  1303               	bcf	3,6	;RP1=0, select bank1
  5910     0F2B  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5911     0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5912     0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  5913     0F2E  00EC               	movwf	key_detection@temp_code+3
  5914     0F2F                     l2298:
  5915                           
  5916                           ;remote.c: 68:         if (temp_code == 0b010100001000) {
  5917     0F2F  3008               	movlw	8
  5918     0F30  0669               	xorwf	key_detection@temp_code,w
  5919     0F31  3005               	movlw	5
  5920     0F32  1903               	skipnz
  5921     0F33  066A               	xorwf	key_detection@temp_code+1,w
  5922     0F34  046B               	iorwf	key_detection@temp_code+2,w
  5923     0F35  046C               	iorwf	key_detection@temp_code+3,w
  5924     0F36  1D03               	btfss	3,2
  5925     0F37  2F39               	goto	u1591
  5926     0F38  2F3A               	goto	u1590
  5927     0F39                     u1591:
  5928     0F39  2F44               	goto	l332
  5929     0F3A                     u1590:
  5930     0F3A                     l2300:
  5931                           
  5932                           ;remote.c: 69:             input = 2;
  5933     0F3A  3002               	movlw	2
  5934     0F3B  1683               	bsf	3,5	;RP0=1, select bank1
  5935     0F3C  1303               	bcf	3,6	;RP1=0, select bank1
  5936     0F3D  00B4               	movwf	_input^(0+128)
  5937     0F3E  3000               	movlw	0
  5938     0F3F  00B5               	movwf	(_input^(0+128)+1)
  5939                           
  5940                           ;remote.c: 70:             inputChanged = 1;
  5941     0F40  3001               	movlw	1
  5942     0F41  00B0               	movwf	_inputChanged^(0+128)
  5943     0F42  3000               	movlw	0
  5944     0F43  00B1               	movwf	(_inputChanged^(0+128)+1)
  5945     0F44                     l332:	
  5946                           ;remote.c: 71:         }
  5947                           
  5948                           
  5949                           ;remote.c: 73:         temp_code = final_code & 0b010010100000;
  5950     0F44  30A0               	movlw	160
  5951     0F45  1683               	bsf	3,5	;RP0=1, select bank1
  5952     0F46  1303               	bcf	3,6	;RP1=0, select bank1
  5953     0F47  0539               	andwf	_final_code^(0+128),w	;volatile
  5954     0F48  1283               	bcf	3,5	;RP0=0, select bank0
  5955     0F49  1303               	bcf	3,6	;RP1=0, select bank0
  5956     0F4A  00E9               	movwf	key_detection@temp_code
  5957     0F4B  3004               	movlw	4
  5958     0F4C  1683               	bsf	3,5	;RP0=1, select bank1
  5959     0F4D  1303               	bcf	3,6	;RP1=0, select bank1
  5960     0F4E  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  5961     0F4F  1283               	bcf	3,5	;RP0=0, select bank0
  5962     0F50  1303               	bcf	3,6	;RP1=0, select bank0
  5963     0F51  00EA               	movwf	key_detection@temp_code+1
  5964     0F52  3000               	movlw	0
  5965     0F53  1683               	bsf	3,5	;RP0=1, select bank1
  5966     0F54  1303               	bcf	3,6	;RP1=0, select bank1
  5967     0F55  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  5968     0F56  1283               	bcf	3,5	;RP0=0, select bank0
  5969     0F57  1303               	bcf	3,6	;RP1=0, select bank0
  5970     0F58  00EB               	movwf	key_detection@temp_code+2
  5971     0F59  3000               	movlw	0
  5972     0F5A  1683               	bsf	3,5	;RP0=1, select bank1
  5973     0F5B  1303               	bcf	3,6	;RP1=0, select bank1
  5974     0F5C  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  5975     0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  5976     0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  5977     0F5F  00EC               	movwf	key_detection@temp_code+3
  5978     0F60                     l2302:
  5979                           
  5980                           ;remote.c: 74:         if (temp_code == 0b010010100000) {
  5981     0F60  30A0               	movlw	160
  5982     0F61  0669               	xorwf	key_detection@temp_code,w
  5983     0F62  3004               	movlw	4
  5984     0F63  1903               	skipnz
  5985     0F64  066A               	xorwf	key_detection@temp_code+1,w
  5986     0F65  046B               	iorwf	key_detection@temp_code+2,w
  5987     0F66  046C               	iorwf	key_detection@temp_code+3,w
  5988     0F67  1D03               	btfss	3,2
  5989     0F68  2F6A               	goto	u1601
  5990     0F69  2F6B               	goto	u1600
  5991     0F6A                     u1601:
  5992     0F6A  2F75               	goto	l333
  5993     0F6B                     u1600:
  5994     0F6B                     l2304:
  5995                           
  5996                           ;remote.c: 75:             input = 3;
  5997     0F6B  3003               	movlw	3
  5998     0F6C  1683               	bsf	3,5	;RP0=1, select bank1
  5999     0F6D  1303               	bcf	3,6	;RP1=0, select bank1
  6000     0F6E  00B4               	movwf	_input^(0+128)
  6001     0F6F  3000               	movlw	0
  6002     0F70  00B5               	movwf	(_input^(0+128)+1)
  6003                           
  6004                           ;remote.c: 76:             inputChanged = 1;
  6005     0F71  3001               	movlw	1
  6006     0F72  00B0               	movwf	_inputChanged^(0+128)
  6007     0F73  3000               	movlw	0
  6008     0F74  00B1               	movwf	(_inputChanged^(0+128)+1)
  6009     0F75                     l333:	
  6010                           ;remote.c: 77:         }
  6011                           
  6012                           
  6013                           ;remote.c: 79:         temp_code = final_code & 0b010010001000;
  6014     0F75  3088               	movlw	136
  6015     0F76  1683               	bsf	3,5	;RP0=1, select bank1
  6016     0F77  1303               	bcf	3,6	;RP1=0, select bank1
  6017     0F78  0539               	andwf	_final_code^(0+128),w	;volatile
  6018     0F79  1283               	bcf	3,5	;RP0=0, select bank0
  6019     0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  6020     0F7B  00E9               	movwf	key_detection@temp_code
  6021     0F7C  3004               	movlw	4
  6022     0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  6023     0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  6024     0F7F  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  6025     0F80  1283               	bcf	3,5	;RP0=0, select bank0
  6026     0F81  1303               	bcf	3,6	;RP1=0, select bank0
  6027     0F82  00EA               	movwf	key_detection@temp_code+1
  6028     0F83  3000               	movlw	0
  6029     0F84  1683               	bsf	3,5	;RP0=1, select bank1
  6030     0F85  1303               	bcf	3,6	;RP1=0, select bank1
  6031     0F86  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  6032     0F87  1283               	bcf	3,5	;RP0=0, select bank0
  6033     0F88  1303               	bcf	3,6	;RP1=0, select bank0
  6034     0F89  00EB               	movwf	key_detection@temp_code+2
  6035     0F8A  3000               	movlw	0
  6036     0F8B  1683               	bsf	3,5	;RP0=1, select bank1
  6037     0F8C  1303               	bcf	3,6	;RP1=0, select bank1
  6038     0F8D  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  6039     0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  6040     0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  6041     0F90  00EC               	movwf	key_detection@temp_code+3
  6042     0F91                     l2306:
  6043                           
  6044                           ;remote.c: 80:         if (temp_code == 0b010010001000) {
  6045     0F91  3088               	movlw	136
  6046     0F92  0669               	xorwf	key_detection@temp_code,w
  6047     0F93  3004               	movlw	4
  6048     0F94  1903               	skipnz
  6049     0F95  066A               	xorwf	key_detection@temp_code+1,w
  6050     0F96  046B               	iorwf	key_detection@temp_code+2,w
  6051     0F97  046C               	iorwf	key_detection@temp_code+3,w
  6052     0F98  1D03               	btfss	3,2
  6053     0F99  2F9B               	goto	u1611
  6054     0F9A  2F9C               	goto	u1610
  6055     0F9B                     u1611:
  6056     0F9B  2FB1               	goto	l334
  6057     0F9C                     u1610:
  6058     0F9C                     l2308:
  6059                           
  6060                           ;remote.c: 81:             input = 4;
  6061     0F9C  3004               	movlw	4
  6062     0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  6063     0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  6064     0F9F  00B4               	movwf	_input^(0+128)
  6065     0FA0  3000               	movlw	0
  6066     0FA1  00B5               	movwf	(_input^(0+128)+1)
  6067                           
  6068                           ;remote.c: 82:             inputChanged = 1;
  6069     0FA2  3001               	movlw	1
  6070     0FA3  00B0               	movwf	_inputChanged^(0+128)
  6071     0FA4  3000               	movlw	0
  6072     0FA5  00B1               	movwf	(_inputChanged^(0+128)+1)
  6073     0FA6                     l2310:
  6074                           
  6075                           ;remote.c: 83:             scherm_setup();
  6076     0FA6  120A  158A  2379  120A  158A  	fcall	_scherm_setup
  6077     0FAB                     l2312:
  6078                           
  6079                           ;remote.c: 84:             send_buffer(SCREEN_1);
  6080     0FAB  3001               	movlw	1
  6081     0FAC  160A  118A  222C  120A  158A  	fcall	_send_buffer
  6082     0FB1                     l334:	
  6083                           ;remote.c: 85:         }
  6084                           
  6085                           
  6086                           ;remote.c: 87:         temp_code = final_code & 0b010010000100;
  6087     0FB1  3084               	movlw	132
  6088     0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  6089     0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  6090     0FB4  0539               	andwf	_final_code^(0+128),w	;volatile
  6091     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  6092     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  6093     0FB7  00E9               	movwf	key_detection@temp_code
  6094     0FB8  3004               	movlw	4
  6095     0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  6096     0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  6097     0FBB  053A               	andwf	(_final_code+1)^(0+128),w	;volatile
  6098     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  6099     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  6100     0FBE  00EA               	movwf	key_detection@temp_code+1
  6101     0FBF  3000               	movlw	0
  6102     0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  6103     0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  6104     0FC2  053B               	andwf	(_final_code+2)^(0+128),w	;volatile
  6105     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  6106     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  6107     0FC5  00EB               	movwf	key_detection@temp_code+2
  6108     0FC6  3000               	movlw	0
  6109     0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  6110     0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  6111     0FC9  053C               	andwf	(_final_code+3)^(0+128),w	;volatile
  6112     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6113     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6114     0FCC  00EC               	movwf	key_detection@temp_code+3
  6115     0FCD                     l2314:
  6116                           
  6117                           ;remote.c: 88:         if (temp_code == 0b010010000100) {
  6118     0FCD  3084               	movlw	132
  6119     0FCE  0669               	xorwf	key_detection@temp_code,w
  6120     0FCF  3004               	movlw	4
  6121     0FD0  1903               	skipnz
  6122     0FD1  066A               	xorwf	key_detection@temp_code+1,w
  6123     0FD2  046B               	iorwf	key_detection@temp_code+2,w
  6124     0FD3  046C               	iorwf	key_detection@temp_code+3,w
  6125     0FD4  1D03               	btfss	3,2
  6126     0FD5  2FD7               	goto	u1621
  6127     0FD6  2FD8               	goto	u1620
  6128     0FD7                     u1621:
  6129     0FD7  2FE0               	goto	l2318
  6130     0FD8                     u1620:
  6131     0FD8                     l2316:
  6132                           
  6133                           ;remote.c: 89:             num_of_lang++;
  6134     0FD8  3001               	movlw	1
  6135     0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  6136     0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  6137     0FDB  07C3               	addwf	_num_of_lang^(0+128),f
  6138     0FDC  1803               	skipnc
  6139     0FDD  0AC4               	incf	(_num_of_lang+1)^(0+128),f
  6140     0FDE  3000               	movlw	0
  6141     0FDF  07C4               	addwf	(_num_of_lang+1)^(0+128),f
  6142     0FE0                     l2318:
  6143                           
  6144                           ;remote.c: 93:     if (num_of_lang > 6) {
  6145     0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  6146     0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  6147     0FE2  0844               	movf	(_num_of_lang+1)^(0+128),w
  6148     0FE3  3A80               	xorlw	128
  6149     0FE4  00FF               	movwf	btemp+1
  6150     0FE5  3080               	movlw	128
  6151     0FE6  027F               	subwf	btemp+1,w
  6152     0FE7  1D03               	skipz
  6153     0FE8  2FEB               	goto	u1635
  6154     0FE9  3007               	movlw	7
  6155     0FEA  0243               	subwf	_num_of_lang^(0+128),w
  6156     0FEB                     u1635:
  6157     0FEB  1C03               	skipc
  6158     0FEC  2FEE               	goto	u1631
  6159     0FED  2FEF               	goto	u1630
  6160     0FEE                     u1631:
  6161     0FEE  2FF3               	goto	l2322
  6162     0FEF                     u1630:
  6163     0FEF                     l2320:
  6164                           
  6165                           ;remote.c: 94:         num_of_lang = 0;
  6166     0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  6167     0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  6168     0FF1  01C3               	clrf	_num_of_lang^(0+128)
  6169     0FF2  01C4               	clrf	(_num_of_lang+1)^(0+128)
  6170     0FF3                     l2322:
  6171                           
  6172                           ;remote.c: 96:     final_code = 0;
  6173     0FF3  3000               	movlw	0
  6174     0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  6175     0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  6176     0FF6  00BC               	movwf	(_final_code+3)^(0+128)	;volatile
  6177     0FF7  3000               	movlw	0
  6178     0FF8  00BB               	movwf	(_final_code+2)^(0+128)	;volatile
  6179     0FF9  3000               	movlw	0
  6180     0FFA  00BA               	movwf	(_final_code+1)^(0+128)	;volatile
  6181     0FFB  3000               	movlw	0
  6182     0FFC  00B9               	movwf	_final_code^(0+128)	;volatile
  6183     0FFD                     l2324:
  6184                           
  6185                           ;remote.c: 97:     remote_counter = 0;
  6186     0FFD  01BF               	clrf	_remote_counter^(0+128)	;volatile
  6187     0FFE  01C0               	clrf	(_remote_counter+1)^(0+128)	;volatile
  6188     0FFF                     l337:
  6189     0FFF  0008               	return
  6190     1000                     __end_of_key_detection:
  6191                           
  6192                           	psect	text12
  6193     122C                     __ptext12:	
  6194 ;; *************** function _send_buffer *****************
  6195 ;; Defined at:
  6196 ;;		line 78 in file "scherm.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  scherm          1    wreg     enum E1442
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  scherm          1    2[BANK0 ] enum E1442
  6201 ;;  i               2    5[BANK0 ] int 
  6202 ;;  i               2    3[BANK0 ] int 
  6203 ;; Return value:  Size  Location     Type
  6204 ;;                  1    wreg      void 
  6205 ;; Registers used:
  6206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6207 ;; Tracked objects:
  6208 ;;		On entry : 0/0
  6209 ;;		On exit  : 0/0
  6210 ;;		Unchanged: 0/0
  6211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6212 ;;      Params:         0       0       0       0       0
  6213 ;;      Locals:         0       5       0       0       0
  6214 ;;      Temps:          0       1       0       0       0
  6215 ;;      Totals:         0       6       0       0       0
  6216 ;;Total ram usage:        6 bytes
  6217 ;; Hardware stack levels used: 1
  6218 ;; Hardware stack levels required when called: 4
  6219 ;; This function calls:
  6220 ;;		_screen_transmit
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;;		_key_detection
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227     122C                     _send_buffer:	
  6228                           ;psect for function _send_buffer
  6229                           
  6230                           
  6231                           ;incstack = 0
  6232                           ; Regs used in _send_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6233                           ;send_buffer@scherm stored from wreg
  6234     122C  1283               	bcf	3,5	;RP0=0, select bank0
  6235     122D  1303               	bcf	3,6	;RP1=0, select bank0
  6236     122E  00A2               	movwf	send_buffer@scherm
  6237     122F                     l2026:
  6238                           
  6239                           ;scherm.c: 79:     if (scherm == SCREEN_1) {
  6240     122F  0322               	decf	send_buffer@scherm,w
  6241     1230  1D03               	btfss	3,2
  6242     1231  2A33               	goto	u1291
  6243     1232  2A34               	goto	u1290
  6244     1233                     u1291:
  6245     1233  2A63               	goto	l2046
  6246     1234                     u1290:
  6247     1234                     l2028:
  6248                           
  6249                           ;scherm.c: 80:         PORTCbits.RC4 = 0;
  6250     1234  1207               	bcf	7,4	;volatile
  6251     1235                     l2030:
  6252                           
  6253                           ;scherm.c: 82:         for (int i = 0; i < 40; i++) {
  6254     1235  01A3               	clrf	send_buffer@i
  6255     1236  01A4               	clrf	send_buffer@i+1
  6256     1237                     l2036:
  6257                           
  6258                           ;scherm.c: 83:             screen_transmit(scherm1_buffer[i]);
  6259     1237  1283               	bcf	3,5	;RP0=0, select bank0
  6260     1238  1303               	bcf	3,6	;RP1=0, select bank0
  6261     1239  0823               	movf	send_buffer@i,w
  6262     123A  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  6263     123B  0084               	movwf	4
  6264     123C  1783               	bsf	3,7	;select IRP bank3
  6265     123D  0800               	movf	0,w
  6266     123E  160A  118A  2024  160A  118A  	fcall	_screen_transmit
  6267     1243                     l2038:
  6268                           
  6269                           ;scherm.c: 84:         }
  6270     1243  3001               	movlw	1
  6271     1244  1283               	bcf	3,5	;RP0=0, select bank0
  6272     1245  1303               	bcf	3,6	;RP1=0, select bank0
  6273     1246  07A3               	addwf	send_buffer@i,f
  6274     1247  1803               	skipnc
  6275     1248  0AA4               	incf	send_buffer@i+1,f
  6276     1249  3000               	movlw	0
  6277     124A  07A4               	addwf	send_buffer@i+1,f
  6278     124B                     l2040:
  6279     124B  0824               	movf	send_buffer@i+1,w
  6280     124C  3A80               	xorlw	128
  6281     124D  00FF               	movwf	btemp+1
  6282     124E  3080               	movlw	128
  6283     124F  027F               	subwf	btemp+1,w
  6284     1250  1D03               	skipz
  6285     1251  2A54               	goto	u1305
  6286     1252  3028               	movlw	40
  6287     1253  0223               	subwf	send_buffer@i,w
  6288     1254                     u1305:
  6289     1254  1C03               	skipc
  6290     1255  2A57               	goto	u1301
  6291     1256  2A58               	goto	u1300
  6292     1257                     u1301:
  6293     1257  2A37               	goto	l2036
  6294     1258                     u1300:
  6295     1258                     l2042:
  6296                           
  6297                           ;scherm.c: 85:         _delay((unsigned long)((200)*(500000/4000000.0)));
  6298     1258  3007               	movlw	7
  6299     1259  1283               	bcf	3,5	;RP0=0, select bank0
  6300     125A  1303               	bcf	3,6	;RP1=0, select bank0
  6301     125B  00A1               	movwf	??_send_buffer
  6302     125C                     u1857:
  6303     125C  0BA1               	decfsz	??_send_buffer,f
  6304     125D  2A5C               	goto	u1857
  6305     125E  0000               	nop
  6306     125F                     l2044:
  6307                           
  6308                           ;scherm.c: 86:         PORTCbits.RC4 = 1;
  6309     125F  1283               	bcf	3,5	;RP0=0, select bank0
  6310     1260  1303               	bcf	3,6	;RP1=0, select bank0
  6311     1261  1607               	bsf	7,4	;volatile
  6312                           
  6313                           ;scherm.c: 87:     } else if (scherm == SCREEN_2) {
  6314     1262  2A97               	goto	l472
  6315     1263                     l2046:
  6316     1263  3002               	movlw	2
  6317     1264  0622               	xorwf	send_buffer@scherm,w
  6318     1265  1D03               	btfss	3,2
  6319     1266  2A68               	goto	u1311
  6320     1267  2A69               	goto	u1310
  6321     1268                     u1311:
  6322     1268  2A97               	goto	l472
  6323     1269                     u1310:
  6324     1269                     l2048:
  6325                           
  6326                           ;scherm.c: 88:         PORTDbits.RD4 = 0;
  6327     1269  1208               	bcf	8,4	;volatile
  6328     126A                     l2050:
  6329                           
  6330                           ;scherm.c: 90:         for (int i = 0; i < 40; i++) {
  6331     126A  01A5               	clrf	send_buffer@i_974
  6332     126B  01A6               	clrf	send_buffer@i_974+1
  6333     126C                     l2056:
  6334                           
  6335                           ;scherm.c: 91:             screen_transmit(scherm2_buffer[i]);
  6336     126C  1283               	bcf	3,5	;RP0=0, select bank0
  6337     126D  1303               	bcf	3,6	;RP1=0, select bank0
  6338     126E  0825               	movf	send_buffer@i_974,w
  6339     126F  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  6340     1270  0084               	movwf	4
  6341     1271  1783               	bsf	3,7	;select IRP bank3
  6342     1272  0800               	movf	0,w
  6343     1273  160A  118A  2024  160A  118A  	fcall	_screen_transmit
  6344     1278                     l2058:
  6345                           
  6346                           ;scherm.c: 92:         }
  6347     1278  3001               	movlw	1
  6348     1279  1283               	bcf	3,5	;RP0=0, select bank0
  6349     127A  1303               	bcf	3,6	;RP1=0, select bank0
  6350     127B  07A5               	addwf	send_buffer@i_974,f
  6351     127C  1803               	skipnc
  6352     127D  0AA6               	incf	send_buffer@i_974+1,f
  6353     127E  3000               	movlw	0
  6354     127F  07A6               	addwf	send_buffer@i_974+1,f
  6355     1280                     l2060:
  6356     1280  0826               	movf	send_buffer@i_974+1,w
  6357     1281  3A80               	xorlw	128
  6358     1282  00FF               	movwf	btemp+1
  6359     1283  3080               	movlw	128
  6360     1284  027F               	subwf	btemp+1,w
  6361     1285  1D03               	skipz
  6362     1286  2A89               	goto	u1325
  6363     1287  3028               	movlw	40
  6364     1288  0225               	subwf	send_buffer@i_974,w
  6365     1289                     u1325:
  6366     1289  1C03               	skipc
  6367     128A  2A8C               	goto	u1321
  6368     128B  2A8D               	goto	u1320
  6369     128C                     u1321:
  6370     128C  2A6C               	goto	l2056
  6371     128D                     u1320:
  6372     128D                     l2062:
  6373                           
  6374                           ;scherm.c: 93:         _delay((unsigned long)((200)*(500000/4000000.0)));
  6375     128D  3007               	movlw	7
  6376     128E  1283               	bcf	3,5	;RP0=0, select bank0
  6377     128F  1303               	bcf	3,6	;RP1=0, select bank0
  6378     1290  00A1               	movwf	??_send_buffer
  6379     1291                     u1867:
  6380     1291  0BA1               	decfsz	??_send_buffer,f
  6381     1292  2A91               	goto	u1867
  6382     1293  0000               	nop
  6383     1294                     l2064:
  6384                           
  6385                           ;scherm.c: 94:         PORTDbits.RD4 = 1;
  6386     1294  1283               	bcf	3,5	;RP0=0, select bank0
  6387     1295  1303               	bcf	3,6	;RP1=0, select bank0
  6388     1296  1608               	bsf	8,4	;volatile
  6389     1297                     l472:
  6390     1297  0008               	return
  6391     1298                     __end_of_send_buffer:
  6392                           
  6393                           	psect	text13
  6394     1024                     __ptext13:	
  6395 ;; *************** function _screen_transmit *****************
  6396 ;; Defined at:
  6397 ;;		line 173 in file "scherm.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  c               1    wreg     unsigned char 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;  c               1    0[BANK0 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6411 ;;      Params:         0       0       0       0       0
  6412 ;;      Locals:         0       1       0       0       0
  6413 ;;      Temps:          0       0       0       0       0
  6414 ;;      Totals:         0       1       0       0       0
  6415 ;;Total ram usage:        1 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; Hardware stack levels required when called: 3
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_scherm_init
  6422 ;;		_send_buffer
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426     1024                     _screen_transmit:	
  6427                           ;psect for function _screen_transmit
  6428                           
  6429                           
  6430                           ;incstack = 0
  6431                           ; Regs used in _screen_transmit: [wreg]
  6432                           ;screen_transmit@c stored from wreg
  6433     1024  1283               	bcf	3,5	;RP0=0, select bank0
  6434     1025  1303               	bcf	3,6	;RP1=0, select bank0
  6435     1026  00A0               	movwf	screen_transmit@c
  6436     1027                     l1974:
  6437                           
  6438                           ;scherm.c: 175:     SSPBUF = c;
  6439     1027  0820               	movf	screen_transmit@c,w
  6440     1028  0093               	movwf	19	;volatile
  6441     1029                     l534:
  6442     1029  0008               	return
  6443     102A                     __end_of_screen_transmit:
  6444                           
  6445                           	psect	text14
  6446     0B79                     __ptext14:	
  6447 ;; *************** function _scherm_setup *****************
  6448 ;; Defined at:
  6449 ;;		line 70 in file "scherm.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  screen1         8   61[BANK0 ] unsigned char [8]
  6454 ;;  screen2         8   53[BANK0 ] unsigned char [8]
  6455 ;; Return value:  Size  Location     Type
  6456 ;;                  1    wreg      void 
  6457 ;; Registers used:
  6458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6459 ;; Tracked objects:
  6460 ;;		On entry : 0/0
  6461 ;;		On exit  : 0/0
  6462 ;;		Unchanged: 0/0
  6463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6464 ;;      Params:         0       0       0       0       0
  6465 ;;      Locals:         0      16       0       0       0
  6466 ;;      Temps:          0       4       0       0       0
  6467 ;;      Totals:         0      20       0       0       0
  6468 ;;Total ram usage:       20 bytes
  6469 ;; Hardware stack levels used: 1
  6470 ;; Hardware stack levels required when called: 6
  6471 ;; This function calls:
  6472 ;;		_text_to_buffer
  6473 ;; This function is called by:
  6474 ;;		_main
  6475 ;;		_key_detection
  6476 ;; This function uses a non-reentrant model
  6477 ;;
  6478                           
  6479     0B79                     _scherm_setup:	
  6480                           ;psect for function _scherm_setup
  6481                           
  6482     0B79                     l2020:	
  6483                           ;incstack = 0
  6484                           ; Regs used in _scherm_setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6485                           
  6486                           
  6487                           ;scherm.c: 71:     char screen2[8] = "INPUT:0 ";
  6488     0B79  3055               	movlw	scherm_setup@screen2& (0+255)
  6489     0B7A  0084               	movwf	4
  6490     0B7B  30A8               	movlw	low scherm_setup@F1477
  6491     0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  6492     0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  6493     0B7E  00D1               	movwf	??_scherm_setup
  6494     0B7F  0804               	movf	4,w
  6495     0B80  00D2               	movwf	??_scherm_setup+1
  6496     0B81  3008               	movlw	8
  6497     0B82  00D3               	movwf	??_scherm_setup+2
  6498     0B83                     u1270:
  6499     0B83  0851               	movf	??_scherm_setup,w
  6500     0B84  0084               	movwf	4
  6501     0B85  1383               	bcf	3,7	;select IRP bank1
  6502     0B86  0800               	movf	0,w
  6503     0B87  00D4               	movwf	??_scherm_setup+3
  6504     0B88  0AD1               	incf	??_scherm_setup,f
  6505     0B89  0852               	movf	??_scherm_setup+1,w
  6506     0B8A  0084               	movwf	4
  6507     0B8B  0854               	movf	??_scherm_setup+3,w
  6508     0B8C  0080               	movwf	0
  6509     0B8D  0AD2               	incf	??_scherm_setup+1,f
  6510     0B8E  0BD3               	decfsz	??_scherm_setup+2,f
  6511     0B8F  2B83               	goto	u1270
  6512     0B90                     l2022:
  6513                           
  6514                           ;scherm.c: 72:     text_to_buffer(SCREEN_2, screen2);
  6515     0B90  3055               	movlw	(low (scherm_setup@screen2| 0))& (0+255)
  6516     0B91  00CC               	movwf	text_to_buffer@newtext
  6517     0B92  3002               	movlw	2
  6518     0B93  160A  118A  213D  120A  158A  	fcall	_text_to_buffer
  6519     0B98                     l2024:
  6520                           
  6521                           ;scherm.c: 73:     char screen1[8] = "VOL:0   ";
  6522     0B98  305D               	movlw	scherm_setup@screen1& (0+255)
  6523     0B99  0084               	movwf	4
  6524     0B9A  30A0               	movlw	low scherm_setup@F1479
  6525     0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  6526     0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  6527     0B9D  00D1               	movwf	??_scherm_setup
  6528     0B9E  0804               	movf	4,w
  6529     0B9F  00D2               	movwf	??_scherm_setup+1
  6530     0BA0  3008               	movlw	8
  6531     0BA1  00D3               	movwf	??_scherm_setup+2
  6532     0BA2                     u1280:
  6533     0BA2  0851               	movf	??_scherm_setup,w
  6534     0BA3  0084               	movwf	4
  6535     0BA4  1383               	bcf	3,7	;select IRP bank1
  6536     0BA5  0800               	movf	0,w
  6537     0BA6  00D4               	movwf	??_scherm_setup+3
  6538     0BA7  0AD1               	incf	??_scherm_setup,f
  6539     0BA8  0852               	movf	??_scherm_setup+1,w
  6540     0BA9  0084               	movwf	4
  6541     0BAA  0854               	movf	??_scherm_setup+3,w
  6542     0BAB  0080               	movwf	0
  6543     0BAC  0AD2               	incf	??_scherm_setup+1,f
  6544     0BAD  0BD3               	decfsz	??_scherm_setup+2,f
  6545     0BAE  2BA2               	goto	u1280
  6546                           
  6547                           ;scherm.c: 74:     text_to_buffer(SCREEN_1, screen1);
  6548     0BAF  305D               	movlw	(low (scherm_setup@screen1| 0))& (0+255)
  6549     0BB0  00CC               	movwf	text_to_buffer@newtext
  6550     0BB1  3001               	movlw	1
  6551     0BB2  160A  118A  213D  120A  158A  	fcall	_text_to_buffer
  6552     0BB7                     l462:
  6553     0BB7  0008               	return
  6554     0BB8                     __end_of_scherm_setup:
  6555                           
  6556                           	psect	text15
  6557     113D                     __ptext15:	
  6558 ;; *************** function _text_to_buffer *****************
  6559 ;; Defined at:
  6560 ;;		line 166 in file "scherm.c"
  6561 ;; Parameters:    Size  Location     Type
  6562 ;;  scherm          1    wreg     enum E1442
  6563 ;;  newtext         1   44[BANK0 ] PTR unsigned char 
  6564 ;;		 -> scherm_setup@screen1(8), scherm_setup@screen2(8), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  scherm          1   46[BANK0 ] enum E1442
  6567 ;;  i               2   47[BANK0 ] int 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6577 ;;      Params:         0       1       0       0       0
  6578 ;;      Locals:         0       3       0       0       0
  6579 ;;      Temps:          0       1       0       0       0
  6580 ;;      Totals:         0       5       0       0       0
  6581 ;;Total ram usage:        5 bytes
  6582 ;; Hardware stack levels used: 1
  6583 ;; Hardware stack levels required when called: 5
  6584 ;; This function calls:
  6585 ;;		_load_buffer
  6586 ;; This function is called by:
  6587 ;;		_scherm_setup
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591     113D                     _text_to_buffer:	
  6592                           ;psect for function _text_to_buffer
  6593                           
  6594                           
  6595                           ;incstack = 0
  6596                           ; Regs used in _text_to_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6597                           ;text_to_buffer@scherm stored from wreg
  6598     113D  1283               	bcf	3,5	;RP0=0, select bank0
  6599     113E  1303               	bcf	3,6	;RP1=0, select bank0
  6600     113F  00CE               	movwf	text_to_buffer@scherm
  6601     1140                     l1976:
  6602                           
  6603                           ;scherm.c: 167:     for (int i = 0; i < 8; i++) {
  6604     1140  01CF               	clrf	text_to_buffer@i
  6605     1141  01D0               	clrf	text_to_buffer@i+1
  6606     1142                     l1982:
  6607                           
  6608                           ;scherm.c: 168:         load_buffer(num_of_lang, newtext[i], i, scherm);
  6609     1142  1683               	bsf	3,5	;RP0=1, select bank1
  6610     1143  1303               	bcf	3,6	;RP1=0, select bank1
  6611     1144  0844               	movf	(_num_of_lang+1)^(0+128),w
  6612     1145  1283               	bcf	3,5	;RP0=0, select bank0
  6613     1146  1303               	bcf	3,6	;RP1=0, select bank0
  6614     1147  00A7               	movwf	load_buffer@lang+1
  6615     1148  1683               	bsf	3,5	;RP0=1, select bank1
  6616     1149  1303               	bcf	3,6	;RP1=0, select bank1
  6617     114A  0843               	movf	_num_of_lang^(0+128),w
  6618     114B  1283               	bcf	3,5	;RP0=0, select bank0
  6619     114C  1303               	bcf	3,6	;RP1=0, select bank0
  6620     114D  00A6               	movwf	load_buffer@lang
  6621     114E  084F               	movf	text_to_buffer@i,w
  6622     114F  074C               	addwf	text_to_buffer@newtext,w
  6623     1150  00CD               	movwf	??_text_to_buffer
  6624     1151  084D               	movf	??_text_to_buffer,w
  6625     1152  0084               	movwf	4
  6626     1153  1383               	bcf	3,7	;select IRP bank0
  6627     1154  0800               	movf	0,w
  6628     1155  00A8               	movwf	load_buffer@character
  6629     1156  0850               	movf	text_to_buffer@i+1,w
  6630     1157  00AA               	movwf	load_buffer@position+1
  6631     1158  084F               	movf	text_to_buffer@i,w
  6632     1159  00A9               	movwf	load_buffer@position
  6633     115A  084E               	movf	text_to_buffer@scherm,w
  6634     115B  00AB               	movwf	load_buffer@scherm
  6635     115C  160A  118A  2298  160A  118A  	fcall	_load_buffer
  6636     1161                     l1984:
  6637                           
  6638                           ;scherm.c: 169:     }
  6639     1161  3001               	movlw	1
  6640     1162  1283               	bcf	3,5	;RP0=0, select bank0
  6641     1163  1303               	bcf	3,6	;RP1=0, select bank0
  6642     1164  07CF               	addwf	text_to_buffer@i,f
  6643     1165  1803               	skipnc
  6644     1166  0AD0               	incf	text_to_buffer@i+1,f
  6645     1167  3000               	movlw	0
  6646     1168  07D0               	addwf	text_to_buffer@i+1,f
  6647     1169                     l1986:
  6648     1169  0850               	movf	text_to_buffer@i+1,w
  6649     116A  3A80               	xorlw	128
  6650     116B  00FF               	movwf	btemp+1
  6651     116C  3080               	movlw	128
  6652     116D  027F               	subwf	btemp+1,w
  6653     116E  1D03               	skipz
  6654     116F  2972               	goto	u1255
  6655     1170  3008               	movlw	8
  6656     1171  024F               	subwf	text_to_buffer@i,w
  6657     1172                     u1255:
  6658     1172  1C03               	skipc
  6659     1173  2975               	goto	u1251
  6660     1174  2976               	goto	u1250
  6661     1175                     u1251:
  6662     1175  2942               	goto	l1982
  6663     1176                     u1250:
  6664     1176                     l531:
  6665     1176  0008               	return
  6666     1177                     __end_of_text_to_buffer:
  6667                           
  6668                           	psect	text16
  6669     10F5                     __ptext16:	
  6670 ;; *************** function _input_conversion *****************
  6671 ;; Defined at:
  6672 ;;		line 38 in file "rotary.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;		None
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  inputNew        1   44[BANK0 ] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1    wreg      void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       0       0       0       0
  6687 ;;      Locals:         0       1       0       0       0
  6688 ;;      Temps:          0       0       0       0       0
  6689 ;;      Totals:         0       1       0       0       0
  6690 ;;Total ram usage:        1 bytes
  6691 ;; Hardware stack levels used: 1
  6692 ;; Hardware stack levels required when called: 5
  6693 ;; This function calls:
  6694 ;;		_load_buffer
  6695 ;; This function is called by:
  6696 ;;		_main
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700     10F5                     _input_conversion:	
  6701                           ;psect for function _input_conversion
  6702                           
  6703     10F5                     l2326:	
  6704                           ;incstack = 0
  6705                           ; Regs used in _input_conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6706                           
  6707     10F5  1683               	bsf	3,5	;RP0=1, select bank1
  6708     10F6  1303               	bcf	3,6	;RP1=0, select bank1
  6709     10F7  0834               	movf	_input^(0+128),w
  6710     10F8  3E30               	addlw	48
  6711     10F9  1283               	bcf	3,5	;RP0=0, select bank0
  6712     10FA  1303               	bcf	3,6	;RP1=0, select bank0
  6713     10FB  00CC               	movwf	input_conversion@inputNew
  6714     10FC                     l2328:
  6715                           
  6716                           ;rotary.c: 41:     load_buffer(num_of_lang, inputNew, 6, SCREEN_2);
  6717     10FC  1683               	bsf	3,5	;RP0=1, select bank1
  6718     10FD  1303               	bcf	3,6	;RP1=0, select bank1
  6719     10FE  0844               	movf	(_num_of_lang+1)^(0+128),w
  6720     10FF  1283               	bcf	3,5	;RP0=0, select bank0
  6721     1100  1303               	bcf	3,6	;RP1=0, select bank0
  6722     1101  00A7               	movwf	load_buffer@lang+1
  6723     1102  1683               	bsf	3,5	;RP0=1, select bank1
  6724     1103  1303               	bcf	3,6	;RP1=0, select bank1
  6725     1104  0843               	movf	_num_of_lang^(0+128),w
  6726     1105  1283               	bcf	3,5	;RP0=0, select bank0
  6727     1106  1303               	bcf	3,6	;RP1=0, select bank0
  6728     1107  00A6               	movwf	load_buffer@lang
  6729     1108  084C               	movf	input_conversion@inputNew,w
  6730     1109  00A8               	movwf	load_buffer@character
  6731     110A  3006               	movlw	6
  6732     110B  00A9               	movwf	load_buffer@position
  6733     110C  3000               	movlw	0
  6734     110D  00AA               	movwf	load_buffer@position+1
  6735     110E  3002               	movlw	2
  6736     110F  00AB               	movwf	load_buffer@scherm
  6737     1110  160A  118A  2298  160A  118A  	fcall	_load_buffer
  6738     1115                     l403:
  6739     1115  0008               	return
  6740     1116                     __end_of_input_conversion:
  6741                           
  6742                           	psect	text17
  6743     1298                     __ptext17:	
  6744 ;; *************** function _load_buffer *****************
  6745 ;; Defined at:
  6746 ;;		line 98 in file "scherm.c"
  6747 ;; Parameters:    Size  Location     Type
  6748 ;;  lang            2    6[BANK0 ] int 
  6749 ;;  character       1    8[BANK0 ] unsigned char 
  6750 ;;  position        2    9[BANK0 ] int 
  6751 ;;  scherm          1   11[BANK0 ] enum E1442
  6752 ;; Auto vars:     Size  Location     Type
  6753 ;;  i               2   42[BANK0 ] int 
  6754 ;;  i               2   34[BANK0 ] int 
  6755 ;;  i               2   32[BANK0 ] int 
  6756 ;;  i               2   40[BANK0 ] int 
  6757 ;;  i               2   30[BANK0 ] int 
  6758 ;;  i               2   28[BANK0 ] int 
  6759 ;;  i               2   38[BANK0 ] int 
  6760 ;;  i               2   26[BANK0 ] int 
  6761 ;;  i               2   24[BANK0 ] int 
  6762 ;;  i               2   36[BANK0 ] int 
  6763 ;;  i               2   22[BANK0 ] int 
  6764 ;;  i               2   20[BANK0 ] int 
  6765 ;; Return value:  Size  Location     Type
  6766 ;;                  1    wreg      void 
  6767 ;; Registers used:
  6768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6769 ;; Tracked objects:
  6770 ;;		On entry : 0/0
  6771 ;;		On exit  : 0/0
  6772 ;;		Unchanged: 0/0
  6773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6774 ;;      Params:         0       6       0       0       0
  6775 ;;      Locals:         0      24       0       0       0
  6776 ;;      Temps:          0       8       0       0       0
  6777 ;;      Totals:         0      38       0       0       0
  6778 ;;Total ram usage:       38 bytes
  6779 ;; Hardware stack levels used: 1
  6780 ;; Hardware stack levels required when called: 4
  6781 ;; This function calls:
  6782 ;;		___bmul
  6783 ;;		___wmul
  6784 ;; This function is called by:
  6785 ;;		_volume_conversion
  6786 ;;		_input_conversion
  6787 ;;		_text_to_buffer
  6788 ;; This function uses a non-reentrant model
  6789 ;;
  6790                           
  6791     1298                     _load_buffer:	
  6792                           ;psect for function _load_buffer
  6793                           
  6794     1298                     l1798:	
  6795                           ;incstack = 0
  6796                           ; Regs used in _load_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6797                           
  6798                           
  6799                           ;scherm.c: 99:     if (lang == 0) {
  6800     1298  1283               	bcf	3,5	;RP0=0, select bank0
  6801     1299  1303               	bcf	3,6	;RP1=0, select bank0
  6802     129A  0826               	movf	load_buffer@lang,w
  6803     129B  0427               	iorwf	load_buffer@lang+1,w
  6804     129C  1D03               	btfss	3,2
  6805     129D  2A9F               	goto	u971
  6806     129E  2AA0               	goto	u970
  6807     129F                     u971:
  6808     129F  2BF2               	goto	l1842
  6809     12A0                     u970:
  6810     12A0                     l1800:
  6811                           
  6812                           ;scherm.c: 100:         if (scherm == SCREEN_1) {
  6813     12A0  032B               	decf	load_buffer@scherm,w
  6814     12A1  1D03               	btfss	3,2
  6815     12A2  2AA4               	goto	u981
  6816     12A3  2AA5               	goto	u980
  6817     12A4                     u981:
  6818     12A4  2AFC               	goto	l1814
  6819     12A5                     u980:
  6820     12A5                     l1802:
  6821                           
  6822                           ;scherm.c: 101:             for (int i = 0; i < 5; i++) {
  6823     12A5  01B4               	clrf	load_buffer@i
  6824     12A6  01B5               	clrf	load_buffer@i+1
  6825     12A7                     l1808:
  6826                           
  6827                           ;scherm.c: 102:                 scherm1_buffer[position * 5 + i] = ascii[character][i];
  6828     12A7  1283               	bcf	3,5	;RP0=0, select bank0
  6829     12A8  1303               	bcf	3,6	;RP1=0, select bank0
  6830     12A9  0828               	movf	load_buffer@character,w
  6831     12AA  00AC               	movwf	??_load_buffer
  6832     12AB  01AD               	clrf	??_load_buffer+1
  6833     12AC  082C               	movf	??_load_buffer,w
  6834     12AD  00A0               	movwf	___wmul@multiplier
  6835     12AE  082D               	movf	??_load_buffer+1,w
  6836     12AF  00A1               	movwf	___wmul@multiplier+1
  6837     12B0  3005               	movlw	5
  6838     12B1  00A2               	movwf	___wmul@multiplicand
  6839     12B2  3000               	movlw	0
  6840     12B3  00A3               	movwf	___wmul@multiplicand+1
  6841     12B4  160A  118A  2116  160A  118A  	fcall	___wmul
  6842     12B9  3092               	movlw	low (_ascii| (0+32768))
  6843     12BA  1283               	bcf	3,5	;RP0=0, select bank0
  6844     12BB  1303               	bcf	3,6	;RP1=0, select bank0
  6845     12BC  00AE               	movwf	??_load_buffer+2
  6846     12BD  3088               	movlw	high (_ascii| (0+32768))
  6847     12BE  00AF               	movwf	??_load_buffer+3
  6848     12BF  0820               	movf	?___wmul,w
  6849     12C0  072E               	addwf	??_load_buffer+2,w
  6850     12C1  00B0               	movwf	??_load_buffer+4
  6851     12C2  0821               	movf	?___wmul+1,w
  6852     12C3  1803               	skipnc
  6853     12C4  0A21               	incf	?___wmul+1,w
  6854     12C5  072F               	addwf	??_load_buffer+3,w
  6855     12C6  00B1               	movwf	??_load_buffer+5
  6856     12C7  0834               	movf	load_buffer@i,w
  6857     12C8  0730               	addwf	??_load_buffer+4,w
  6858     12C9  0084               	movwf	4
  6859     12CA  0835               	movf	load_buffer@i+1,w
  6860     12CB  1803               	skipnc
  6861     12CC  0A35               	incf	load_buffer@i+1,w
  6862     12CD  0731               	addwf	??_load_buffer+5,w
  6863     12CE  00FF               	movwf	btemp+1
  6864     12CF  120A  118A  2100  160A  118A  	fcall	stringtab
  6865     12D4  00B2               	movwf	??_load_buffer+6
  6866     12D5  3005               	movlw	5
  6867     12D6  00A0               	movwf	___bmul@multiplicand
  6868     12D7  0829               	movf	load_buffer@position,w
  6869     12D8  160A  118A  208F  160A  118A  	fcall	___bmul
  6870     12DD  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  6871     12DE  1283               	bcf	3,5	;RP0=0, select bank0
  6872     12DF  1303               	bcf	3,6	;RP1=0, select bank0
  6873     12E0  0734               	addwf	load_buffer@i,w
  6874     12E1  00B3               	movwf	??_load_buffer+7
  6875     12E2  0833               	movf	??_load_buffer+7,w
  6876     12E3  0084               	movwf	4
  6877     12E4  0832               	movf	??_load_buffer+6,w
  6878     12E5  1783               	bsf	3,7	;select IRP bank3
  6879     12E6  0080               	movwf	0
  6880     12E7                     l1810:
  6881                           
  6882                           ;scherm.c: 103:             }
  6883     12E7  3001               	movlw	1
  6884     12E8  07B4               	addwf	load_buffer@i,f
  6885     12E9  1803               	skipnc
  6886     12EA  0AB5               	incf	load_buffer@i+1,f
  6887     12EB  3000               	movlw	0
  6888     12EC  07B5               	addwf	load_buffer@i+1,f
  6889     12ED                     l1812:
  6890     12ED  0835               	movf	load_buffer@i+1,w
  6891     12EE  3A80               	xorlw	128
  6892     12EF  00FF               	movwf	btemp+1
  6893     12F0  3080               	movlw	128
  6894     12F1  027F               	subwf	btemp+1,w
  6895     12F2  1D03               	skipz
  6896     12F3  2AF6               	goto	u995
  6897     12F4  3005               	movlw	5
  6898     12F5  0234               	subwf	load_buffer@i,w
  6899     12F6                     u995:
  6900     12F6  1C03               	skipc
  6901     12F7  2AF9               	goto	u991
  6902     12F8  2AFA               	goto	u990
  6903     12F9                     u991:
  6904     12F9  2AA7               	goto	l1808
  6905     12FA                     u990:
  6906     12FA  2FFF               	goto	l526
  6907     12FB                     l478:
  6908                           
  6909                           ;scherm.c: 104:         } else if (scherm == SCREEN_2) {
  6910     12FB  2FFF               	goto	l526
  6911     12FC                     l1814:
  6912     12FC  3002               	movlw	2
  6913     12FD  062B               	xorwf	load_buffer@scherm,w
  6914     12FE  1D03               	btfss	3,2
  6915     12FF  2B01               	goto	u1001
  6916     1300  2B02               	goto	u1000
  6917     1301                     u1001:
  6918     1301  2B58               	goto	l1828
  6919     1302                     u1000:
  6920     1302                     l1816:
  6921                           
  6922                           ;scherm.c: 105:             for (int i = 0; i < 5; i++) {
  6923     1302  01B6               	clrf	load_buffer@i_981
  6924     1303  01B7               	clrf	load_buffer@i_981+1
  6925     1304                     l1822:
  6926                           
  6927                           ;scherm.c: 106:                 scherm2_buffer[position * 5 + i] = ascii[character][i];
  6928     1304  1283               	bcf	3,5	;RP0=0, select bank0
  6929     1305  1303               	bcf	3,6	;RP1=0, select bank0
  6930     1306  0828               	movf	load_buffer@character,w
  6931     1307  00AC               	movwf	??_load_buffer
  6932     1308  01AD               	clrf	??_load_buffer+1
  6933     1309  082C               	movf	??_load_buffer,w
  6934     130A  00A0               	movwf	___wmul@multiplier
  6935     130B  082D               	movf	??_load_buffer+1,w
  6936     130C  00A1               	movwf	___wmul@multiplier+1
  6937     130D  3005               	movlw	5
  6938     130E  00A2               	movwf	___wmul@multiplicand
  6939     130F  3000               	movlw	0
  6940     1310  00A3               	movwf	___wmul@multiplicand+1
  6941     1311  160A  118A  2116  160A  118A  	fcall	___wmul
  6942     1316  3092               	movlw	low (_ascii| (0+32768))
  6943     1317  1283               	bcf	3,5	;RP0=0, select bank0
  6944     1318  1303               	bcf	3,6	;RP1=0, select bank0
  6945     1319  00AE               	movwf	??_load_buffer+2
  6946     131A  3088               	movlw	high (_ascii| (0+32768))
  6947     131B  00AF               	movwf	??_load_buffer+3
  6948     131C  0820               	movf	?___wmul,w
  6949     131D  072E               	addwf	??_load_buffer+2,w
  6950     131E  00B0               	movwf	??_load_buffer+4
  6951     131F  0821               	movf	?___wmul+1,w
  6952     1320  1803               	skipnc
  6953     1321  0A21               	incf	?___wmul+1,w
  6954     1322  072F               	addwf	??_load_buffer+3,w
  6955     1323  00B1               	movwf	??_load_buffer+5
  6956     1324  0836               	movf	load_buffer@i_981,w
  6957     1325  0730               	addwf	??_load_buffer+4,w
  6958     1326  0084               	movwf	4
  6959     1327  0837               	movf	load_buffer@i_981+1,w
  6960     1328  1803               	skipnc
  6961     1329  0A37               	incf	load_buffer@i_981+1,w
  6962     132A  0731               	addwf	??_load_buffer+5,w
  6963     132B  00FF               	movwf	btemp+1
  6964     132C  120A  118A  2100  160A  118A  	fcall	stringtab
  6965     1331  00B2               	movwf	??_load_buffer+6
  6966     1332  3005               	movlw	5
  6967     1333  00A0               	movwf	___bmul@multiplicand
  6968     1334  0829               	movf	load_buffer@position,w
  6969     1335  160A  118A  208F  160A  118A  	fcall	___bmul
  6970     133A  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  6971     133B  1283               	bcf	3,5	;RP0=0, select bank0
  6972     133C  1303               	bcf	3,6	;RP1=0, select bank0
  6973     133D  0736               	addwf	load_buffer@i_981,w
  6974     133E  00B3               	movwf	??_load_buffer+7
  6975     133F  0833               	movf	??_load_buffer+7,w
  6976     1340  0084               	movwf	4
  6977     1341  0832               	movf	??_load_buffer+6,w
  6978     1342  1783               	bsf	3,7	;select IRP bank3
  6979     1343  0080               	movwf	0
  6980     1344                     l1824:
  6981                           
  6982                           ;scherm.c: 107:             }
  6983     1344  3001               	movlw	1
  6984     1345  07B6               	addwf	load_buffer@i_981,f
  6985     1346  1803               	skipnc
  6986     1347  0AB7               	incf	load_buffer@i_981+1,f
  6987     1348  3000               	movlw	0
  6988     1349  07B7               	addwf	load_buffer@i_981+1,f
  6989     134A                     l1826:
  6990     134A  0837               	movf	load_buffer@i_981+1,w
  6991     134B  3A80               	xorlw	128
  6992     134C  00FF               	movwf	btemp+1
  6993     134D  3080               	movlw	128
  6994     134E  027F               	subwf	btemp+1,w
  6995     134F  1D03               	skipz
  6996     1350  2B53               	goto	u1015
  6997     1351  3005               	movlw	5
  6998     1352  0236               	subwf	load_buffer@i_981,w
  6999     1353                     u1015:
  7000     1353  1C03               	skipc
  7001     1354  2B56               	goto	u1011
  7002     1355  2B57               	goto	u1010
  7003     1356                     u1011:
  7004     1356  2B04               	goto	l1822
  7005     1357                     u1010:
  7006     1357  2FFF               	goto	l526
  7007     1358                     l1828:
  7008     1358  3003               	movlw	3
  7009     1359  062B               	xorwf	load_buffer@scherm,w
  7010     135A  1D03               	btfss	3,2
  7011     135B  2B5D               	goto	u1021
  7012     135C  2B5E               	goto	u1020
  7013     135D                     u1021:
  7014     135D  2AFB               	goto	l478
  7015     135E                     u1020:
  7016     135E                     l1830:
  7017                           
  7018                           ;scherm.c: 109:             for (int i = 0; i < 5; i++) {
  7019     135E  01C4               	clrf	load_buffer@i_982
  7020     135F  01C5               	clrf	load_buffer@i_982+1
  7021     1360                     l1836:
  7022                           
  7023                           ;scherm.c: 110:                 scherm1_buffer[position * 5 + i] = ascii[character][i];
  7024     1360  1283               	bcf	3,5	;RP0=0, select bank0
  7025     1361  1303               	bcf	3,6	;RP1=0, select bank0
  7026     1362  0828               	movf	load_buffer@character,w
  7027     1363  00AC               	movwf	??_load_buffer
  7028     1364  01AD               	clrf	??_load_buffer+1
  7029     1365  082C               	movf	??_load_buffer,w
  7030     1366  00A0               	movwf	___wmul@multiplier
  7031     1367  082D               	movf	??_load_buffer+1,w
  7032     1368  00A1               	movwf	___wmul@multiplier+1
  7033     1369  3005               	movlw	5
  7034     136A  00A2               	movwf	___wmul@multiplicand
  7035     136B  3000               	movlw	0
  7036     136C  00A3               	movwf	___wmul@multiplicand+1
  7037     136D  160A  118A  2116  160A  118A  	fcall	___wmul
  7038     1372  3092               	movlw	low (_ascii| (0+32768))
  7039     1373  1283               	bcf	3,5	;RP0=0, select bank0
  7040     1374  1303               	bcf	3,6	;RP1=0, select bank0
  7041     1375  00AE               	movwf	??_load_buffer+2
  7042     1376  3088               	movlw	high (_ascii| (0+32768))
  7043     1377  00AF               	movwf	??_load_buffer+3
  7044     1378  0820               	movf	?___wmul,w
  7045     1379  072E               	addwf	??_load_buffer+2,w
  7046     137A  00B0               	movwf	??_load_buffer+4
  7047     137B  0821               	movf	?___wmul+1,w
  7048     137C  1803               	skipnc
  7049     137D  0A21               	incf	?___wmul+1,w
  7050     137E  072F               	addwf	??_load_buffer+3,w
  7051     137F  00B1               	movwf	??_load_buffer+5
  7052     1380  0844               	movf	load_buffer@i_982,w
  7053     1381  0730               	addwf	??_load_buffer+4,w
  7054     1382  0084               	movwf	4
  7055     1383  0845               	movf	load_buffer@i_982+1,w
  7056     1384  1803               	skipnc
  7057     1385  0A45               	incf	load_buffer@i_982+1,w
  7058     1386  0731               	addwf	??_load_buffer+5,w
  7059     1387  00FF               	movwf	btemp+1
  7060     1388  120A  118A  2100  160A  118A  	fcall	stringtab
  7061     138D  00B2               	movwf	??_load_buffer+6
  7062     138E  3005               	movlw	5
  7063     138F  00A0               	movwf	___bmul@multiplicand
  7064     1390  0829               	movf	load_buffer@position,w
  7065     1391  160A  118A  208F  160A  118A  	fcall	___bmul
  7066     1396  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7067     1397  1283               	bcf	3,5	;RP0=0, select bank0
  7068     1398  1303               	bcf	3,6	;RP1=0, select bank0
  7069     1399  0744               	addwf	load_buffer@i_982,w
  7070     139A  00B3               	movwf	??_load_buffer+7
  7071     139B  0833               	movf	??_load_buffer+7,w
  7072     139C  0084               	movwf	4
  7073     139D  0832               	movf	??_load_buffer+6,w
  7074     139E  1783               	bsf	3,7	;select IRP bank3
  7075     139F  0080               	movwf	0
  7076                           
  7077                           ;scherm.c: 111:                 scherm2_buffer[position * 5 + i] = ascii[character][i];
  7078     13A0  0828               	movf	load_buffer@character,w
  7079     13A1  00AC               	movwf	??_load_buffer
  7080     13A2  01AD               	clrf	??_load_buffer+1
  7081     13A3  082C               	movf	??_load_buffer,w
  7082     13A4  00A0               	movwf	___wmul@multiplier
  7083     13A5  082D               	movf	??_load_buffer+1,w
  7084     13A6  00A1               	movwf	___wmul@multiplier+1
  7085     13A7  3005               	movlw	5
  7086     13A8  00A2               	movwf	___wmul@multiplicand
  7087     13A9  3000               	movlw	0
  7088     13AA  00A3               	movwf	___wmul@multiplicand+1
  7089     13AB  160A  118A  2116  160A  118A  	fcall	___wmul
  7090     13B0  3092               	movlw	low (_ascii| (0+32768))
  7091     13B1  1283               	bcf	3,5	;RP0=0, select bank0
  7092     13B2  1303               	bcf	3,6	;RP1=0, select bank0
  7093     13B3  00AE               	movwf	??_load_buffer+2
  7094     13B4  3088               	movlw	high (_ascii| (0+32768))
  7095     13B5  00AF               	movwf	??_load_buffer+3
  7096     13B6  0820               	movf	?___wmul,w
  7097     13B7  072E               	addwf	??_load_buffer+2,w
  7098     13B8  00B0               	movwf	??_load_buffer+4
  7099     13B9  0821               	movf	?___wmul+1,w
  7100     13BA  1803               	skipnc
  7101     13BB  0A21               	incf	?___wmul+1,w
  7102     13BC  072F               	addwf	??_load_buffer+3,w
  7103     13BD  00B1               	movwf	??_load_buffer+5
  7104     13BE  0844               	movf	load_buffer@i_982,w
  7105     13BF  0730               	addwf	??_load_buffer+4,w
  7106     13C0  0084               	movwf	4
  7107     13C1  0845               	movf	load_buffer@i_982+1,w
  7108     13C2  1803               	skipnc
  7109     13C3  0A45               	incf	load_buffer@i_982+1,w
  7110     13C4  0731               	addwf	??_load_buffer+5,w
  7111     13C5  00FF               	movwf	btemp+1
  7112     13C6  120A  118A  2100  160A  118A  	fcall	stringtab
  7113     13CB  00B2               	movwf	??_load_buffer+6
  7114     13CC  3005               	movlw	5
  7115     13CD  00A0               	movwf	___bmul@multiplicand
  7116     13CE  0829               	movf	load_buffer@position,w
  7117     13CF  160A  118A  208F  160A  118A  	fcall	___bmul
  7118     13D4  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7119     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  7120     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  7121     13D7  0744               	addwf	load_buffer@i_982,w
  7122     13D8  00B3               	movwf	??_load_buffer+7
  7123     13D9  0833               	movf	??_load_buffer+7,w
  7124     13DA  0084               	movwf	4
  7125     13DB  0832               	movf	??_load_buffer+6,w
  7126     13DC  1783               	bsf	3,7	;select IRP bank3
  7127     13DD  0080               	movwf	0
  7128     13DE                     l1838:
  7129                           
  7130                           ;scherm.c: 112:             }
  7131     13DE  3001               	movlw	1
  7132     13DF  07C4               	addwf	load_buffer@i_982,f
  7133     13E0  1803               	skipnc
  7134     13E1  0AC5               	incf	load_buffer@i_982+1,f
  7135     13E2  3000               	movlw	0
  7136     13E3  07C5               	addwf	load_buffer@i_982+1,f
  7137     13E4                     l1840:
  7138     13E4  0845               	movf	load_buffer@i_982+1,w
  7139     13E5  3A80               	xorlw	128
  7140     13E6  00FF               	movwf	btemp+1
  7141     13E7  3080               	movlw	128
  7142     13E8  027F               	subwf	btemp+1,w
  7143     13E9  1D03               	skipz
  7144     13EA  2BED               	goto	u1035
  7145     13EB  3005               	movlw	5
  7146     13EC  0244               	subwf	load_buffer@i_982,w
  7147     13ED                     u1035:
  7148     13ED  1C03               	skipc
  7149     13EE  2BF0               	goto	u1031
  7150     13EF  2BF1               	goto	u1030
  7151     13F0                     u1031:
  7152     13F0  2B60               	goto	l1836
  7153     13F1                     u1030:
  7154     13F1  2FFF               	goto	l526
  7155     13F2                     l1842:
  7156     13F2  3002               	movlw	2
  7157     13F3  0626               	xorwf	load_buffer@lang,w
  7158     13F4  0427               	iorwf	load_buffer@lang+1,w
  7159     13F5  1D03               	btfss	3,2
  7160     13F6  2BF8               	goto	u1041
  7161     13F7  2BF9               	goto	u1040
  7162     13F8                     u1041:
  7163     13F8  2D4A               	goto	l1886
  7164     13F9                     u1040:
  7165     13F9                     l1844:
  7166                           
  7167                           ;scherm.c: 116:         if (scherm == SCREEN_1) {
  7168     13F9  032B               	decf	load_buffer@scherm,w
  7169     13FA  1D03               	btfss	3,2
  7170     13FB  2BFD               	goto	u1051
  7171     13FC  2BFE               	goto	u1050
  7172     13FD                     u1051:
  7173     13FD  2C54               	goto	l1858
  7174     13FE                     u1050:
  7175     13FE                     l1846:
  7176                           
  7177                           ;scherm.c: 117:             for (int i = 0; i < 5; i++) {
  7178     13FE  01B8               	clrf	load_buffer@i_983
  7179     13FF  01B9               	clrf	load_buffer@i_983+1
  7180     1400                     l1852:
  7181                           
  7182                           ;scherm.c: 118:                 scherm1_buffer[position * 5 + i] = arabic[character][i];
  7183     1400  1283               	bcf	3,5	;RP0=0, select bank0
  7184     1401  1303               	bcf	3,6	;RP1=0, select bank0
  7185     1402  0828               	movf	load_buffer@character,w
  7186     1403  00AC               	movwf	??_load_buffer
  7187     1404  01AD               	clrf	??_load_buffer+1
  7188     1405  082C               	movf	??_load_buffer,w
  7189     1406  00A0               	movwf	___wmul@multiplier
  7190     1407  082D               	movf	??_load_buffer+1,w
  7191     1408  00A1               	movwf	___wmul@multiplier+1
  7192     1409  3005               	movlw	5
  7193     140A  00A2               	movwf	___wmul@multiplicand
  7194     140B  3000               	movlw	0
  7195     140C  00A3               	movwf	___wmul@multiplicand+1
  7196     140D  160A  118A  2116  160A  118A  	fcall	___wmul
  7197     1412  3012               	movlw	low (_arabic| (0+32768))
  7198     1413  1283               	bcf	3,5	;RP0=0, select bank0
  7199     1414  1303               	bcf	3,6	;RP1=0, select bank0
  7200     1415  00AE               	movwf	??_load_buffer+2
  7201     1416  3086               	movlw	high (_arabic| (0+32768))
  7202     1417  00AF               	movwf	??_load_buffer+3
  7203     1418  0820               	movf	?___wmul,w
  7204     1419  072E               	addwf	??_load_buffer+2,w
  7205     141A  00B0               	movwf	??_load_buffer+4
  7206     141B  0821               	movf	?___wmul+1,w
  7207     141C  1803               	skipnc
  7208     141D  0A21               	incf	?___wmul+1,w
  7209     141E  072F               	addwf	??_load_buffer+3,w
  7210     141F  00B1               	movwf	??_load_buffer+5
  7211     1420  0838               	movf	load_buffer@i_983,w
  7212     1421  0730               	addwf	??_load_buffer+4,w
  7213     1422  0084               	movwf	4
  7214     1423  0839               	movf	load_buffer@i_983+1,w
  7215     1424  1803               	skipnc
  7216     1425  0A39               	incf	load_buffer@i_983+1,w
  7217     1426  0731               	addwf	??_load_buffer+5,w
  7218     1427  00FF               	movwf	btemp+1
  7219     1428  120A  118A  2100  160A  118A  	fcall	stringtab
  7220     142D  00B2               	movwf	??_load_buffer+6
  7221     142E  3005               	movlw	5
  7222     142F  00A0               	movwf	___bmul@multiplicand
  7223     1430  0829               	movf	load_buffer@position,w
  7224     1431  160A  118A  208F  160A  118A  	fcall	___bmul
  7225     1436  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7226     1437  1283               	bcf	3,5	;RP0=0, select bank0
  7227     1438  1303               	bcf	3,6	;RP1=0, select bank0
  7228     1439  0738               	addwf	load_buffer@i_983,w
  7229     143A  00B3               	movwf	??_load_buffer+7
  7230     143B  0833               	movf	??_load_buffer+7,w
  7231     143C  0084               	movwf	4
  7232     143D  0832               	movf	??_load_buffer+6,w
  7233     143E  1783               	bsf	3,7	;select IRP bank3
  7234     143F  0080               	movwf	0
  7235     1440                     l1854:
  7236                           
  7237                           ;scherm.c: 119:             }
  7238     1440  3001               	movlw	1
  7239     1441  07B8               	addwf	load_buffer@i_983,f
  7240     1442  1803               	skipnc
  7241     1443  0AB9               	incf	load_buffer@i_983+1,f
  7242     1444  3000               	movlw	0
  7243     1445  07B9               	addwf	load_buffer@i_983+1,f
  7244     1446                     l1856:
  7245     1446  0839               	movf	load_buffer@i_983+1,w
  7246     1447  3A80               	xorlw	128
  7247     1448  00FF               	movwf	btemp+1
  7248     1449  3080               	movlw	128
  7249     144A  027F               	subwf	btemp+1,w
  7250     144B  1D03               	skipz
  7251     144C  2C4F               	goto	u1065
  7252     144D  3005               	movlw	5
  7253     144E  0238               	subwf	load_buffer@i_983,w
  7254     144F                     u1065:
  7255     144F  1C03               	skipc
  7256     1450  2C52               	goto	u1061
  7257     1451  2C53               	goto	u1060
  7258     1452                     u1061:
  7259     1452  2C00               	goto	l1852
  7260     1453                     u1060:
  7261     1453  2FFF               	goto	l526
  7262     1454                     l1858:
  7263     1454  3002               	movlw	2
  7264     1455  062B               	xorwf	load_buffer@scherm,w
  7265     1456  1D03               	btfss	3,2
  7266     1457  2C59               	goto	u1071
  7267     1458  2C5A               	goto	u1070
  7268     1459                     u1071:
  7269     1459  2CB0               	goto	l1872
  7270     145A                     u1070:
  7271     145A                     l1860:
  7272                           
  7273                           ;scherm.c: 121:             for (int i = 0; i < 5; i++) {
  7274     145A  01BA               	clrf	load_buffer@i_984
  7275     145B  01BB               	clrf	load_buffer@i_984+1
  7276     145C                     l1866:
  7277                           
  7278                           ;scherm.c: 122:                 scherm2_buffer[position * 5 + i] = arabic[character][i];
  7279     145C  1283               	bcf	3,5	;RP0=0, select bank0
  7280     145D  1303               	bcf	3,6	;RP1=0, select bank0
  7281     145E  0828               	movf	load_buffer@character,w
  7282     145F  00AC               	movwf	??_load_buffer
  7283     1460  01AD               	clrf	??_load_buffer+1
  7284     1461  082C               	movf	??_load_buffer,w
  7285     1462  00A0               	movwf	___wmul@multiplier
  7286     1463  082D               	movf	??_load_buffer+1,w
  7287     1464  00A1               	movwf	___wmul@multiplier+1
  7288     1465  3005               	movlw	5
  7289     1466  00A2               	movwf	___wmul@multiplicand
  7290     1467  3000               	movlw	0
  7291     1468  00A3               	movwf	___wmul@multiplicand+1
  7292     1469  160A  118A  2116  160A  118A  	fcall	___wmul
  7293     146E  3012               	movlw	low (_arabic| (0+32768))
  7294     146F  1283               	bcf	3,5	;RP0=0, select bank0
  7295     1470  1303               	bcf	3,6	;RP1=0, select bank0
  7296     1471  00AE               	movwf	??_load_buffer+2
  7297     1472  3086               	movlw	high (_arabic| (0+32768))
  7298     1473  00AF               	movwf	??_load_buffer+3
  7299     1474  0820               	movf	?___wmul,w
  7300     1475  072E               	addwf	??_load_buffer+2,w
  7301     1476  00B0               	movwf	??_load_buffer+4
  7302     1477  0821               	movf	?___wmul+1,w
  7303     1478  1803               	skipnc
  7304     1479  0A21               	incf	?___wmul+1,w
  7305     147A  072F               	addwf	??_load_buffer+3,w
  7306     147B  00B1               	movwf	??_load_buffer+5
  7307     147C  083A               	movf	load_buffer@i_984,w
  7308     147D  0730               	addwf	??_load_buffer+4,w
  7309     147E  0084               	movwf	4
  7310     147F  083B               	movf	load_buffer@i_984+1,w
  7311     1480  1803               	skipnc
  7312     1481  0A3B               	incf	load_buffer@i_984+1,w
  7313     1482  0731               	addwf	??_load_buffer+5,w
  7314     1483  00FF               	movwf	btemp+1
  7315     1484  120A  118A  2100  160A  118A  	fcall	stringtab
  7316     1489  00B2               	movwf	??_load_buffer+6
  7317     148A  3005               	movlw	5
  7318     148B  00A0               	movwf	___bmul@multiplicand
  7319     148C  0829               	movf	load_buffer@position,w
  7320     148D  160A  118A  208F  160A  118A  	fcall	___bmul
  7321     1492  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7322     1493  1283               	bcf	3,5	;RP0=0, select bank0
  7323     1494  1303               	bcf	3,6	;RP1=0, select bank0
  7324     1495  073A               	addwf	load_buffer@i_984,w
  7325     1496  00B3               	movwf	??_load_buffer+7
  7326     1497  0833               	movf	??_load_buffer+7,w
  7327     1498  0084               	movwf	4
  7328     1499  0832               	movf	??_load_buffer+6,w
  7329     149A  1783               	bsf	3,7	;select IRP bank3
  7330     149B  0080               	movwf	0
  7331     149C                     l1868:
  7332                           
  7333                           ;scherm.c: 123:             }
  7334     149C  3001               	movlw	1
  7335     149D  07BA               	addwf	load_buffer@i_984,f
  7336     149E  1803               	skipnc
  7337     149F  0ABB               	incf	load_buffer@i_984+1,f
  7338     14A0  3000               	movlw	0
  7339     14A1  07BB               	addwf	load_buffer@i_984+1,f
  7340     14A2                     l1870:
  7341     14A2  083B               	movf	load_buffer@i_984+1,w
  7342     14A3  3A80               	xorlw	128
  7343     14A4  00FF               	movwf	btemp+1
  7344     14A5  3080               	movlw	128
  7345     14A6  027F               	subwf	btemp+1,w
  7346     14A7  1D03               	skipz
  7347     14A8  2CAB               	goto	u1085
  7348     14A9  3005               	movlw	5
  7349     14AA  023A               	subwf	load_buffer@i_984,w
  7350     14AB                     u1085:
  7351     14AB  1C03               	skipc
  7352     14AC  2CAE               	goto	u1081
  7353     14AD  2CAF               	goto	u1080
  7354     14AE                     u1081:
  7355     14AE  2C5C               	goto	l1866
  7356     14AF                     u1080:
  7357     14AF  2FFF               	goto	l526
  7358     14B0                     l1872:
  7359     14B0  3003               	movlw	3
  7360     14B1  062B               	xorwf	load_buffer@scherm,w
  7361     14B2  1D03               	btfss	3,2
  7362     14B3  2CB5               	goto	u1091
  7363     14B4  2CB6               	goto	u1090
  7364     14B5                     u1091:
  7365     14B5  2AFB               	goto	l478
  7366     14B6                     u1090:
  7367     14B6                     l1874:
  7368                           
  7369                           ;scherm.c: 125:             for (int i = 0; i < 5; i++) {
  7370     14B6  01C6               	clrf	load_buffer@i_985
  7371     14B7  01C7               	clrf	load_buffer@i_985+1
  7372     14B8                     l1880:
  7373                           
  7374                           ;scherm.c: 126:                 scherm1_buffer[position * 5 + i] = arabic[character][i];
  7375     14B8  1283               	bcf	3,5	;RP0=0, select bank0
  7376     14B9  1303               	bcf	3,6	;RP1=0, select bank0
  7377     14BA  0828               	movf	load_buffer@character,w
  7378     14BB  00AC               	movwf	??_load_buffer
  7379     14BC  01AD               	clrf	??_load_buffer+1
  7380     14BD  082C               	movf	??_load_buffer,w
  7381     14BE  00A0               	movwf	___wmul@multiplier
  7382     14BF  082D               	movf	??_load_buffer+1,w
  7383     14C0  00A1               	movwf	___wmul@multiplier+1
  7384     14C1  3005               	movlw	5
  7385     14C2  00A2               	movwf	___wmul@multiplicand
  7386     14C3  3000               	movlw	0
  7387     14C4  00A3               	movwf	___wmul@multiplicand+1
  7388     14C5  160A  118A  2116  160A  118A  	fcall	___wmul
  7389     14CA  3012               	movlw	low (_arabic| (0+32768))
  7390     14CB  1283               	bcf	3,5	;RP0=0, select bank0
  7391     14CC  1303               	bcf	3,6	;RP1=0, select bank0
  7392     14CD  00AE               	movwf	??_load_buffer+2
  7393     14CE  3086               	movlw	high (_arabic| (0+32768))
  7394     14CF  00AF               	movwf	??_load_buffer+3
  7395     14D0  0820               	movf	?___wmul,w
  7396     14D1  072E               	addwf	??_load_buffer+2,w
  7397     14D2  00B0               	movwf	??_load_buffer+4
  7398     14D3  0821               	movf	?___wmul+1,w
  7399     14D4  1803               	skipnc
  7400     14D5  0A21               	incf	?___wmul+1,w
  7401     14D6  072F               	addwf	??_load_buffer+3,w
  7402     14D7  00B1               	movwf	??_load_buffer+5
  7403     14D8  0846               	movf	load_buffer@i_985,w
  7404     14D9  0730               	addwf	??_load_buffer+4,w
  7405     14DA  0084               	movwf	4
  7406     14DB  0847               	movf	load_buffer@i_985+1,w
  7407     14DC  1803               	skipnc
  7408     14DD  0A47               	incf	load_buffer@i_985+1,w
  7409     14DE  0731               	addwf	??_load_buffer+5,w
  7410     14DF  00FF               	movwf	btemp+1
  7411     14E0  120A  118A  2100  160A  118A  	fcall	stringtab
  7412     14E5  00B2               	movwf	??_load_buffer+6
  7413     14E6  3005               	movlw	5
  7414     14E7  00A0               	movwf	___bmul@multiplicand
  7415     14E8  0829               	movf	load_buffer@position,w
  7416     14E9  160A  118A  208F  160A  118A  	fcall	___bmul
  7417     14EE  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7418     14EF  1283               	bcf	3,5	;RP0=0, select bank0
  7419     14F0  1303               	bcf	3,6	;RP1=0, select bank0
  7420     14F1  0746               	addwf	load_buffer@i_985,w
  7421     14F2  00B3               	movwf	??_load_buffer+7
  7422     14F3  0833               	movf	??_load_buffer+7,w
  7423     14F4  0084               	movwf	4
  7424     14F5  0832               	movf	??_load_buffer+6,w
  7425     14F6  1783               	bsf	3,7	;select IRP bank3
  7426     14F7  0080               	movwf	0
  7427                           
  7428                           ;scherm.c: 127:                 scherm2_buffer[position * 5 + i] = arabic[character][i];
  7429     14F8  0828               	movf	load_buffer@character,w
  7430     14F9  00AC               	movwf	??_load_buffer
  7431     14FA  01AD               	clrf	??_load_buffer+1
  7432     14FB  082C               	movf	??_load_buffer,w
  7433     14FC  00A0               	movwf	___wmul@multiplier
  7434     14FD  082D               	movf	??_load_buffer+1,w
  7435     14FE  00A1               	movwf	___wmul@multiplier+1
  7436     14FF  3005               	movlw	5
  7437     1500  00A2               	movwf	___wmul@multiplicand
  7438     1501  3000               	movlw	0
  7439     1502  00A3               	movwf	___wmul@multiplicand+1
  7440     1503  160A  118A  2116  160A  118A  	fcall	___wmul
  7441     1508  3012               	movlw	low (_arabic| (0+32768))
  7442     1509  1283               	bcf	3,5	;RP0=0, select bank0
  7443     150A  1303               	bcf	3,6	;RP1=0, select bank0
  7444     150B  00AE               	movwf	??_load_buffer+2
  7445     150C  3086               	movlw	high (_arabic| (0+32768))
  7446     150D  00AF               	movwf	??_load_buffer+3
  7447     150E  0820               	movf	?___wmul,w
  7448     150F  072E               	addwf	??_load_buffer+2,w
  7449     1510  00B0               	movwf	??_load_buffer+4
  7450     1511  0821               	movf	?___wmul+1,w
  7451     1512  1803               	skipnc
  7452     1513  0A21               	incf	?___wmul+1,w
  7453     1514  072F               	addwf	??_load_buffer+3,w
  7454     1515  00B1               	movwf	??_load_buffer+5
  7455     1516  0846               	movf	load_buffer@i_985,w
  7456     1517  0730               	addwf	??_load_buffer+4,w
  7457     1518  0084               	movwf	4
  7458     1519  0847               	movf	load_buffer@i_985+1,w
  7459     151A  1803               	skipnc
  7460     151B  0A47               	incf	load_buffer@i_985+1,w
  7461     151C  0731               	addwf	??_load_buffer+5,w
  7462     151D  00FF               	movwf	btemp+1
  7463     151E  120A  118A  2100  160A  118A  	fcall	stringtab
  7464     1523  00B2               	movwf	??_load_buffer+6
  7465     1524  3005               	movlw	5
  7466     1525  00A0               	movwf	___bmul@multiplicand
  7467     1526  0829               	movf	load_buffer@position,w
  7468     1527  160A  118A  208F  160A  118A  	fcall	___bmul
  7469     152C  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7470     152D  1283               	bcf	3,5	;RP0=0, select bank0
  7471     152E  1303               	bcf	3,6	;RP1=0, select bank0
  7472     152F  0746               	addwf	load_buffer@i_985,w
  7473     1530  00B3               	movwf	??_load_buffer+7
  7474     1531  0833               	movf	??_load_buffer+7,w
  7475     1532  0084               	movwf	4
  7476     1533  0832               	movf	??_load_buffer+6,w
  7477     1534  1783               	bsf	3,7	;select IRP bank3
  7478     1535  0080               	movwf	0
  7479     1536                     l1882:
  7480                           
  7481                           ;scherm.c: 128:             }
  7482     1536  3001               	movlw	1
  7483     1537  07C6               	addwf	load_buffer@i_985,f
  7484     1538  1803               	skipnc
  7485     1539  0AC7               	incf	load_buffer@i_985+1,f
  7486     153A  3000               	movlw	0
  7487     153B  07C7               	addwf	load_buffer@i_985+1,f
  7488     153C                     l1884:
  7489     153C  0847               	movf	load_buffer@i_985+1,w
  7490     153D  3A80               	xorlw	128
  7491     153E  00FF               	movwf	btemp+1
  7492     153F  3080               	movlw	128
  7493     1540  027F               	subwf	btemp+1,w
  7494     1541  1D03               	skipz
  7495     1542  2D45               	goto	u1105
  7496     1543  3005               	movlw	5
  7497     1544  0246               	subwf	load_buffer@i_985,w
  7498     1545                     u1105:
  7499     1545  1C03               	skipc
  7500     1546  2D48               	goto	u1101
  7501     1547  2D49               	goto	u1100
  7502     1548                     u1101:
  7503     1548  2CB8               	goto	l1880
  7504     1549                     u1100:
  7505     1549  2FFF               	goto	l526
  7506     154A                     l1886:
  7507     154A  3004               	movlw	4
  7508     154B  0626               	xorwf	load_buffer@lang,w
  7509     154C  0427               	iorwf	load_buffer@lang+1,w
  7510     154D  1D03               	btfss	3,2
  7511     154E  2D50               	goto	u1111
  7512     154F  2D51               	goto	u1110
  7513     1550                     u1111:
  7514     1550  2EA4               	goto	l1930
  7515     1551                     u1110:
  7516     1551                     l1888:
  7517                           
  7518                           ;scherm.c: 132:         if (scherm == SCREEN_1) {
  7519     1551  032B               	decf	load_buffer@scherm,w
  7520     1552  1D03               	btfss	3,2
  7521     1553  2D55               	goto	u1121
  7522     1554  2D56               	goto	u1120
  7523     1555                     u1121:
  7524     1555  2DAC               	goto	l1902
  7525     1556                     u1120:
  7526     1556                     l1890:
  7527                           
  7528                           ;scherm.c: 133:             for (int i = 0; i < 5; i++) {
  7529     1556  01BC               	clrf	load_buffer@i_986
  7530     1557  01BD               	clrf	load_buffer@i_986+1
  7531     1558                     l1896:
  7532                           
  7533                           ;scherm.c: 134:                 scherm1_buffer[position * 5 + i] = hebrew[character][i];
  7534     1558  1283               	bcf	3,5	;RP0=0, select bank0
  7535     1559  1303               	bcf	3,6	;RP1=0, select bank0
  7536     155A  0828               	movf	load_buffer@character,w
  7537     155B  00AC               	movwf	??_load_buffer
  7538     155C  01AD               	clrf	??_load_buffer+1
  7539     155D  082C               	movf	??_load_buffer,w
  7540     155E  00A0               	movwf	___wmul@multiplier
  7541     155F  082D               	movf	??_load_buffer+1,w
  7542     1560  00A1               	movwf	___wmul@multiplier+1
  7543     1561  3005               	movlw	5
  7544     1562  00A2               	movwf	___wmul@multiplicand
  7545     1563  3000               	movlw	0
  7546     1564  00A3               	movwf	___wmul@multiplicand+1
  7547     1565  160A  118A  2116  160A  118A  	fcall	___wmul
  7548     156A  3092               	movlw	low (_hebrew| (0+32768))
  7549     156B  1283               	bcf	3,5	;RP0=0, select bank0
  7550     156C  1303               	bcf	3,6	;RP1=0, select bank0
  7551     156D  00AE               	movwf	??_load_buffer+2
  7552     156E  3083               	movlw	high (_hebrew| (0+32768))
  7553     156F  00AF               	movwf	??_load_buffer+3
  7554     1570  0820               	movf	?___wmul,w
  7555     1571  072E               	addwf	??_load_buffer+2,w
  7556     1572  00B0               	movwf	??_load_buffer+4
  7557     1573  0821               	movf	?___wmul+1,w
  7558     1574  1803               	skipnc
  7559     1575  0A21               	incf	?___wmul+1,w
  7560     1576  072F               	addwf	??_load_buffer+3,w
  7561     1577  00B1               	movwf	??_load_buffer+5
  7562     1578  083C               	movf	load_buffer@i_986,w
  7563     1579  0730               	addwf	??_load_buffer+4,w
  7564     157A  0084               	movwf	4
  7565     157B  083D               	movf	load_buffer@i_986+1,w
  7566     157C  1803               	skipnc
  7567     157D  0A3D               	incf	load_buffer@i_986+1,w
  7568     157E  0731               	addwf	??_load_buffer+5,w
  7569     157F  00FF               	movwf	btemp+1
  7570     1580  120A  118A  2100  160A  118A  	fcall	stringtab
  7571     1585  00B2               	movwf	??_load_buffer+6
  7572     1586  3005               	movlw	5
  7573     1587  00A0               	movwf	___bmul@multiplicand
  7574     1588  0829               	movf	load_buffer@position,w
  7575     1589  160A  118A  208F  160A  118A  	fcall	___bmul
  7576     158E  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7577     158F  1283               	bcf	3,5	;RP0=0, select bank0
  7578     1590  1303               	bcf	3,6	;RP1=0, select bank0
  7579     1591  073C               	addwf	load_buffer@i_986,w
  7580     1592  00B3               	movwf	??_load_buffer+7
  7581     1593  0833               	movf	??_load_buffer+7,w
  7582     1594  0084               	movwf	4
  7583     1595  0832               	movf	??_load_buffer+6,w
  7584     1596  1783               	bsf	3,7	;select IRP bank3
  7585     1597  0080               	movwf	0
  7586     1598                     l1898:
  7587                           
  7588                           ;scherm.c: 135:             }
  7589     1598  3001               	movlw	1
  7590     1599  07BC               	addwf	load_buffer@i_986,f
  7591     159A  1803               	skipnc
  7592     159B  0ABD               	incf	load_buffer@i_986+1,f
  7593     159C  3000               	movlw	0
  7594     159D  07BD               	addwf	load_buffer@i_986+1,f
  7595     159E                     l1900:
  7596     159E  083D               	movf	load_buffer@i_986+1,w
  7597     159F  3A80               	xorlw	128
  7598     15A0  00FF               	movwf	btemp+1
  7599     15A1  3080               	movlw	128
  7600     15A2  027F               	subwf	btemp+1,w
  7601     15A3  1D03               	skipz
  7602     15A4  2DA7               	goto	u1135
  7603     15A5  3005               	movlw	5
  7604     15A6  023C               	subwf	load_buffer@i_986,w
  7605     15A7                     u1135:
  7606     15A7  1C03               	skipc
  7607     15A8  2DAA               	goto	u1131
  7608     15A9  2DAB               	goto	u1130
  7609     15AA                     u1131:
  7610     15AA  2D58               	goto	l1896
  7611     15AB                     u1130:
  7612     15AB  2FFF               	goto	l526
  7613     15AC                     l1902:
  7614     15AC  3002               	movlw	2
  7615     15AD  062B               	xorwf	load_buffer@scherm,w
  7616     15AE  1D03               	btfss	3,2
  7617     15AF  2DB1               	goto	u1141
  7618     15B0  2DB2               	goto	u1140
  7619     15B1                     u1141:
  7620     15B1  2E09               	goto	l1916
  7621     15B2                     u1140:
  7622     15B2                     l1904:
  7623                           
  7624                           ;scherm.c: 137:             for (int i = 0; i < 5; i++) {
  7625     15B2  01BE               	clrf	load_buffer@i_987
  7626     15B3  01BF               	clrf	load_buffer@i_987+1
  7627     15B4                     l1906:
  7628     15B4  083F               	movf	load_buffer@i_987+1,w
  7629     15B5  3A80               	xorlw	128
  7630     15B6  00FF               	movwf	btemp+1
  7631     15B7  3080               	movlw	128
  7632     15B8  027F               	subwf	btemp+1,w
  7633     15B9  1D03               	skipz
  7634     15BA  2DBD               	goto	u1155
  7635     15BB  3005               	movlw	5
  7636     15BC  023E               	subwf	load_buffer@i_987,w
  7637     15BD                     u1155:
  7638     15BD  1C03               	skipc
  7639     15BE  2DC0               	goto	u1151
  7640     15BF  2DC1               	goto	u1150
  7641     15C0                     u1151:
  7642     15C0  2DC2               	goto	l1910
  7643     15C1                     u1150:
  7644     15C1  2FFF               	goto	l526
  7645     15C2                     l1910:
  7646                           
  7647                           ;scherm.c: 138:                 scherm2_buffer[position * 5 + i] = hebrew[character][i];
  7648     15C2  1283               	bcf	3,5	;RP0=0, select bank0
  7649     15C3  1303               	bcf	3,6	;RP1=0, select bank0
  7650     15C4  0828               	movf	load_buffer@character,w
  7651     15C5  00AC               	movwf	??_load_buffer
  7652     15C6  01AD               	clrf	??_load_buffer+1
  7653     15C7  082C               	movf	??_load_buffer,w
  7654     15C8  00A0               	movwf	___wmul@multiplier
  7655     15C9  082D               	movf	??_load_buffer+1,w
  7656     15CA  00A1               	movwf	___wmul@multiplier+1
  7657     15CB  3005               	movlw	5
  7658     15CC  00A2               	movwf	___wmul@multiplicand
  7659     15CD  3000               	movlw	0
  7660     15CE  00A3               	movwf	___wmul@multiplicand+1
  7661     15CF  160A  118A  2116  160A  118A  	fcall	___wmul
  7662     15D4  3092               	movlw	low (_hebrew| (0+32768))
  7663     15D5  1283               	bcf	3,5	;RP0=0, select bank0
  7664     15D6  1303               	bcf	3,6	;RP1=0, select bank0
  7665     15D7  00AE               	movwf	??_load_buffer+2
  7666     15D8  3083               	movlw	high (_hebrew| (0+32768))
  7667     15D9  00AF               	movwf	??_load_buffer+3
  7668     15DA  0820               	movf	?___wmul,w
  7669     15DB  072E               	addwf	??_load_buffer+2,w
  7670     15DC  00B0               	movwf	??_load_buffer+4
  7671     15DD  0821               	movf	?___wmul+1,w
  7672     15DE  1803               	skipnc
  7673     15DF  0A21               	incf	?___wmul+1,w
  7674     15E0  072F               	addwf	??_load_buffer+3,w
  7675     15E1  00B1               	movwf	??_load_buffer+5
  7676     15E2  083E               	movf	load_buffer@i_987,w
  7677     15E3  0730               	addwf	??_load_buffer+4,w
  7678     15E4  0084               	movwf	4
  7679     15E5  083F               	movf	load_buffer@i_987+1,w
  7680     15E6  1803               	skipnc
  7681     15E7  0A3F               	incf	load_buffer@i_987+1,w
  7682     15E8  0731               	addwf	??_load_buffer+5,w
  7683     15E9  00FF               	movwf	btemp+1
  7684     15EA  120A  118A  2100  160A  118A  	fcall	stringtab
  7685     15EF  00B2               	movwf	??_load_buffer+6
  7686     15F0  3005               	movlw	5
  7687     15F1  00A0               	movwf	___bmul@multiplicand
  7688     15F2  0829               	movf	load_buffer@position,w
  7689     15F3  160A  118A  208F  160A  118A  	fcall	___bmul
  7690     15F8  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7691     15F9  1283               	bcf	3,5	;RP0=0, select bank0
  7692     15FA  1303               	bcf	3,6	;RP1=0, select bank0
  7693     15FB  073E               	addwf	load_buffer@i_987,w
  7694     15FC  00B3               	movwf	??_load_buffer+7
  7695     15FD  0833               	movf	??_load_buffer+7,w
  7696     15FE  0084               	movwf	4
  7697     15FF  0832               	movf	??_load_buffer+6,w
  7698     1600  1783               	bsf	3,7	;select IRP bank3
  7699     1601  0080               	movwf	0
  7700     1602                     l1912:
  7701                           
  7702                           ;scherm.c: 139:             }
  7703     1602  3001               	movlw	1
  7704     1603  07BE               	addwf	load_buffer@i_987,f
  7705     1604  1803               	skipnc
  7706     1605  0ABF               	incf	load_buffer@i_987+1,f
  7707     1606  3000               	movlw	0
  7708     1607  07BF               	addwf	load_buffer@i_987+1,f
  7709     1608  2DB4               	goto	l1906
  7710     1609                     l1916:
  7711     1609  3003               	movlw	3
  7712     160A  062B               	xorwf	load_buffer@scherm,w
  7713     160B  1D03               	btfss	3,2
  7714     160C  2E0E               	goto	u1161
  7715     160D  2E0F               	goto	u1160
  7716     160E                     u1161:
  7717     160E  2AFB               	goto	l478
  7718     160F                     u1160:
  7719     160F                     l1918:
  7720                           
  7721                           ;scherm.c: 141:             for (int i = 0; i < 5; i++) {
  7722     160F  01C8               	clrf	load_buffer@i_988
  7723     1610  01C9               	clrf	load_buffer@i_988+1
  7724     1611                     l1920:
  7725     1611  0849               	movf	load_buffer@i_988+1,w
  7726     1612  3A80               	xorlw	128
  7727     1613  00FF               	movwf	btemp+1
  7728     1614  3080               	movlw	128
  7729     1615  027F               	subwf	btemp+1,w
  7730     1616  1D03               	skipz
  7731     1617  2E1A               	goto	u1175
  7732     1618  3005               	movlw	5
  7733     1619  0248               	subwf	load_buffer@i_988,w
  7734     161A                     u1175:
  7735     161A  1C03               	skipc
  7736     161B  2E1D               	goto	u1171
  7737     161C  2E1E               	goto	u1170
  7738     161D                     u1171:
  7739     161D  2E1F               	goto	l1924
  7740     161E                     u1170:
  7741     161E  2FFF               	goto	l526
  7742     161F                     l1924:
  7743                           
  7744                           ;scherm.c: 142:                 scherm1_buffer[position * 5 + i] = hebrew[character][i];
  7745     161F  1283               	bcf	3,5	;RP0=0, select bank0
  7746     1620  1303               	bcf	3,6	;RP1=0, select bank0
  7747     1621  0828               	movf	load_buffer@character,w
  7748     1622  00AC               	movwf	??_load_buffer
  7749     1623  01AD               	clrf	??_load_buffer+1
  7750     1624  082C               	movf	??_load_buffer,w
  7751     1625  00A0               	movwf	___wmul@multiplier
  7752     1626  082D               	movf	??_load_buffer+1,w
  7753     1627  00A1               	movwf	___wmul@multiplier+1
  7754     1628  3005               	movlw	5
  7755     1629  00A2               	movwf	___wmul@multiplicand
  7756     162A  3000               	movlw	0
  7757     162B  00A3               	movwf	___wmul@multiplicand+1
  7758     162C  160A  118A  2116  160A  118A  	fcall	___wmul
  7759     1631  3092               	movlw	low (_hebrew| (0+32768))
  7760     1632  1283               	bcf	3,5	;RP0=0, select bank0
  7761     1633  1303               	bcf	3,6	;RP1=0, select bank0
  7762     1634  00AE               	movwf	??_load_buffer+2
  7763     1635  3083               	movlw	high (_hebrew| (0+32768))
  7764     1636  00AF               	movwf	??_load_buffer+3
  7765     1637  0820               	movf	?___wmul,w
  7766     1638  072E               	addwf	??_load_buffer+2,w
  7767     1639  00B0               	movwf	??_load_buffer+4
  7768     163A  0821               	movf	?___wmul+1,w
  7769     163B  1803               	skipnc
  7770     163C  0A21               	incf	?___wmul+1,w
  7771     163D  072F               	addwf	??_load_buffer+3,w
  7772     163E  00B1               	movwf	??_load_buffer+5
  7773     163F  0848               	movf	load_buffer@i_988,w
  7774     1640  0730               	addwf	??_load_buffer+4,w
  7775     1641  0084               	movwf	4
  7776     1642  0849               	movf	load_buffer@i_988+1,w
  7777     1643  1803               	skipnc
  7778     1644  0A49               	incf	load_buffer@i_988+1,w
  7779     1645  0731               	addwf	??_load_buffer+5,w
  7780     1646  00FF               	movwf	btemp+1
  7781     1647  120A  118A  2100  160A  118A  	fcall	stringtab
  7782     164C  00B2               	movwf	??_load_buffer+6
  7783     164D  3005               	movlw	5
  7784     164E  00A0               	movwf	___bmul@multiplicand
  7785     164F  0829               	movf	load_buffer@position,w
  7786     1650  160A  118A  208F  160A  118A  	fcall	___bmul
  7787     1655  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7788     1656  1283               	bcf	3,5	;RP0=0, select bank0
  7789     1657  1303               	bcf	3,6	;RP1=0, select bank0
  7790     1658  0748               	addwf	load_buffer@i_988,w
  7791     1659  00B3               	movwf	??_load_buffer+7
  7792     165A  0833               	movf	??_load_buffer+7,w
  7793     165B  0084               	movwf	4
  7794     165C  0832               	movf	??_load_buffer+6,w
  7795     165D  1783               	bsf	3,7	;select IRP bank3
  7796     165E  0080               	movwf	0
  7797                           
  7798                           ;scherm.c: 143:                 scherm2_buffer[position * 5 + i] = hebrew[character][i];
  7799     165F  0828               	movf	load_buffer@character,w
  7800     1660  00AC               	movwf	??_load_buffer
  7801     1661  01AD               	clrf	??_load_buffer+1
  7802     1662  082C               	movf	??_load_buffer,w
  7803     1663  00A0               	movwf	___wmul@multiplier
  7804     1664  082D               	movf	??_load_buffer+1,w
  7805     1665  00A1               	movwf	___wmul@multiplier+1
  7806     1666  3005               	movlw	5
  7807     1667  00A2               	movwf	___wmul@multiplicand
  7808     1668  3000               	movlw	0
  7809     1669  00A3               	movwf	___wmul@multiplicand+1
  7810     166A  160A  118A  2116  160A  118A  	fcall	___wmul
  7811     166F  3092               	movlw	low (_hebrew| (0+32768))
  7812     1670  1283               	bcf	3,5	;RP0=0, select bank0
  7813     1671  1303               	bcf	3,6	;RP1=0, select bank0
  7814     1672  00AE               	movwf	??_load_buffer+2
  7815     1673  3083               	movlw	high (_hebrew| (0+32768))
  7816     1674  00AF               	movwf	??_load_buffer+3
  7817     1675  0820               	movf	?___wmul,w
  7818     1676  072E               	addwf	??_load_buffer+2,w
  7819     1677  00B0               	movwf	??_load_buffer+4
  7820     1678  0821               	movf	?___wmul+1,w
  7821     1679  1803               	skipnc
  7822     167A  0A21               	incf	?___wmul+1,w
  7823     167B  072F               	addwf	??_load_buffer+3,w
  7824     167C  00B1               	movwf	??_load_buffer+5
  7825     167D  0848               	movf	load_buffer@i_988,w
  7826     167E  0730               	addwf	??_load_buffer+4,w
  7827     167F  0084               	movwf	4
  7828     1680  0849               	movf	load_buffer@i_988+1,w
  7829     1681  1803               	skipnc
  7830     1682  0A49               	incf	load_buffer@i_988+1,w
  7831     1683  0731               	addwf	??_load_buffer+5,w
  7832     1684  00FF               	movwf	btemp+1
  7833     1685  120A  118A  2100  160A  118A  	fcall	stringtab
  7834     168A  00B2               	movwf	??_load_buffer+6
  7835     168B  3005               	movlw	5
  7836     168C  00A0               	movwf	___bmul@multiplicand
  7837     168D  0829               	movf	load_buffer@position,w
  7838     168E  160A  118A  208F  160A  118A  	fcall	___bmul
  7839     1693  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7840     1694  1283               	bcf	3,5	;RP0=0, select bank0
  7841     1695  1303               	bcf	3,6	;RP1=0, select bank0
  7842     1696  0748               	addwf	load_buffer@i_988,w
  7843     1697  00B3               	movwf	??_load_buffer+7
  7844     1698  0833               	movf	??_load_buffer+7,w
  7845     1699  0084               	movwf	4
  7846     169A  0832               	movf	??_load_buffer+6,w
  7847     169B  1783               	bsf	3,7	;select IRP bank3
  7848     169C  0080               	movwf	0
  7849     169D                     l1926:
  7850                           
  7851                           ;scherm.c: 144:             }
  7852     169D  3001               	movlw	1
  7853     169E  07C8               	addwf	load_buffer@i_988,f
  7854     169F  1803               	skipnc
  7855     16A0  0AC9               	incf	load_buffer@i_988+1,f
  7856     16A1  3000               	movlw	0
  7857     16A2  07C9               	addwf	load_buffer@i_988+1,f
  7858     16A3  2E11               	goto	l1920
  7859     16A4                     l1930:
  7860     16A4  3006               	movlw	6
  7861     16A5  0626               	xorwf	load_buffer@lang,w
  7862     16A6  0427               	iorwf	load_buffer@lang+1,w
  7863     16A7  1D03               	btfss	3,2
  7864     16A8  2EAA               	goto	u1181
  7865     16A9  2EAB               	goto	u1180
  7866     16AA                     u1181:
  7867     16AA  2FFF               	goto	l526
  7868     16AB                     u1180:
  7869     16AB                     l1932:
  7870                           
  7871                           ;scherm.c: 148:         if (scherm == SCREEN_1) {
  7872     16AB  032B               	decf	load_buffer@scherm,w
  7873     16AC  1D03               	btfss	3,2
  7874     16AD  2EAF               	goto	u1191
  7875     16AE  2EB0               	goto	u1190
  7876     16AF                     u1191:
  7877     16AF  2F07               	goto	l1946
  7878     16B0                     u1190:
  7879     16B0                     l1934:
  7880                           
  7881                           ;scherm.c: 149:             for (int i = 0; i < 5; i++) {
  7882     16B0  01C0               	clrf	load_buffer@i_989
  7883     16B1  01C1               	clrf	load_buffer@i_989+1
  7884     16B2                     l1936:
  7885     16B2  0841               	movf	load_buffer@i_989+1,w
  7886     16B3  3A80               	xorlw	128
  7887     16B4  00FF               	movwf	btemp+1
  7888     16B5  3080               	movlw	128
  7889     16B6  027F               	subwf	btemp+1,w
  7890     16B7  1D03               	skipz
  7891     16B8  2EBB               	goto	u1205
  7892     16B9  3005               	movlw	5
  7893     16BA  0240               	subwf	load_buffer@i_989,w
  7894     16BB                     u1205:
  7895     16BB  1C03               	skipc
  7896     16BC  2EBE               	goto	u1201
  7897     16BD  2EBF               	goto	u1200
  7898     16BE                     u1201:
  7899     16BE  2EC0               	goto	l1940
  7900     16BF                     u1200:
  7901     16BF  2FFF               	goto	l526
  7902     16C0                     l1940:
  7903                           
  7904                           ;scherm.c: 150:                 scherm1_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  7905     16C0  1283               	bcf	3,5	;RP0=0, select bank0
  7906     16C1  1303               	bcf	3,6	;RP1=0, select bank0
  7907     16C2  0828               	movf	load_buffer@character,w
  7908     16C3  00AC               	movwf	??_load_buffer
  7909     16C4  01AD               	clrf	??_load_buffer+1
  7910     16C5  082C               	movf	??_load_buffer,w
  7911     16C6  00A0               	movwf	___wmul@multiplier
  7912     16C7  082D               	movf	??_load_buffer+1,w
  7913     16C8  00A1               	movwf	___wmul@multiplier+1
  7914     16C9  3005               	movlw	5
  7915     16CA  00A2               	movwf	___wmul@multiplicand
  7916     16CB  3000               	movlw	0
  7917     16CC  00A3               	movwf	___wmul@multiplicand+1
  7918     16CD  160A  118A  2116  160A  118A  	fcall	___wmul
  7919     16D2  3012               	movlw	low (_aurebech| (0+32768))
  7920     16D3  1283               	bcf	3,5	;RP0=0, select bank0
  7921     16D4  1303               	bcf	3,6	;RP1=0, select bank0
  7922     16D5  00AE               	movwf	??_load_buffer+2
  7923     16D6  3081               	movlw	high (_aurebech| (0+32768))
  7924     16D7  00AF               	movwf	??_load_buffer+3
  7925     16D8  0820               	movf	?___wmul,w
  7926     16D9  072E               	addwf	??_load_buffer+2,w
  7927     16DA  00B0               	movwf	??_load_buffer+4
  7928     16DB  0821               	movf	?___wmul+1,w
  7929     16DC  1803               	skipnc
  7930     16DD  0A21               	incf	?___wmul+1,w
  7931     16DE  072F               	addwf	??_load_buffer+3,w
  7932     16DF  00B1               	movwf	??_load_buffer+5
  7933     16E0  0840               	movf	load_buffer@i_989,w
  7934     16E1  0730               	addwf	??_load_buffer+4,w
  7935     16E2  0084               	movwf	4
  7936     16E3  0841               	movf	load_buffer@i_989+1,w
  7937     16E4  1803               	skipnc
  7938     16E5  0A41               	incf	load_buffer@i_989+1,w
  7939     16E6  0731               	addwf	??_load_buffer+5,w
  7940     16E7  00FF               	movwf	btemp+1
  7941     16E8  120A  118A  2100  160A  118A  	fcall	stringtab
  7942     16ED  00B2               	movwf	??_load_buffer+6
  7943     16EE  3005               	movlw	5
  7944     16EF  00A0               	movwf	___bmul@multiplicand
  7945     16F0  0829               	movf	load_buffer@position,w
  7946     16F1  160A  118A  208F  160A  118A  	fcall	___bmul
  7947     16F6  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7948     16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7949     16F8  1303               	bcf	3,6	;RP1=0, select bank0
  7950     16F9  0740               	addwf	load_buffer@i_989,w
  7951     16FA  00B3               	movwf	??_load_buffer+7
  7952     16FB  0833               	movf	??_load_buffer+7,w
  7953     16FC  0084               	movwf	4
  7954     16FD  0832               	movf	??_load_buffer+6,w
  7955     16FE  1783               	bsf	3,7	;select IRP bank3
  7956     16FF  0080               	movwf	0
  7957     1700                     l1942:
  7958                           
  7959                           ;scherm.c: 151:             }
  7960     1700  3001               	movlw	1
  7961     1701  07C0               	addwf	load_buffer@i_989,f
  7962     1702  1803               	skipnc
  7963     1703  0AC1               	incf	load_buffer@i_989+1,f
  7964     1704  3000               	movlw	0
  7965     1705  07C1               	addwf	load_buffer@i_989+1,f
  7966     1706  2EB2               	goto	l1936
  7967     1707                     l1946:
  7968     1707  3002               	movlw	2
  7969     1708  062B               	xorwf	load_buffer@scherm,w
  7970     1709  1D03               	btfss	3,2
  7971     170A  2F0C               	goto	u1211
  7972     170B  2F0D               	goto	u1210
  7973     170C                     u1211:
  7974     170C  2F64               	goto	l1960
  7975     170D                     u1210:
  7976     170D                     l1948:
  7977                           
  7978                           ;scherm.c: 153:             for (int i = 0; i < 5; i++) {
  7979     170D  01C2               	clrf	load_buffer@i_990
  7980     170E  01C3               	clrf	load_buffer@i_990+1
  7981     170F                     l1950:
  7982     170F  0843               	movf	load_buffer@i_990+1,w
  7983     1710  3A80               	xorlw	128
  7984     1711  00FF               	movwf	btemp+1
  7985     1712  3080               	movlw	128
  7986     1713  027F               	subwf	btemp+1,w
  7987     1714  1D03               	skipz
  7988     1715  2F18               	goto	u1225
  7989     1716  3005               	movlw	5
  7990     1717  0242               	subwf	load_buffer@i_990,w
  7991     1718                     u1225:
  7992     1718  1C03               	skipc
  7993     1719  2F1B               	goto	u1221
  7994     171A  2F1C               	goto	u1220
  7995     171B                     u1221:
  7996     171B  2F1D               	goto	l1954
  7997     171C                     u1220:
  7998     171C  2FFF               	goto	l526
  7999     171D                     l1954:
  8000                           
  8001                           ;scherm.c: 154:                 scherm2_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8002     171D  1283               	bcf	3,5	;RP0=0, select bank0
  8003     171E  1303               	bcf	3,6	;RP1=0, select bank0
  8004     171F  0828               	movf	load_buffer@character,w
  8005     1720  00AC               	movwf	??_load_buffer
  8006     1721  01AD               	clrf	??_load_buffer+1
  8007     1722  082C               	movf	??_load_buffer,w
  8008     1723  00A0               	movwf	___wmul@multiplier
  8009     1724  082D               	movf	??_load_buffer+1,w
  8010     1725  00A1               	movwf	___wmul@multiplier+1
  8011     1726  3005               	movlw	5
  8012     1727  00A2               	movwf	___wmul@multiplicand
  8013     1728  3000               	movlw	0
  8014     1729  00A3               	movwf	___wmul@multiplicand+1
  8015     172A  160A  118A  2116  160A  118A  	fcall	___wmul
  8016     172F  3012               	movlw	low (_aurebech| (0+32768))
  8017     1730  1283               	bcf	3,5	;RP0=0, select bank0
  8018     1731  1303               	bcf	3,6	;RP1=0, select bank0
  8019     1732  00AE               	movwf	??_load_buffer+2
  8020     1733  3081               	movlw	high (_aurebech| (0+32768))
  8021     1734  00AF               	movwf	??_load_buffer+3
  8022     1735  0820               	movf	?___wmul,w
  8023     1736  072E               	addwf	??_load_buffer+2,w
  8024     1737  00B0               	movwf	??_load_buffer+4
  8025     1738  0821               	movf	?___wmul+1,w
  8026     1739  1803               	skipnc
  8027     173A  0A21               	incf	?___wmul+1,w
  8028     173B  072F               	addwf	??_load_buffer+3,w
  8029     173C  00B1               	movwf	??_load_buffer+5
  8030     173D  0842               	movf	load_buffer@i_990,w
  8031     173E  0730               	addwf	??_load_buffer+4,w
  8032     173F  0084               	movwf	4
  8033     1740  0843               	movf	load_buffer@i_990+1,w
  8034     1741  1803               	skipnc
  8035     1742  0A43               	incf	load_buffer@i_990+1,w
  8036     1743  0731               	addwf	??_load_buffer+5,w
  8037     1744  00FF               	movwf	btemp+1
  8038     1745  120A  118A  2100  160A  118A  	fcall	stringtab
  8039     174A  00B2               	movwf	??_load_buffer+6
  8040     174B  3005               	movlw	5
  8041     174C  00A0               	movwf	___bmul@multiplicand
  8042     174D  0829               	movf	load_buffer@position,w
  8043     174E  160A  118A  208F  160A  118A  	fcall	___bmul
  8044     1753  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  8045     1754  1283               	bcf	3,5	;RP0=0, select bank0
  8046     1755  1303               	bcf	3,6	;RP1=0, select bank0
  8047     1756  0742               	addwf	load_buffer@i_990,w
  8048     1757  00B3               	movwf	??_load_buffer+7
  8049     1758  0833               	movf	??_load_buffer+7,w
  8050     1759  0084               	movwf	4
  8051     175A  0832               	movf	??_load_buffer+6,w
  8052     175B  1783               	bsf	3,7	;select IRP bank3
  8053     175C  0080               	movwf	0
  8054     175D                     l1956:
  8055                           
  8056                           ;scherm.c: 155:             }
  8057     175D  3001               	movlw	1
  8058     175E  07C2               	addwf	load_buffer@i_990,f
  8059     175F  1803               	skipnc
  8060     1760  0AC3               	incf	load_buffer@i_990+1,f
  8061     1761  3000               	movlw	0
  8062     1762  07C3               	addwf	load_buffer@i_990+1,f
  8063     1763  2F0F               	goto	l1950
  8064     1764                     l1960:
  8065     1764  3003               	movlw	3
  8066     1765  062B               	xorwf	load_buffer@scherm,w
  8067     1766  1D03               	btfss	3,2
  8068     1767  2F69               	goto	u1231
  8069     1768  2F6A               	goto	u1230
  8070     1769                     u1231:
  8071     1769  2AFB               	goto	l478
  8072     176A                     u1230:
  8073     176A                     l1962:
  8074                           
  8075                           ;scherm.c: 157:             for (int i = 0; i < 5; i++) {
  8076     176A  01CA               	clrf	load_buffer@i_991
  8077     176B  01CB               	clrf	load_buffer@i_991+1
  8078     176C                     l1964:
  8079     176C  084B               	movf	load_buffer@i_991+1,w
  8080     176D  3A80               	xorlw	128
  8081     176E  00FF               	movwf	btemp+1
  8082     176F  3080               	movlw	128
  8083     1770  027F               	subwf	btemp+1,w
  8084     1771  1D03               	skipz
  8085     1772  2F75               	goto	u1245
  8086     1773  3005               	movlw	5
  8087     1774  024A               	subwf	load_buffer@i_991,w
  8088     1775                     u1245:
  8089     1775  1C03               	skipc
  8090     1776  2F78               	goto	u1241
  8091     1777  2F79               	goto	u1240
  8092     1778                     u1241:
  8093     1778  2F7A               	goto	l1968
  8094     1779                     u1240:
  8095     1779  2FFF               	goto	l526
  8096     177A                     l1968:
  8097                           
  8098                           ;scherm.c: 158:                 scherm1_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8099     177A  1283               	bcf	3,5	;RP0=0, select bank0
  8100     177B  1303               	bcf	3,6	;RP1=0, select bank0
  8101     177C  0828               	movf	load_buffer@character,w
  8102     177D  00AC               	movwf	??_load_buffer
  8103     177E  01AD               	clrf	??_load_buffer+1
  8104     177F  082C               	movf	??_load_buffer,w
  8105     1780  00A0               	movwf	___wmul@multiplier
  8106     1781  082D               	movf	??_load_buffer+1,w
  8107     1782  00A1               	movwf	___wmul@multiplier+1
  8108     1783  3005               	movlw	5
  8109     1784  00A2               	movwf	___wmul@multiplicand
  8110     1785  3000               	movlw	0
  8111     1786  00A3               	movwf	___wmul@multiplicand+1
  8112     1787  160A  118A  2116  160A  118A  	fcall	___wmul
  8113     178C  3012               	movlw	low (_aurebech| (0+32768))
  8114     178D  1283               	bcf	3,5	;RP0=0, select bank0
  8115     178E  1303               	bcf	3,6	;RP1=0, select bank0
  8116     178F  00AE               	movwf	??_load_buffer+2
  8117     1790  3081               	movlw	high (_aurebech| (0+32768))
  8118     1791  00AF               	movwf	??_load_buffer+3
  8119     1792  0820               	movf	?___wmul,w
  8120     1793  072E               	addwf	??_load_buffer+2,w
  8121     1794  00B0               	movwf	??_load_buffer+4
  8122     1795  0821               	movf	?___wmul+1,w
  8123     1796  1803               	skipnc
  8124     1797  0A21               	incf	?___wmul+1,w
  8125     1798  072F               	addwf	??_load_buffer+3,w
  8126     1799  00B1               	movwf	??_load_buffer+5
  8127     179A  084A               	movf	load_buffer@i_991,w
  8128     179B  0730               	addwf	??_load_buffer+4,w
  8129     179C  0084               	movwf	4
  8130     179D  084B               	movf	load_buffer@i_991+1,w
  8131     179E  1803               	skipnc
  8132     179F  0A4B               	incf	load_buffer@i_991+1,w
  8133     17A0  0731               	addwf	??_load_buffer+5,w
  8134     17A1  00FF               	movwf	btemp+1
  8135     17A2  120A  118A  2100  160A  118A  	fcall	stringtab
  8136     17A7  00B2               	movwf	??_load_buffer+6
  8137     17A8  3005               	movlw	5
  8138     17A9  00A0               	movwf	___bmul@multiplicand
  8139     17AA  0829               	movf	load_buffer@position,w
  8140     17AB  160A  118A  208F  160A  118A  	fcall	___bmul
  8141     17B0  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  8142     17B1  1283               	bcf	3,5	;RP0=0, select bank0
  8143     17B2  1303               	bcf	3,6	;RP1=0, select bank0
  8144     17B3  074A               	addwf	load_buffer@i_991,w
  8145     17B4  00B3               	movwf	??_load_buffer+7
  8146     17B5  0833               	movf	??_load_buffer+7,w
  8147     17B6  0084               	movwf	4
  8148     17B7  0832               	movf	??_load_buffer+6,w
  8149     17B8  1783               	bsf	3,7	;select IRP bank3
  8150     17B9  0080               	movwf	0
  8151                           
  8152                           ;scherm.c: 159:                 scherm2_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8153     17BA  0828               	movf	load_buffer@character,w
  8154     17BB  00AC               	movwf	??_load_buffer
  8155     17BC  01AD               	clrf	??_load_buffer+1
  8156     17BD  082C               	movf	??_load_buffer,w
  8157     17BE  00A0               	movwf	___wmul@multiplier
  8158     17BF  082D               	movf	??_load_buffer+1,w
  8159     17C0  00A1               	movwf	___wmul@multiplier+1
  8160     17C1  3005               	movlw	5
  8161     17C2  00A2               	movwf	___wmul@multiplicand
  8162     17C3  3000               	movlw	0
  8163     17C4  00A3               	movwf	___wmul@multiplicand+1
  8164     17C5  160A  118A  2116  160A  118A  	fcall	___wmul
  8165     17CA  3012               	movlw	low (_aurebech| (0+32768))
  8166     17CB  1283               	bcf	3,5	;RP0=0, select bank0
  8167     17CC  1303               	bcf	3,6	;RP1=0, select bank0
  8168     17CD  00AE               	movwf	??_load_buffer+2
  8169     17CE  3081               	movlw	high (_aurebech| (0+32768))
  8170     17CF  00AF               	movwf	??_load_buffer+3
  8171     17D0  0820               	movf	?___wmul,w
  8172     17D1  072E               	addwf	??_load_buffer+2,w
  8173     17D2  00B0               	movwf	??_load_buffer+4
  8174     17D3  0821               	movf	?___wmul+1,w
  8175     17D4  1803               	skipnc
  8176     17D5  0A21               	incf	?___wmul+1,w
  8177     17D6  072F               	addwf	??_load_buffer+3,w
  8178     17D7  00B1               	movwf	??_load_buffer+5
  8179     17D8  084A               	movf	load_buffer@i_991,w
  8180     17D9  0730               	addwf	??_load_buffer+4,w
  8181     17DA  0084               	movwf	4
  8182     17DB  084B               	movf	load_buffer@i_991+1,w
  8183     17DC  1803               	skipnc
  8184     17DD  0A4B               	incf	load_buffer@i_991+1,w
  8185     17DE  0731               	addwf	??_load_buffer+5,w
  8186     17DF  00FF               	movwf	btemp+1
  8187     17E0  120A  118A  2100  160A  118A  	fcall	stringtab
  8188     17E5  00B2               	movwf	??_load_buffer+6
  8189     17E6  3005               	movlw	5
  8190     17E7  00A0               	movwf	___bmul@multiplicand
  8191     17E8  0829               	movf	load_buffer@position,w
  8192     17E9  160A  118A  208F  160A  118A  	fcall	___bmul
  8193     17EE  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  8194     17EF  1283               	bcf	3,5	;RP0=0, select bank0
  8195     17F0  1303               	bcf	3,6	;RP1=0, select bank0
  8196     17F1  074A               	addwf	load_buffer@i_991,w
  8197     17F2  00B3               	movwf	??_load_buffer+7
  8198     17F3  0833               	movf	??_load_buffer+7,w
  8199     17F4  0084               	movwf	4
  8200     17F5  0832               	movf	??_load_buffer+6,w
  8201     17F6  1783               	bsf	3,7	;select IRP bank3
  8202     17F7  0080               	movwf	0
  8203     17F8                     l1970:
  8204                           
  8205                           ;scherm.c: 160:             }
  8206     17F8  3001               	movlw	1
  8207     17F9  07CA               	addwf	load_buffer@i_991,f
  8208     17FA  1803               	skipnc
  8209     17FB  0ACB               	incf	load_buffer@i_991+1,f
  8210     17FC  3000               	movlw	0
  8211     17FD  07CB               	addwf	load_buffer@i_991+1,f
  8212     17FE  2F6C               	goto	l1964
  8213     17FF                     l526:
  8214     17FF  0008               	return
  8215     1800                     __end_of_load_buffer:
  8216                           
  8217                           	psect	text18
  8218     1116                     __ptext18:	
  8219 ;; *************** function ___wmul *****************
  8220 ;; Defined at:
  8221 ;;		line 15 in file "D:\cx8\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8224 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;  product         2    4[BANK0 ] unsigned int 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  2    0[BANK0 ] unsigned int 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8236 ;;      Params:         0       4       0       0       0
  8237 ;;      Locals:         0       2       0       0       0
  8238 ;;      Temps:          0       0       0       0       0
  8239 ;;      Totals:         0       6       0       0       0
  8240 ;;Total ram usage:        6 bytes
  8241 ;; Hardware stack levels used: 1
  8242 ;; Hardware stack levels required when called: 3
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_load_buffer
  8247 ;; This function uses a non-reentrant model
  8248 ;;
  8249                           
  8250     1116                     ___wmul:	
  8251                           ;psect for function ___wmul
  8252                           
  8253     1116                     l1768:	
  8254                           ;incstack = 0
  8255                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8256                           
  8257     1116  1283               	bcf	3,5	;RP0=0, select bank0
  8258     1117  1303               	bcf	3,6	;RP1=0, select bank0
  8259     1118  01A4               	clrf	___wmul@product
  8260     1119  01A5               	clrf	___wmul@product+1
  8261     111A                     l1770:
  8262     111A  1C20               	btfss	___wmul@multiplier,0
  8263     111B  291D               	goto	u911
  8264     111C  291E               	goto	u910
  8265     111D                     u911:
  8266     111D  2924               	goto	l636
  8267     111E                     u910:
  8268     111E                     l1772:
  8269     111E  0822               	movf	___wmul@multiplicand,w
  8270     111F  07A4               	addwf	___wmul@product,f
  8271     1120  1803               	skipnc
  8272     1121  0AA5               	incf	___wmul@product+1,f
  8273     1122  0823               	movf	___wmul@multiplicand+1,w
  8274     1123  07A5               	addwf	___wmul@product+1,f
  8275     1124                     l636:
  8276     1124  3001               	movlw	1
  8277     1125                     u925:
  8278     1125  1003               	clrc
  8279     1126  0DA2               	rlf	___wmul@multiplicand,f
  8280     1127  0DA3               	rlf	___wmul@multiplicand+1,f
  8281     1128  3EFF               	addlw	-1
  8282     1129  1D03               	skipz
  8283     112A  2925               	goto	u925
  8284     112B                     l1774:
  8285     112B  3001               	movlw	1
  8286     112C                     u935:
  8287     112C  1003               	clrc
  8288     112D  0CA1               	rrf	___wmul@multiplier+1,f
  8289     112E  0CA0               	rrf	___wmul@multiplier,f
  8290     112F  3EFF               	addlw	-1
  8291     1130  1D03               	skipz
  8292     1131  292C               	goto	u935
  8293     1132                     l1776:
  8294     1132  0820               	movf	___wmul@multiplier,w
  8295     1133  0421               	iorwf	___wmul@multiplier+1,w
  8296     1134  1D03               	btfss	3,2
  8297     1135  2937               	goto	u941
  8298     1136  2938               	goto	u940
  8299     1137                     u941:
  8300     1137  291A               	goto	l1770
  8301     1138                     u940:
  8302     1138                     l1778:
  8303     1138  0825               	movf	___wmul@product+1,w
  8304     1139  00A1               	movwf	?___wmul+1
  8305     113A  0824               	movf	___wmul@product,w
  8306     113B  00A0               	movwf	?___wmul
  8307     113C                     l638:
  8308     113C  0008               	return
  8309     113D                     __end_of___wmul:
  8310                           
  8311                           	psect	text19
  8312     108F                     __ptext19:	
  8313 ;; *************** function ___bmul *****************
  8314 ;; Defined at:
  8315 ;;		line 4 in file "D:\cx8\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  multiplier      1    wreg     unsigned char 
  8318 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;  multiplier      1    2[BANK0 ] unsigned char 
  8321 ;;  product         1    1[BANK0 ] unsigned char 
  8322 ;; Return value:  Size  Location     Type
  8323 ;;                  1    wreg      unsigned char 
  8324 ;; Registers used:
  8325 ;;		wreg, status,2, status,0, btemp+1
  8326 ;; Tracked objects:
  8327 ;;		On entry : 0/0
  8328 ;;		On exit  : 0/0
  8329 ;;		Unchanged: 0/0
  8330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8331 ;;      Params:         0       1       0       0       0
  8332 ;;      Locals:         0       2       0       0       0
  8333 ;;      Temps:          0       0       0       0       0
  8334 ;;      Totals:         0       3       0       0       0
  8335 ;;Total ram usage:        3 bytes
  8336 ;; Hardware stack levels used: 1
  8337 ;; Hardware stack levels required when called: 3
  8338 ;; This function calls:
  8339 ;;		Nothing
  8340 ;; This function is called by:
  8341 ;;		_load_buffer
  8342 ;; This function uses a non-reentrant model
  8343 ;;
  8344                           
  8345     108F                     ___bmul:	
  8346                           ;psect for function ___bmul
  8347                           
  8348                           
  8349                           ;incstack = 0
  8350                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  8351                           ;___bmul@multiplier stored from wreg
  8352     108F  1283               	bcf	3,5	;RP0=0, select bank0
  8353     1090  1303               	bcf	3,6	;RP1=0, select bank0
  8354     1091  00A2               	movwf	___bmul@multiplier
  8355     1092                     l1782:
  8356     1092  01A1               	clrf	___bmul@product
  8357     1093                     l1784:
  8358     1093  1C22               	btfss	___bmul@multiplier,0
  8359     1094  2896               	goto	u951
  8360     1095  2897               	goto	u950
  8361     1096                     u951:
  8362     1096  289B               	goto	l1788
  8363     1097                     u950:
  8364     1097                     l1786:
  8365     1097  0820               	movf	___bmul@multiplicand,w
  8366     1098  00FF               	movwf	btemp+1
  8367     1099  087F               	movf	btemp+1,w
  8368     109A  07A1               	addwf	___bmul@product,f
  8369     109B                     l1788:
  8370     109B  1003               	clrc
  8371     109C  0DA0               	rlf	___bmul@multiplicand,f
  8372     109D                     l1790:
  8373     109D  1003               	clrc
  8374     109E  0CA2               	rrf	___bmul@multiplier,f
  8375     109F                     l1792:
  8376     109F  0822               	movf	___bmul@multiplier,w
  8377     10A0  1D03               	btfss	3,2
  8378     10A1  28A3               	goto	u961
  8379     10A2  28A4               	goto	u960
  8380     10A3                     u961:
  8381     10A3  2893               	goto	l1784
  8382     10A4                     u960:
  8383     10A4                     l1794:
  8384     10A4  0821               	movf	___bmul@product,w
  8385     10A5                     l662:
  8386     10A5  0008               	return
  8387     10A6                     __end_of___bmul:
  8388                           
  8389                           	psect	text20
  8390     00C9                     __ptext20:	
  8391 ;; *************** function _ISR *****************
  8392 ;; Defined at:
  8393 ;;		line 37 in file "main.c"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;		None
  8396 ;; Auto vars:     Size  Location     Type
  8397 ;;		None
  8398 ;; Return value:  Size  Location     Type
  8399 ;;                  1    wreg      void 
  8400 ;; Registers used:
  8401 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8402 ;; Tracked objects:
  8403 ;;		On entry : 0/0
  8404 ;;		On exit  : 0/0
  8405 ;;		Unchanged: 0/0
  8406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8407 ;;      Params:         0       0       0       0       0
  8408 ;;      Locals:         0       0       0       0       0
  8409 ;;      Temps:          4       0       0       0       0
  8410 ;;      Totals:         4       0       0       0       0
  8411 ;;Total ram usage:        4 bytes
  8412 ;; Hardware stack levels used: 1
  8413 ;; Hardware stack levels required when called: 2
  8414 ;; This function calls:
  8415 ;;		_adcHandeling
  8416 ;;		_remote_edge_handeling
  8417 ;;		_remote_timer_handeling
  8418 ;;		_rotaryHandeling
  8419 ;; This function is called by:
  8420 ;;		Interrupt level 1
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424     00C9                     _ISR:	
  8425                           ;psect for function _ISR
  8426                           
  8427     00C9                     i1l2426:
  8428                           
  8429                           ;main.c: 38:     if (INTCONbits.INTF == 1) {
  8430     00C9  1C8B               	btfss	11,1	;volatile
  8431     00CA  28CC               	goto	u177_21
  8432     00CB  28CD               	goto	u177_20
  8433     00CC                     u177_21:
  8434     00CC  28D2               	goto	i1l2430
  8435     00CD                     u177_20:
  8436     00CD                     i1l2428:
  8437                           
  8438                           ;main.c: 39:         remote_edge_handeling();
  8439     00CD  120A  158A  236A  120A  118A  	fcall	_remote_edge_handeling
  8440     00D2                     i1l2430:
  8441                           
  8442                           ;main.c: 42:     if (PIR1bits.TMR1IF == 1) {
  8443     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  8444     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  8445     00D4  1C0C               	btfss	12,0	;volatile
  8446     00D5  28D7               	goto	u178_21
  8447     00D6  28D8               	goto	u178_20
  8448     00D7                     u178_21:
  8449     00D7  28DD               	goto	i1l2434
  8450     00D8                     u178_20:
  8451     00D8                     i1l2432:
  8452                           
  8453                           ;main.c: 43:         remote_timer_handeling();
  8454     00D8  160A  118A  2177  120A  118A  	fcall	_remote_timer_handeling
  8455     00DD                     i1l2434:
  8456                           
  8457                           ;main.c: 46:     if(PIR1bits.ADIF == 1){
  8458     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8459     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8460     00DF  1F0C               	btfss	12,6	;volatile
  8461     00E0  28E2               	goto	u179_21
  8462     00E1  28E3               	goto	u179_20
  8463     00E2                     u179_21:
  8464     00E2  28E8               	goto	i1l2438
  8465     00E3                     u179_20:
  8466     00E3                     i1l2436:
  8467                           
  8468                           ;main.c: 47:         adcHandeling();
  8469     00E3  120A  158A  24B0  120A  118A  	fcall	_adcHandeling
  8470     00E8                     i1l2438:
  8471                           
  8472                           ;main.c: 50:     if(INTCONbits.RBIF==1){
  8473     00E8  1C0B               	btfss	11,0	;volatile
  8474     00E9  28EB               	goto	u180_21
  8475     00EA  28EC               	goto	u180_20
  8476     00EB                     u180_21:
  8477     00EB  28F1               	goto	i1l260
  8478     00EC                     u180_20:
  8479     00EC                     i1l2440:
  8480                           
  8481                           ;main.c: 51:         rotaryHandeling();
  8482     00EC  120A  158A  23B8  120A  118A  	fcall	_rotaryHandeling
  8483     00F1                     i1l260:
  8484     00F1  087C               	movf	??_ISR+3,w
  8485     00F2  00FF               	movwf	btemp+1
  8486     00F3  087B               	movf	??_ISR+2,w
  8487     00F4  008A               	movwf	10
  8488     00F5  087A               	movf	??_ISR+1,w
  8489     00F6  0084               	movwf	4
  8490     00F7  0E79               	swapf	??_ISR,w
  8491     00F8  0083               	movwf	3
  8492     00F9  0EFE               	swapf	btemp,f
  8493     00FA  0E7E               	swapf	btemp,w
  8494     00FB  0009               	retfie
  8495     00FC                     __end_of_ISR:
  8496                           
  8497                           	psect	intentry
  8498     0004                     __pintentry:	
  8499                           ;incstack = 0
  8500                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8501                           
  8502     0004                     interrupt_function:
  8503     007E                     saved_w	set	btemp
  8504     0004  00FE               	movwf	btemp
  8505     0005  0E03               	swapf	3,w
  8506     0006  00F9               	movwf	??_ISR
  8507     0007  0804               	movf	4,w
  8508     0008  00FA               	movwf	??_ISR+1
  8509     0009  080A               	movf	10,w
  8510     000A  00FB               	movwf	??_ISR+2
  8511     000B  087F               	movf	btemp+1,w
  8512     000C  00FC               	movwf	??_ISR+3
  8513     000D  120A  118A  28C9   	ljmp	_ISR
  8514                           
  8515                           	psect	text21
  8516     0BB8                     __ptext21:	
  8517 ;; *************** function _rotaryHandeling *****************
  8518 ;; Defined at:
  8519 ;;		line 4 in file "rotary.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1    wreg      void 
  8526 ;; Registers used:
  8527 ;;		wreg, status,2, status,0
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 0/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8533 ;;      Params:         0       0       0       0       0
  8534 ;;      Locals:         0       0       0       0       0
  8535 ;;      Temps:          3       0       0       0       0
  8536 ;;      Totals:         3       0       0       0       0
  8537 ;;Total ram usage:        3 bytes
  8538 ;; Hardware stack levels used: 1
  8539 ;; This function calls:
  8540 ;;		Nothing
  8541 ;; This function is called by:
  8542 ;;		_ISR
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546     0BB8                     _rotaryHandeling:	
  8547                           ;psect for function _rotaryHandeling
  8548                           
  8549     0BB8                     i1l2358:	
  8550                           ;incstack = 0
  8551                           ; Regs used in _rotaryHandeling: [wreg+status,2+status,0]
  8552                           
  8553                           
  8554                           ;rotary.c: 5:     _delay((unsigned long)((1)*(500000/4000.0)));
  8555     0BB8  3029               	movlw	41
  8556     0BB9  00F0               	movwf	??_rotaryHandeling
  8557     0BBA                     u187_27:
  8558     0BBA  0BF0               	decfsz	??_rotaryHandeling,f
  8559     0BBB  2BBA               	goto	u187_27
  8560     0BBC  0000               	nop
  8561     0BBD                     i1l2360:
  8562                           
  8563                           ;rotary.c: 6:     state = (unsigned char) (PORTBbits.RB5 << 1 | PORTBbits.RB4);
  8564     0BBD  1283               	bcf	3,5	;RP0=0, select bank0
  8565     0BBE  1303               	bcf	3,6	;RP1=0, select bank0
  8566     0BBF  0E06               	swapf	6,w	;volatile
  8567     0BC0  3901               	andlw	1
  8568     0BC1  00F0               	movwf	??_rotaryHandeling
  8569     0BC2  0E06               	swapf	6,w	;volatile
  8570     0BC3  00F1               	movwf	??_rotaryHandeling+1
  8571     0BC4  0C71               	rrf	??_rotaryHandeling+1,w
  8572     0BC5  3901               	andlw	1
  8573     0BC6  00F2               	movwf	??_rotaryHandeling+2
  8574     0BC7  0772               	addwf	??_rotaryHandeling+2,w
  8575     0BC8  0470               	iorwf	??_rotaryHandeling,w
  8576     0BC9  00FD               	movwf	_state
  8577     0BCA                     i1l2362:
  8578                           
  8579                           ;rotary.c: 8:     if (oldstate != state) {
  8580     0BCA  086F               	movf	_oldstate,w
  8581     0BCB  067D               	xorwf	_state,w
  8582     0BCC  1903               	skipnz
  8583     0BCD  2BCF               	goto	u167_21
  8584     0BCE  2BD0               	goto	u167_20
  8585     0BCF                     u167_21:
  8586     0BCF  2C29               	goto	i1l390
  8587     0BD0                     u167_20:
  8588     0BD0                     i1l2364:
  8589                           
  8590                           ;rotary.c: 9:         if (state == 0x1) {
  8591     0BD0  037D               	decf	_state,w
  8592     0BD1  1D03               	btfss	3,2
  8593     0BD2  2BD4               	goto	u168_21
  8594     0BD3  2BD5               	goto	u168_20
  8595     0BD4                     u168_21:
  8596     0BD4  2BFD               	goto	i1l2378
  8597     0BD5                     u168_20:
  8598     0BD5                     i1l2366:
  8599                           
  8600                           ;rotary.c: 10:             miniCount--;
  8601     0BD5  30FF               	movlw	255
  8602     0BD6  1683               	bsf	3,5	;RP0=1, select bank1
  8603     0BD7  1303               	bcf	3,6	;RP1=0, select bank1
  8604     0BD8  07B2               	addwf	_miniCount^(0+128),f
  8605     0BD9  1803               	skipnc
  8606     0BDA  0AB3               	incf	(_miniCount+1)^(0+128),f
  8607     0BDB  30FF               	movlw	255
  8608     0BDC  07B3               	addwf	(_miniCount+1)^(0+128),f
  8609     0BDD                     i1l2368:
  8610                           
  8611                           ;rotary.c: 11:             if (miniCount == 0) {
  8612     0BDD  0832               	movf	_miniCount^(0+128),w
  8613     0BDE  0433               	iorwf	(_miniCount+1)^(0+128),w
  8614     0BDF  1D03               	btfss	3,2
  8615     0BE0  2BE2               	goto	u169_21
  8616     0BE1  2BE3               	goto	u169_20
  8617     0BE2                     u169_21:
  8618     0BE2  2C29               	goto	i1l390
  8619     0BE3                     u169_20:
  8620     0BE3                     i1l2370:
  8621                           
  8622                           ;rotary.c: 12:                 miniCount = 2;
  8623     0BE3  3002               	movlw	2
  8624     0BE4  00B2               	movwf	_miniCount^(0+128)
  8625     0BE5  3000               	movlw	0
  8626     0BE6  00B3               	movwf	(_miniCount^(0+128)+1)
  8627     0BE7                     i1l2372:
  8628                           
  8629                           ;rotary.c: 13:                 if (input != 1) {
  8630     0BE7  0334               	decf	_input^(0+128),w
  8631     0BE8  0435               	iorwf	(_input+1)^(0+128),w
  8632     0BE9  1903               	btfsc	3,2
  8633     0BEA  2BEC               	goto	u170_21
  8634     0BEB  2BED               	goto	u170_20
  8635     0BEC                     u170_21:
  8636     0BEC  2BF4               	goto	i1l2376
  8637     0BED                     u170_20:
  8638     0BED                     i1l2374:
  8639                           
  8640                           ;rotary.c: 14:                     input--;
  8641     0BED  30FF               	movlw	255
  8642     0BEE  07B4               	addwf	_input^(0+128),f
  8643     0BEF  1803               	skipnc
  8644     0BF0  0AB5               	incf	(_input+1)^(0+128),f
  8645     0BF1  30FF               	movlw	255
  8646     0BF2  07B5               	addwf	(_input+1)^(0+128),f
  8647                           
  8648                           ;rotary.c: 15:                 } else {
  8649     0BF3  2BF8               	goto	i1l394
  8650     0BF4                     i1l2376:
  8651                           
  8652                           ;rotary.c: 16:                     input = 4;
  8653     0BF4  3004               	movlw	4
  8654     0BF5  00B4               	movwf	_input^(0+128)
  8655     0BF6  3000               	movlw	0
  8656     0BF7  00B5               	movwf	(_input^(0+128)+1)
  8657     0BF8                     i1l394:	
  8658                           ;rotary.c: 17:                 }
  8659                           
  8660                           
  8661                           ;rotary.c: 18:                 inputChanged = 1;
  8662     0BF8  3001               	movlw	1
  8663     0BF9  00B0               	movwf	_inputChanged^(0+128)
  8664     0BFA  3000               	movlw	0
  8665     0BFB  00B1               	movwf	(_inputChanged^(0+128)+1)
  8666     0BFC  2C29               	goto	i1l390
  8667     0BFD                     i1l2378:
  8668     0BFD  3002               	movlw	2
  8669     0BFE  067D               	xorwf	_state,w
  8670     0BFF  1D03               	btfss	3,2
  8671     0C00  2C02               	goto	u171_21
  8672     0C01  2C03               	goto	u171_20
  8673     0C02                     u171_21:
  8674     0C02  2C29               	goto	i1l390
  8675     0C03                     u171_20:
  8676     0C03                     i1l2380:
  8677                           
  8678                           ;rotary.c: 21:             miniCount++;
  8679     0C03  3001               	movlw	1
  8680     0C04  1683               	bsf	3,5	;RP0=1, select bank1
  8681     0C05  1303               	bcf	3,6	;RP1=0, select bank1
  8682     0C06  07B2               	addwf	_miniCount^(0+128),f
  8683     0C07  1803               	skipnc
  8684     0C08  0AB3               	incf	(_miniCount+1)^(0+128),f
  8685     0C09  3000               	movlw	0
  8686     0C0A  07B3               	addwf	(_miniCount+1)^(0+128),f
  8687     0C0B                     i1l2382:
  8688                           
  8689                           ;rotary.c: 22:             if (miniCount == (2 * 2)) {
  8690     0C0B  3004               	movlw	4
  8691     0C0C  0632               	xorwf	_miniCount^(0+128),w
  8692     0C0D  0433               	iorwf	(_miniCount+1)^(0+128),w
  8693     0C0E  1D03               	btfss	3,2
  8694     0C0F  2C11               	goto	u172_21
  8695     0C10  2C12               	goto	u172_20
  8696     0C11                     u172_21:
  8697     0C11  2C29               	goto	i1l390
  8698     0C12                     u172_20:
  8699     0C12                     i1l2384:
  8700                           
  8701                           ;rotary.c: 23:                 miniCount = 2;
  8702     0C12  3002               	movlw	2
  8703     0C13  00B2               	movwf	_miniCount^(0+128)
  8704     0C14  3000               	movlw	0
  8705     0C15  00B3               	movwf	(_miniCount^(0+128)+1)
  8706     0C16                     i1l2386:
  8707                           
  8708                           ;rotary.c: 24:                 if (input != 4) {
  8709     0C16  3004               	movlw	4
  8710     0C17  0634               	xorwf	_input^(0+128),w
  8711     0C18  0435               	iorwf	(_input+1)^(0+128),w
  8712     0C19  1903               	btfsc	3,2
  8713     0C1A  2C1C               	goto	u173_21
  8714     0C1B  2C1D               	goto	u173_20
  8715     0C1C                     u173_21:
  8716     0C1C  2C24               	goto	i1l2390
  8717     0C1D                     u173_20:
  8718     0C1D                     i1l2388:
  8719                           
  8720                           ;rotary.c: 25:                     input++;
  8721     0C1D  3001               	movlw	1
  8722     0C1E  07B4               	addwf	_input^(0+128),f
  8723     0C1F  1803               	skipnc
  8724     0C20  0AB5               	incf	(_input+1)^(0+128),f
  8725     0C21  3000               	movlw	0
  8726     0C22  07B5               	addwf	(_input+1)^(0+128),f
  8727                           
  8728                           ;rotary.c: 26:                 } else {
  8729     0C23  2BF8               	goto	i1l394
  8730     0C24                     i1l2390:
  8731                           
  8732                           ;rotary.c: 27:                     input = 1;
  8733     0C24  3001               	movlw	1
  8734     0C25  00B4               	movwf	_input^(0+128)
  8735     0C26  3000               	movlw	0
  8736     0C27  00B5               	movwf	(_input^(0+128)+1)
  8737     0C28  2BF8               	goto	i1l394
  8738     0C29                     i1l390:	
  8739                           ;rotary.c: 32:     }
  8740                           
  8741                           
  8742                           ;rotary.c: 33:     oldstate = state;
  8743     0C29  087D               	movf	_state,w
  8744     0C2A  1283               	bcf	3,5	;RP0=0, select bank0
  8745     0C2B  00EF               	movwf	_oldstate
  8746                           
  8747                           ;rotary.c: 34:     PORTB = PORTB;
  8748     0C2C  0806               	movf	6,w	;volatile
  8749     0C2D  0086               	movwf	6	;volatile
  8750     0C2E                     i1l2392:
  8751                           
  8752                           ;rotary.c: 35:     INTCONbits.RBIF = 0;
  8753     0C2E  100B               	bcf	11,0	;volatile
  8754     0C2F                     i1l400:
  8755     0C2F  0008               	return
  8756     0C30                     __end_of_rotaryHandeling:
  8757                           
  8758                           	psect	text22
  8759     1177                     __ptext22:	
  8760 ;; *************** function _remote_timer_handeling *****************
  8761 ;; Defined at:
  8762 ;;		line 10 in file "remote.c"
  8763 ;; Parameters:    Size  Location     Type
  8764 ;;		None
  8765 ;; Auto vars:     Size  Location     Type
  8766 ;;		None
  8767 ;; Return value:  Size  Location     Type
  8768 ;;                  1    wreg      void 
  8769 ;; Registers used:
  8770 ;;		wreg, status,2, status,0
  8771 ;; Tracked objects:
  8772 ;;		On entry : 0/0
  8773 ;;		On exit  : 0/0
  8774 ;;		Unchanged: 0/0
  8775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8776 ;;      Params:         0       0       0       0       0
  8777 ;;      Locals:         0       0       0       0       0
  8778 ;;      Temps:          4       0       0       0       0
  8779 ;;      Totals:         4       0       0       0       0
  8780 ;;Total ram usage:        4 bytes
  8781 ;; Hardware stack levels used: 1
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_ISR
  8786 ;; This function uses a non-reentrant model
  8787 ;;
  8788                           
  8789     1177                     _remote_timer_handeling:	
  8790                           ;psect for function _remote_timer_handeling
  8791                           
  8792     1177                     i1l2336:	
  8793                           ;incstack = 0
  8794                           ; Regs used in _remote_timer_handeling: [wreg+status,2+status,0]
  8795                           
  8796                           
  8797                           ;remote.c: 11:     if (timeraan == 1) {
  8798     1177  1683               	bsf	3,5	;RP0=1, select bank1
  8799     1178  1303               	bcf	3,6	;RP1=0, select bank1
  8800     1179  0341               	decf	_timeraan^(0+128),w
  8801     117A  0442               	iorwf	(_timeraan+1)^(0+128),w
  8802     117B  1D03               	btfss	3,2
  8803     117C  297E               	goto	u164_21
  8804     117D  297F               	goto	u164_20
  8805     117E                     u164_21:
  8806     117E  29BF               	goto	i1l2346
  8807     117F                     u164_20:
  8808     117F                     i1l2338:
  8809                           
  8810                           ;remote.c: 12:         final_code = final_code << 1;
  8811     117F  0839               	movf	_final_code^(0+128),w	;volatile
  8812     1180  00F0               	movwf	??_remote_timer_handeling
  8813     1181  083A               	movf	(_final_code+1)^(0+128),w	;volatile
  8814     1182  00F1               	movwf	??_remote_timer_handeling+1
  8815     1183  083B               	movf	(_final_code+2)^(0+128),w	;volatile
  8816     1184  00F2               	movwf	??_remote_timer_handeling+2
  8817     1185  083C               	movf	(_final_code+3)^(0+128),w	;volatile
  8818     1186  00F3               	movwf	??_remote_timer_handeling+3
  8819     1187  3001               	movlw	1
  8820     1188                     u165_25:
  8821     1188  1003               	clrc
  8822     1189  0DF0               	rlf	??_remote_timer_handeling,f
  8823     118A  0DF1               	rlf	??_remote_timer_handeling+1,f
  8824     118B  0DF2               	rlf	??_remote_timer_handeling+2,f
  8825     118C  0DF3               	rlf	??_remote_timer_handeling+3,f
  8826     118D                     u165_20:
  8827     118D  3EFF               	addlw	-1
  8828     118E  1D03               	skipz
  8829     118F  2988               	goto	u165_25
  8830     1190  0873               	movf	??_remote_timer_handeling+3,w
  8831     1191  00BC               	movwf	(_final_code+3)^(0+128)	;volatile
  8832     1192  0872               	movf	??_remote_timer_handeling+2,w
  8833     1193  00BB               	movwf	(_final_code+2)^(0+128)	;volatile
  8834     1194  0871               	movf	??_remote_timer_handeling+1,w
  8835     1195  00BA               	movwf	(_final_code+1)^(0+128)	;volatile
  8836     1196  0870               	movf	??_remote_timer_handeling,w
  8837     1197  00B9               	movwf	_final_code^(0+128)	;volatile
  8838     1198                     i1l2340:
  8839                           
  8840                           ;remote.c: 14:         if (PORTBbits.RB0 == 0) {
  8841     1198  1283               	bcf	3,5	;RP0=0, select bank0
  8842     1199  1303               	bcf	3,6	;RP1=0, select bank0
  8843     119A  1806               	btfsc	6,0	;volatile
  8844     119B  299D               	goto	u166_21
  8845     119C  299E               	goto	u166_20
  8846     119D                     u166_21:
  8847     119D  29B4               	goto	i1l317
  8848     119E                     u166_20:
  8849     119E                     i1l2342:
  8850                           
  8851                           ;remote.c: 15:             final_code = final_code | 0b0000000000000001;
  8852     119E  3001               	movlw	1
  8853     119F  1683               	bsf	3,5	;RP0=1, select bank1
  8854     11A0  1303               	bcf	3,6	;RP1=0, select bank1
  8855     11A1  0439               	iorwf	_final_code^(0+128),w	;volatile
  8856     11A2  00F0               	movwf	??_remote_timer_handeling
  8857     11A3  3000               	movlw	0
  8858     11A4  043A               	iorwf	(_final_code+1)^(0+128),w	;volatile
  8859     11A5  00F1               	movwf	??_remote_timer_handeling+1
  8860     11A6  3000               	movlw	0
  8861     11A7  043B               	iorwf	(_final_code+2)^(0+128),w	;volatile
  8862     11A8  00F2               	movwf	??_remote_timer_handeling+2
  8863     11A9  3000               	movlw	0
  8864     11AA  043C               	iorwf	(_final_code+3)^(0+128),w	;volatile
  8865     11AB  00F3               	movwf	??_remote_timer_handeling+3
  8866     11AC  0873               	movf	??_remote_timer_handeling+3,w
  8867     11AD  00BC               	movwf	(_final_code+3)^(0+128)	;volatile
  8868     11AE  0872               	movf	??_remote_timer_handeling+2,w
  8869     11AF  00BB               	movwf	(_final_code+2)^(0+128)	;volatile
  8870     11B0  0871               	movf	??_remote_timer_handeling+1,w
  8871     11B1  00BA               	movwf	(_final_code+1)^(0+128)	;volatile
  8872     11B2  0870               	movf	??_remote_timer_handeling,w
  8873     11B3  00B9               	movwf	_final_code^(0+128)	;volatile
  8874     11B4                     i1l317:	
  8875                           ;remote.c: 16:         }
  8876                           
  8877                           
  8878                           ;remote.c: 17:         remote_counter++;
  8879     11B4  3001               	movlw	1
  8880     11B5  1683               	bsf	3,5	;RP0=1, select bank1
  8881     11B6  1303               	bcf	3,6	;RP1=0, select bank1
  8882     11B7  07BF               	addwf	_remote_counter^(0+128),f	;volatile
  8883     11B8  1803               	skipnc
  8884     11B9  0AC0               	incf	(_remote_counter+1)^(0+128),f	;volatile
  8885     11BA  3000               	movlw	0
  8886     11BB  07C0               	addwf	(_remote_counter+1)^(0+128),f	;volatile
  8887     11BC                     i1l2344:
  8888                           
  8889                           ;remote.c: 18:         timeraan = 0;
  8890     11BC  01C1               	clrf	_timeraan^(0+128)
  8891     11BD  01C2               	clrf	(_timeraan+1)^(0+128)
  8892                           
  8893                           ;remote.c: 19:     } else {
  8894     11BE  29CE               	goto	i1l2356
  8895     11BF                     i1l2346:
  8896                           
  8897                           ;remote.c: 20:         remote_counter = 0;
  8898     11BF  01BF               	clrf	_remote_counter^(0+128)	;volatile
  8899     11C0  01C0               	clrf	(_remote_counter+1)^(0+128)	;volatile
  8900     11C1                     i1l2348:
  8901                           
  8902                           ;remote.c: 21:         final_code = 0;
  8903     11C1  3000               	movlw	0
  8904     11C2  00BC               	movwf	(_final_code+3)^(0+128)	;volatile
  8905     11C3  3000               	movlw	0
  8906     11C4  00BB               	movwf	(_final_code+2)^(0+128)	;volatile
  8907     11C5  3000               	movlw	0
  8908     11C6  00BA               	movwf	(_final_code+1)^(0+128)	;volatile
  8909     11C7  3000               	movlw	0
  8910     11C8  00B9               	movwf	_final_code^(0+128)	;volatile
  8911     11C9                     i1l2350:
  8912                           
  8913                           ;remote.c: 22:         T1CONbits.TMR1ON = 0;
  8914     11C9  1283               	bcf	3,5	;RP0=0, select bank0
  8915     11CA  1303               	bcf	3,6	;RP1=0, select bank0
  8916     11CB  1010               	bcf	16,0	;volatile
  8917     11CC                     i1l2352:
  8918                           
  8919                           ;remote.c: 23:         PORTCbits.RC0 = 1;
  8920     11CC  1407               	bsf	7,0	;volatile
  8921     11CD                     i1l2354:
  8922                           
  8923                           ;remote.c: 24:         PORTCbits.RC1 = 1;
  8924     11CD  1487               	bsf	7,1	;volatile
  8925     11CE                     i1l2356:
  8926                           
  8927                           ;remote.c: 26:     PIR1bits.TMR1IF = 0;
  8928     11CE  1283               	bcf	3,5	;RP0=0, select bank0
  8929     11CF  100C               	bcf	12,0	;volatile
  8930     11D0                     i1l319:
  8931     11D0  0008               	return
  8932     11D1                     __end_of_remote_timer_handeling:
  8933                           
  8934                           	psect	text23
  8935     0B6A                     __ptext23:	
  8936 ;; *************** function _remote_edge_handeling *****************
  8937 ;; Defined at:
  8938 ;;		line 3 in file "remote.c"
  8939 ;; Parameters:    Size  Location     Type
  8940 ;;		None
  8941 ;; Auto vars:     Size  Location     Type
  8942 ;;		None
  8943 ;; Return value:  Size  Location     Type
  8944 ;;                  1    wreg      void 
  8945 ;; Registers used:
  8946 ;;		wreg
  8947 ;; Tracked objects:
  8948 ;;		On entry : 0/0
  8949 ;;		On exit  : 0/0
  8950 ;;		Unchanged: 0/0
  8951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8952 ;;      Params:         0       0       0       0       0
  8953 ;;      Locals:         0       0       0       0       0
  8954 ;;      Temps:          0       0       0       0       0
  8955 ;;      Totals:         0       0       0       0       0
  8956 ;;Total ram usage:        0 bytes
  8957 ;; Hardware stack levels used: 1
  8958 ;; This function calls:
  8959 ;;		Nothing
  8960 ;; This function is called by:
  8961 ;;		_ISR
  8962 ;; This function uses a non-reentrant model
  8963 ;;
  8964                           
  8965     0B6A                     _remote_edge_handeling:	
  8966                           ;psect for function _remote_edge_handeling
  8967                           
  8968     0B6A                     i1l2330:	
  8969                           ;incstack = 0
  8970                           ; Regs used in _remote_edge_handeling: [wreg]
  8971                           
  8972                           
  8973                           ;remote.c: 4:     TMR1 = 65136;
  8974     0B6A  30FE               	movlw	254
  8975     0B6B  1283               	bcf	3,5	;RP0=0, select bank0
  8976     0B6C  1303               	bcf	3,6	;RP1=0, select bank0
  8977     0B6D  008F               	movwf	15	;volatile
  8978     0B6E  3070               	movlw	112
  8979     0B6F  008E               	movwf	14	;volatile
  8980                           
  8981                           ;remote.c: 5:     T1CONbits.TMR1ON = 1;
  8982     0B70  1410               	bsf	16,0	;volatile
  8983     0B71                     i1l2332:
  8984                           
  8985                           ;remote.c: 6:     timeraan = 1;
  8986     0B71  3001               	movlw	1
  8987     0B72  1683               	bsf	3,5	;RP0=1, select bank1
  8988     0B73  1303               	bcf	3,6	;RP1=0, select bank1
  8989     0B74  00C1               	movwf	_timeraan^(0+128)
  8990     0B75  3000               	movlw	0
  8991     0B76  00C2               	movwf	(_timeraan^(0+128)+1)
  8992     0B77                     i1l2334:
  8993                           
  8994                           ;remote.c: 7:     INTCONbits.INTF = 0;
  8995     0B77  108B               	bcf	11,1	;volatile
  8996     0B78                     i1l313:
  8997     0B78  0008               	return
  8998     0B79                     __end_of_remote_edge_handeling:
  8999                           
  9000                           	psect	text24
  9001     0CB0                     __ptext24:	
  9002 ;; *************** function _adcHandeling *****************
  9003 ;; Defined at:
  9004 ;;		line 3 in file "adc.c"
  9005 ;; Parameters:    Size  Location     Type
  9006 ;;		None
  9007 ;; Auto vars:     Size  Location     Type
  9008 ;;  adcValue        2    7[COMMON] int 
  9009 ;;  lowerValue      2    5[COMMON] int 
  9010 ;;  upperValue      2    3[COMMON] int 
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9020 ;;      Params:         0       0       0       0       0
  9021 ;;      Locals:         6       0       0       0       0
  9022 ;;      Temps:          3       0       0       0       0
  9023 ;;      Totals:         9       0       0       0       0
  9024 ;;Total ram usage:        9 bytes
  9025 ;; Hardware stack levels used: 2
  9026 ;; This function calls:
  9027 ;;		Nothing
  9028 ;; This function is called by:
  9029 ;;		_ISR
  9030 ;; This function uses a non-reentrant model
  9031 ;;
  9032                           
  9033     0CB0                     _adcHandeling:	
  9034                           ;psect for function _adcHandeling
  9035                           
  9036     0CB0                     i1l2066:	
  9037                           ;incstack = 0
  9038 ;; using string table level
  9039                           ; Regs used in _adcHandeling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  9040                           
  9041                           
  9042                           ;adc.c: 4:     int adcValue = ADRESH << 8 | ADRESL;
  9043     0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  9044     0CB1  1303               	bcf	3,6	;RP1=0, select bank0
  9045     0CB2  081E               	movf	30,w	;volatile
  9046     0CB3  00F8               	movwf	adcHandeling@adcValue+1
  9047     0CB4  1683               	bsf	3,5	;RP0=1, select bank1
  9048     0CB5  1303               	bcf	3,6	;RP1=0, select bank1
  9049     0CB6  081E               	movf	30,w	;volatile
  9050     0CB7  00F7               	movwf	adcHandeling@adcValue
  9051     0CB8                     i1l2068:
  9052                           
  9053                           ;adc.c: 5:     int upperValue = adcBounds[volume + 1] + 20;
  9054     0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  9055     0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  9056     0CBA  086D               	movf	_volume,w
  9057     0CBB  00F0               	movwf	??_adcHandeling
  9058     0CBC  0770               	addwf	??_adcHandeling,w
  9059     0CBD  3E14               	addlw	low ((_adcBounds| (0+32768)+2))
  9060     0CBE  0084               	movwf	4
  9061     0CBF  308B               	movlw	high ((_adcBounds| (0+32768)+2))
  9062     0CC0  1803               	skipnc
  9063     0CC1  3E01               	addlw	1
  9064     0CC2  00FF               	movwf	btemp+1
  9065     0CC3  120A  118A  2100  120A  158A  	fcall	stringtab
  9066     0CC8  00F1               	movwf	??_adcHandeling+1
  9067     0CC9  120A  118A  2100  120A  158A  	fcall	stringtab
  9068     0CCE  00F2               	movwf	??_adcHandeling+2
  9069     0CCF  0871               	movf	??_adcHandeling+1,w
  9070     0CD0  3E14               	addlw	20
  9071     0CD1  00F3               	movwf	adcHandeling@upperValue
  9072     0CD2  0872               	movf	??_adcHandeling+2,w
  9073     0CD3  1803               	skipnc
  9074     0CD4  3E01               	addlw	1
  9075     0CD5  3E00               	addlw	0
  9076     0CD6  00F4               	movwf	adcHandeling@upperValue+1
  9077     0CD7                     i1l2070:
  9078                           
  9079                           ;adc.c: 6:     int lowerValue = adcBounds[volume] - 20;
  9080     0CD7  086D               	movf	_volume,w
  9081     0CD8  00F0               	movwf	??_adcHandeling
  9082     0CD9  0770               	addwf	??_adcHandeling,w
  9083     0CDA  3E12               	addlw	low (_adcBounds| (0+32768))
  9084     0CDB  0084               	movwf	4
  9085     0CDC  308B               	movlw	high (_adcBounds| (0+32768))
  9086     0CDD  1803               	skipnc
  9087     0CDE  3E01               	addlw	1
  9088     0CDF  00FF               	movwf	btemp+1
  9089     0CE0  120A  118A  2100  120A  158A  	fcall	stringtab
  9090     0CE5  00F1               	movwf	??_adcHandeling+1
  9091     0CE6  120A  118A  2100  120A  158A  	fcall	stringtab
  9092     0CEB  00F2               	movwf	??_adcHandeling+2
  9093     0CEC  0871               	movf	??_adcHandeling+1,w
  9094     0CED  3EEC               	addlw	236
  9095     0CEE  00F5               	movwf	adcHandeling@lowerValue
  9096     0CEF  0872               	movf	??_adcHandeling+2,w
  9097     0CF0  1803               	skipnc
  9098     0CF1  3E01               	addlw	1
  9099     0CF2  3EFF               	addlw	255
  9100     0CF3  00F6               	movwf	adcHandeling@lowerValue+1
  9101                           
  9102                           ;adc.c: 8:     if ( adcValue >= upperValue && volume != 40){
  9103     0CF4  0878               	movf	adcHandeling@adcValue+1,w
  9104     0CF5  3A80               	xorlw	128
  9105     0CF6  00F0               	movwf	??_adcHandeling
  9106     0CF7  0874               	movf	adcHandeling@upperValue+1,w
  9107     0CF8  3A80               	xorlw	128
  9108     0CF9  0270               	subwf	??_adcHandeling,w
  9109     0CFA  1D03               	skipz
  9110     0CFB  2CFE               	goto	u133_25
  9111     0CFC  0873               	movf	adcHandeling@upperValue,w
  9112     0CFD  0277               	subwf	adcHandeling@adcValue,w
  9113     0CFE                     u133_25:
  9114     0CFE  1C03               	skipc
  9115     0CFF  2D01               	goto	u133_21
  9116     0D00  2D02               	goto	u133_20
  9117     0D01                     u133_21:
  9118     0D01  2D12               	goto	i1l2076
  9119     0D02                     u133_20:
  9120     0D02                     i1l2072:
  9121     0D02  3028               	movlw	40
  9122     0D03  1283               	bcf	3,5	;RP0=0, select bank0
  9123     0D04  1303               	bcf	3,6	;RP1=0, select bank0
  9124     0D05  066D               	xorwf	_volume,w
  9125     0D06  046E               	iorwf	_volume+1,w
  9126     0D07  1903               	btfsc	3,2
  9127     0D08  2D0A               	goto	u134_21
  9128     0D09  2D0B               	goto	u134_20
  9129     0D0A                     u134_21:
  9130     0D0A  2D12               	goto	i1l2076
  9131     0D0B                     u134_20:
  9132     0D0B                     i1l2074:
  9133                           
  9134                           ;adc.c: 9:         volume++;
  9135     0D0B  3001               	movlw	1
  9136     0D0C  07ED               	addwf	_volume,f
  9137     0D0D  1803               	skipnc
  9138     0D0E  0AEE               	incf	_volume+1,f
  9139     0D0F  3000               	movlw	0
  9140     0D10  07EE               	addwf	_volume+1,f
  9141                           
  9142                           ;adc.c: 10:     }
  9143     0D11  2D2E               	goto	i1l2082
  9144     0D12                     i1l2076:
  9145     0D12  0876               	movf	adcHandeling@lowerValue+1,w
  9146     0D13  3A80               	xorlw	128
  9147     0D14  00F0               	movwf	??_adcHandeling
  9148     0D15  0878               	movf	adcHandeling@adcValue+1,w
  9149     0D16  3A80               	xorlw	128
  9150     0D17  0270               	subwf	??_adcHandeling,w
  9151     0D18  1D03               	skipz
  9152     0D19  2D1C               	goto	u135_25
  9153     0D1A  0877               	movf	adcHandeling@adcValue,w
  9154     0D1B  0275               	subwf	adcHandeling@lowerValue,w
  9155     0D1C                     u135_25:
  9156     0D1C  1C03               	skipc
  9157     0D1D  2D1F               	goto	u135_21
  9158     0D1E  2D20               	goto	u135_20
  9159     0D1F                     u135_21:
  9160     0D1F  2D2E               	goto	i1l2082
  9161     0D20                     u135_20:
  9162     0D20                     i1l2078:
  9163     0D20  1283               	bcf	3,5	;RP0=0, select bank0
  9164     0D21  1303               	bcf	3,6	;RP1=0, select bank0
  9165     0D22  086D               	movf	_volume,w
  9166     0D23  046E               	iorwf	_volume+1,w
  9167     0D24  1903               	btfsc	3,2
  9168     0D25  2D27               	goto	u136_21
  9169     0D26  2D28               	goto	u136_20
  9170     0D27                     u136_21:
  9171     0D27  2D2E               	goto	i1l2082
  9172     0D28                     u136_20:
  9173     0D28                     i1l2080:
  9174                           
  9175                           ;adc.c: 12:         volume--;
  9176     0D28  30FF               	movlw	255
  9177     0D29  07ED               	addwf	_volume,f
  9178     0D2A  1803               	skipnc
  9179     0D2B  0AEE               	incf	_volume+1,f
  9180     0D2C  30FF               	movlw	255
  9181     0D2D  07EE               	addwf	_volume+1,f
  9182     0D2E                     i1l2082:
  9183                           
  9184                           ;adc.c: 14:     PIR1bits.ADIF = 0;
  9185     0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  9186     0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  9187     0D30  130C               	bcf	12,6	;volatile
  9188     0D31                     i1l50:
  9189     0D31  0008               	return
  9190     0D32                     __end_of_adcHandeling:
  9191     007E                     btemp	set	126	;btemp
  9192     007E                     wtemp0	set	126
  9193                           
  9194                           	psect	config
  9195                           
  9196                           ;Config register CONFIG1 @ 0x2007
  9197                           ;	Oscillator Selection bits
  9198                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9199                           ;	Watchdog Timer Enable bit
  9200                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9201                           ;	Power-up Timer Enable bit
  9202                           ;	PWRTE = OFF, PWRT disabled
  9203                           ;	RE3/MCLR pin function select bit
  9204                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9205                           ;	Code Protection bit
  9206                           ;	CP = OFF, Program memory code protection is disabled
  9207                           ;	Data Code Protection bit
  9208                           ;	CPD = OFF, Data memory code protection is disabled
  9209                           ;	Brown Out Reset Selection bits
  9210                           ;	BOREN = ON, BOR enabled
  9211                           ;	Internal External Switchover bit
  9212                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9213                           ;	Fail-Safe Clock Monitor Enabled bit
  9214                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9215                           ;	Low Voltage Programming Enable bit
  9216                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9217                           ;	In-Circuit Debugger Mode bit
  9218                           ;	DEBUG = 0x1, unprogrammed default
  9219     2007                     	org	8199
  9220     2007  23D5               	dw	9173
  9221                           
  9222                           ;Config register CONFIG2 @ 0x2008
  9223                           ;	Brown-out Reset Selection bit
  9224                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  9225                           ;	Flash Program Memory Self Write Enable bits
  9226                           ;	WRT = OFF, Write protection off
  9227     2008                     	org	8200
  9228     2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    2648
    Data        25
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     77      80
    BANK1            80      4      41
    BANK3            96      0      80
    BANK2            96      0       0

Pointer List with Targets:

    text_to_buffer@newtext	PTR unsigned char  size(1) Largest target is 8
		 -> scherm_setup@screen1(BANK0[8]), scherm_setup@screen2(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_adcHandeling

Critical Paths under _main in BANK0

    _main->_key_detection
    _volume_conversion->_load_buffer
    _scherm_init->_screen_transmit
    _key_detection->_scherm_setup
    _send_buffer->_screen_transmit
    _scherm_setup->_text_to_buffer
    _text_to_buffer->_load_buffer
    _input_conversion->_load_buffer
    _load_buffer->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   36279
                                              0 BANK1      4     0      4
                   _input_conversion
                      _key_detection
                           _pic_init
                        _scherm_init
                       _scherm_setup
                        _send_buffer
                           _spi_init
                  _volume_conversion
 ---------------------------------------------------------------------------------
 (1) _volume_conversion                                    5     5      0    8999
                                             44 BANK0      5     5      0
                        _load_buffer
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _scherm_init                                          6     6      0     226
                                              1 BANK0      6     6      0
                    _screen_transmit
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
                           _adc_init
                           _init_osc
                     _interrupt_init
                          _pins_init
                         _ports_init
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pins_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_detection                                        8     8      0    9184
                                             69 BANK0      8     8      0
                       _scherm_setup
                        _send_buffer
 ---------------------------------------------------------------------------------
 (1) _send_buffer                                          6     6      0     202
                                              1 BANK0      6     6      0
                    _screen_transmit
 ---------------------------------------------------------------------------------
 (2) _screen_transmit                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _scherm_setup                                        20    20      0    8798
                                             49 BANK0     20    20      0
                     _text_to_buffer
 ---------------------------------------------------------------------------------
 (2) _text_to_buffer                                       5     4      1    8750
                                             44 BANK0      5     4      1
                        _load_buffer
 ---------------------------------------------------------------------------------
 (1) _input_conversion                                     1     1      0    8487
                                             44 BANK0      1     1      0
                        _load_buffer
 ---------------------------------------------------------------------------------
 (2) _load_buffer                                         38    32      6    8464
                                              6 BANK0     38    32      6
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4124
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     508
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      91
                                              9 COMMON     4     4      0
                       _adcHandeling
              _remote_edge_handeling
             _remote_timer_handeling
                    _rotaryHandeling
 ---------------------------------------------------------------------------------
 (7) _rotaryHandeling                                      3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _remote_timer_handeling                               4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (7) _remote_edge_handeling                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _adcHandeling                                         9     9      0      91
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _input_conversion
     _load_buffer
       ___bmul
       ___wmul
   _key_detection
     _scherm_setup
       _text_to_buffer
         _load_buffer
     _send_buffer
       _screen_transmit
   _pic_init
     _adc_init
     _init_osc
     _interrupt_init
     _pins_init
     _ports_init
     _timer_init
   _scherm_init
     _screen_transmit
   _scherm_setup
   _send_buffer
   _spi_init
   _volume_conversion
     _load_buffer

 _ISR (ROOT)
   _adcHandeling
   _remote_edge_handeling
   _remote_timer_handeling
   _rotaryHandeling

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      50       9       83.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      29       7       51.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D7      12        0.0%
ABS                  0      0      D7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Apr 02 02:23:05 2024

                             pc 0002                  ___bmul@product 0021                     _SSPSTATbits 0094  
                            l66 0E14                              _GO 00F9          spi_init@mst_slv_oscdiv 0023  
                            fsr 0004             ___wmul@multiplicand 0022          __end_of_interrupt_init 108F  
                           l151 1044                             l160 108E                             l145 10F4  
                           l154 1078                             l403 1115                             l331 0F13  
                           l163 1031                             l332 0F44                             l148 1040  
                           l333 0F75                             l325 0E88                             l157 1051  
                           l334 0FB1                             l166 10BC                             l337 0FFF  
                           l329 0EDC                             l531 1176                             l526 17FF  
                           l462 0BB7                             l534 1029                             l550 122B  
                           l455 00C8                             l472 1297                             l546 1205  
                           l636 1124                             l662 10A5                             l638 113C  
                           l478 12FB                             _ISR 00C9                             u910 111E  
                           u911 111D                             u940 1138                             u941 1137  
                           u925 1125                             u950 1097                             u951 1096  
                           u935 112C                             u960 10A4                             u961 10A3  
                           u970 12A0                             u971 129F                             u980 12A5  
                           u981 12A4                             u990 12FA                             u991 12F9  
                           u995 12F6                             fsr0 0004                             indf 0000  
                          ?_ISR 0070                            l2000 1077                            l2010 10A6  
                          l2002 1045                            l2020 0B79                            l2012 10AC  
                          l2004 1079                            l2100 0D60                            l2022 0B90  
                          l2030 1235                            l2014 10AF                            l2006 102A  
                          l2110 0D7A                            l2102 0D63                            l2024 0B98  
                          l2040 124B                            l2016 10B6                            l2008 102D  
                          l2200 0057                            l2120 0D95                            l2112 0D89  
                          l2104 0D72                            l2050 126A                            l2042 1258  
                          l2026 122F                            l2018 10B9                            l2210 0064  
                          l2202 005E                            l2130 0D9B                            l2114 0D8D  
                          l2106 0D76                            l2060 1280                            l2044 125F  
                          l2036 1237                            l2028 1234                            l2300 0F3A  
                          l2220 0068                            l2212 0065                            l2204 0061  
                          l2140 0DE6                            l2132 0DA6                            l2124 0D99  
                          l2062 128D                            l2038 1243                            l2046 1263  
                          l2310 0FA6                            l2302 0F60                            l2150 10E5  
                          l2230 008D                            l2222 006E                            l2214 0066  
                          l2206 0062                            l2142 0DEE                            l2134 0DAC  
                          l2118 0D91                            l2064 1294                            l2056 126C  
                          l2048 1269                            l2320 0FEF                            l2312 0FAB  
                          l2304 0F6B                            l2240 0092                            l2232 008E  
                          l2224 0076                            l2208 0063                            l2160 11E5  
                          l2152 11D4                            l2144 0DFB                            l2400 0C42  
                          l2058 1278                            l2322 0FF3                            l2314 0FCD  
                          l2306 0F91                            l2146 10D6                            l2250 00AC  
                          l2242 0098                            l2234 008F                            l2226 0083  
                          l2170 1217                            l2162 11F6                            l2154 11D9  
                          l2138 0DC6                            l2090 0D48                            l2410 0C63  
                          l2402 0C48                            l2324 0FFD                            l2316 0FD8  
                          l2308 0F9C                            l2148 10E0                            l2260 00C6  
                          l2252 00AD                            l2244 00A7                            l2236 0090  
                          l2228 008A                            l2180 004D                            l2172 1229  
                          l2164 11FD                            l2156 11DC                            l2092 0D48  
                          l2084 0D32                            l2420 0C93                            l2412 0C68  
                          l2404 0C4D                            l2326 10F5                            l2270 0E56  
                          l2318 0FE0                            l2262 00C7                            l2254 00B3  
                          l2246 00AA                            l2238 0091                            l2190 0052  
                          l2182 004E                            l2174 003E                            l2166 120C  
                          l2158 11DD                            l2086 0D41                            l2094 0D4A  
                          l2422 0C9E                            l2414 0C79                            l2406 0C56  
                          l1800 12A0                            l2328 10FC                            l2272 0E61  
                          l2280 0E8E                            l2264 0E15                            l2256 00C2  
                          l2248 00AB                            l2192 0053                            l2184 004F  
                          l2176 0048                            l2168 1213                            l2096 0D59  
                          l2088 0D46                            l2424 0CAA                            l2416 0C7F  
                          l2408 0C5B                            l1810 12E7                            l1802 12A5  
                          l2290 0ED8                            l2282 0EAA                            l2274 0E70  
                          l2266 0E31                            l2258 00C5                            l2194 0054  
                          l2186 0050                            l2178 004A                            l2098 0D5D  
                          l2418 0C83                            l1900 159E                            l1812 12ED  
                          l2284 0EB5                            l2292 0EE2                            l2276 0E75  
                          l2268 0E3A                            l2196 0055                            l2188 0051  
                          l1910 15C2                            l1902 15AC                            l1830 135E  
                          l1822 1304                            l1814 12FC                            l2294 0EFE  
                          l2286 0EC4                            l2278 0E84                            l2198 0056  
                          l1920 1611                            l1912 1602                            l1904 15B2  
                          l1840 13E4                            l1824 1344                            l1816 1302  
                          l1808 12A7                            l2296 0F09                            l2288 0EC9  
                          l1770 111A                            l1906 15B4                            l1930 16A4  
                          l1826 134A                            l1842 13F2                            l2298 0F2F  
                          l2394 0C30                            l1772 111E                            l1940 16C0  
                          l1932 16AB                            l1924 161F                            l1916 1609  
                          l1860 145A                            l1852 1400                            l1844 13F9  
                          l1836 1360                            l1828 1358                            l2396 0C35  
                          l1790 109D                            l1782 1092                            l1774 112B  
                          l1950 170F                            l1942 1700                            l1934 16B0  
                          l1926 169D                            l1918 160F                            l1870 14A2  
                          l1854 1440                            l1846 13FE                            l1838 13DE  
                          l2398 0C42                            l1792 109F                            l1784 1093  
                          l1776 1132                            l1768 1116                            l1960 1764  
                          l1936 16B2                            l1880 14B8                            l1872 14B0  
                          l1856 1446                            l1794 10A4                            l1786 1097  
                          l1778 1138                            l1970 17F8                            l1962 176A  
                          l1954 171D                            l1946 1707                            l1890 1556  
                          l1882 1536                            l1874 14B6                            l1866 145C  
                          l1858 1454                            l1788 109B                            l1964 176C  
                          l1956 175D                            l1948 170D                            l1884 153C  
                          l1868 149C                            l1886 154A                            l1798 1298  
                          l1982 1142                            l1974 1027                            l1990 103D  
                          l1968 177A                            l1896 1558                            l1888 1551  
                          l1984 1161                            l1976 1140                            l1992 103F  
                          l1898 1598                            l1986 1169                            l1994 1065  
                          l1988 103A                            l1996 1074                            l1998 1076  
                _text_to_buffer 113D                            u1000 1302                            u1001 1301  
                          u1010 1357                            u1011 1356                            u1100 1549  
                          u1020 135E                            u1101 1548                            u1021 135D  
                          u1110 1551                            u1030 13F1                            u1111 1550  
                          u1031 13F0                            u1015 1353                            u1200 16BF  
                          u1120 1556                            u1040 13F9                            u1201 16BE  
                          u1121 1555                            u1105 1545                            u1041 13F8  
                          u1210 170D                            u1130 15AB                            u1050 13FE  
                          u1211 170C                            u1131 15AA                            u1051 13FD  
                          u1035 13ED                            u1220 171C                            u1140 15B2  
                          u1060 1453                            u1300 1258                            u1221 171B  
                          u1205 16BB                            u1141 15B1                            u1061 1452  
                          u1301 1257                            u1230 176A                            u1150 15C1  
                          u1070 145A                            u1310 1269                            u1231 1769  
                          u1151 15C0                            u1135 15A7                            u1071 1459  
                          u1311 1268                            u1240 1779                            u1160 160F  
                          u1080 14AF                            u1320 128D                            u1400 0D89  
                          u1241 1778                            u1225 1718                            u1161 160E  
                          u1081 14AE                            u1065 144F                            u1321 128C  
                          u1305 1254                            u1401 0D88                            u1170 161E  
                          u1090 14B6                            u1250 1176                            u1410 0DA6  
                          u1171 161D                            u1155 15BD                            u1091 14B5  
                          u1251 1175                            u1411 0DA5                            u1180 16AB  
                          u1260 1044                            u1500 0083                            u1420 0DAC  
                          u1245 1775                            u1181 16AA                            u1085 14AB  
                          u1325 1289                            u1261 1043                            u1501 0082  
                          u1421 0DAB                            u1405 0D85                            u1190 16B0  
                          u1270 0B83                            u1510 0E3A                            u1430 0DFB  
                          u1191 16AF                            u1175 161A                            u1255 1172  
                          u1511 0E39                            u1431 0DFA                            u1280 0BA2  
                          u1600 0F6B                            u1520 0E61                            u1440 11E5  
                          u1601 0F6A                            u1521 0E60                            u1505 007F  
                          u1441 11E4                            u1290 1234                            u1610 0F9C  
                          u1530 0E70                            u1450 11F2                            u1370 0D41  
                          u1291 1233                            u1611 0F9B                            u1531 0E6F  
                          u1451 11EE                            u1435 0DF7                            u1371 0D40  
                          u1620 0FD8                            u1540 0E84                            u1380 0D59  
                          u1621 0FD7                            u1541 0E83                            u1381 0D58  
                          u1630 0FEF                            u1550 0EB5                            u1470 1213  
                          u1390 0D72                            u1631 0FEE                            u1551 0EB4  
                          u1535 0E6C                            u1471 1212                            u1391 0D71  
                          u1375 0D3D                            u1560 0EC4                            u1480 1217  
                          u1464 11F5                            u1561 0EC3                            u1545 0E80  
                          u1481 1216                            u1385 0D55                            u1570 0ED8  
                          u1490 0048                            u1635 0FEB                            u1571 0ED7  
                          u1491 0047                            u1395 0D6E                            u1580 0F09  
                          u1740 0C56                            u1581 0F08                            u1565 0EC0  
                          u1741 0C55                            u1590 0F3A                            u1750 0C63  
                          u1591 0F39                            u1575 0ED4                            u1751 0C62  
                          u1760 0C93                            u1817 005B                            u1761 0C92  
                          u1827 0087                            u1837 00A4                            u1765 0C8F  
                          u1847 00BF                            u1857 125C                            u1867 1291  
                          i1l50 0D31                            _TMR1 000E                            _main 0C30  
                          btemp 007E                            start 0010               ___bmul@multiplier 0022  
                         ??_ISR 0079                send_buffer@i_974 0025             spi_init@sdo_tx_edge 0022  
                  ?_load_buffer 0026               _volume_conversion 0D32                           ?_main 00C5  
               ?_interrupt_init 0070                           _ANSEL 0188                           i1l400 0C2F  
                         i1l313 0B78                           i1l260 00F1                           i1l317 11B4  
                         i1l319 11D0                           i1l390 0C29                           i1l394 0BF8  
            ?_volume_conversion 0070                           _PORTA 0005                           _PORTB 0006  
                         _PORTC 0007                           _PORTD 0008                           _PORTE 0009  
                         _TRISA 0085                           _TRISB 0086                           _TRISC 0087  
                         _TRISD 0088                           _TRISE 0089          __end_of_text_to_buffer 1177  
                         _ascii 0892                           _input 00B4             ??_volume_conversion 004C  
                         _state 007D                           pclath 000A                           status 0003  
                         wtemp0 007E           _remote_edge_handeling 0B6A                 __initialization 0013  
                  __end_of_main 0CB0       __end_of_volume_conversion 0E15                    ?_scherm_init 0070  
                        ??_main 006D            text_to_buffer@scherm 004E               send_buffer@scherm 0022  
               ?_text_to_buffer 004C                    ?_send_buffer 0070                          _ADRESH 001E  
                        _ADRESL 009E             load_buffer@position 0029                          _ANSELH 0189  
              __end_of_adc_init 10BD                          i1l2070 0CD7                          i1l2080 0D28  
                        i1l2072 0D02                          i1l2082 0D2E                          i1l2074 0D0B  
                        i1l2066 0CB0                          i1l2330 0B6A                          i1l2076 0D12  
                        i1l2068 0CB8                          i1l2332 0B71                          i1l2340 1198  
                        i1l2078 0D20                          i1l2334 0B77                          i1l2350 11C9  
                        i1l2342 119E                          i1l2430 00D2                          i1l2352 11CC  
                        i1l2344 11BC                          i1l2336 1177                          i1l2360 0BBD  
                        i1l2440 00EC                          i1l2432 00D8                          i1l2354 11CD  
                        i1l2338 117F                          i1l2346 11BF                          i1l2370 0BE3  
                        i1l2362 0BCA                          i1l2434 00DD                          i1l2426 00C9  
                        i1l2348 11C1                          i1l2356 11CE                          i1l2380 0C03  
                        i1l2372 0BE7                          i1l2364 0BD0                          i1l2436 00E3  
                        i1l2428 00CD                          i1l2390 0C24                          i1l2382 0C0B  
                        i1l2374 0BED                          i1l2366 0BD5                          i1l2358 0BB8  
                        i1l2438 00E8                          i1l2392 0C2E                          i1l2384 0C12  
                        i1l2376 0BF4                          i1l2368 0BDD                          i1l2386 0C16  
                        i1l2378 0BFD                          i1l2388 0C1D                          u133_20 0D02  
                        u133_21 0D01                          u133_25 0CFE                          u134_20 0D0B  
                        u134_21 0D0A                          u135_20 0D20                          u135_21 0D1F  
                        u135_25 0D1C                          u136_20 0D28                          u136_21 0D27  
                        u170_20 0BED                          u170_21 0BEC                          u171_20 0C03  
                        u171_21 0C02                          u164_20 117F                          u172_20 0C12  
                        u180_20 00EC                          u164_21 117E                          u172_21 0C11  
                        u180_21 00EB                          u165_20 118D                          u173_20 0C1D  
                        u173_21 0C1C                          u165_25 1188                          u166_20 119E  
                        u166_21 119D                          u167_20 0BD0                          u167_21 0BCF  
                        u168_20 0BD5                          u168_21 0BD4                          u169_20 0BE3  
                        u177_20 00CD                          u169_21 0BE2                          u177_21 00CC  
                        u178_20 00D8                          u178_21 00D7                          u179_20 00E3  
                        u179_21 00E2                          u187_27 0BBA                          _SSPBUF 0013  
               _rotaryHandeling 0BB8                 load_buffer@lang 0026                          ___bmul 108F  
              __end_of_aurebech 0392                          ___wmul 1116                          _arabic 0612  
                        _hebrew 0392                __end_of_init_osc 1045                __end_of_pic_init 10F5  
                        _volume 006D        __end_of_input_conversion 1116                          saved_w 007E  
              __end_of_spi_init 122C                   _key_detection 0E15         __end_of__initialization 0037  
               text_to_buffer@i 004F          ?_remote_edge_handeling 0070            load_buffer@character 0028  
           ___bmul@multiplicand 0020                  __pcstackCOMMON 0070                    __pidataBANK1 10BD  
                 __end_of_ascii 0B12        scherm_init@controlWord_0 0026        scherm_init@controlWord_1 0025  
                _OPTION_REGbits 0081                   ?_scherm_setup 0070         __end_of_rotaryHandeling 0C30  
                    __pbssBANK0 006D                      __pbssBANK1 00B9                      __pbssBANK3 0190  
                ?_key_detection 0070         volume_conversion@buffer 004C           text_to_buffer@newtext 004C  
                    __pmaintext 0C30                         ?___bmul 0020                         ?___wmul 0020  
              ??_interrupt_init 0020                      __pintentry 0004               __end_of_adcBounds 0B66  
                     ?_adc_init 0070                      _final_code 00B9          key_detection@temp_code 0069  
                ??_scherm_setup 0051                      __stringtab 0100                load_buffer@i_981 0036  
              load_buffer@i_982 0044                load_buffer@i_990 0042                load_buffer@i_991 004A  
              load_buffer@i_983 0038                load_buffer@i_984 003A                load_buffer@i_985 0046  
              load_buffer@i_986 003C                load_buffer@i_987 003E                load_buffer@i_988 0048  
              load_buffer@i_989 0040                       ?_init_osc 0070                       ?_pic_init 0070  
                  load_buffer@i 0034                       ?_spi_init 0020                  _remote_counter 00BF  
                     _ANSELbits 0188                      ??_adc_init 0020                         __ptext1 0D32  
                       __ptext2 11D1                         __ptext3 003B                         __ptext4 10D6  
                       __ptext5 102A                         __ptext6 1065                         __ptext7 1045  
                       __ptext8 1079                         __ptext9 103A                ??_text_to_buffer 004D  
                     _T1CONbits 0010               ??_screen_transmit 0020        ??_remote_timer_handeling 0070  
             __end_of_inputLeds 0B6A                 ??_key_detection 0065          adcHandeling@lowerValue 0075  
                       clrloop0 1033            end_of_initialization 0037                ?_rotaryHandeling 0070  
             __end_of_pins_init 1052                      ??_init_osc 0020                      ??_pic_init 0020  
                    ??_spi_init 0023                    __pstringtext 0100                      _timer_init 102A  
                     _PORTBbits 0006                       _PORTCbits 0007                       _PORTDbits 0008  
             ?_input_conversion 0070                       _TRISBbits 0086                       _TRISCbits 0087  
                     _TRISEbits 0089              ??_input_conversion 004C                      _ports_init 1065  
        adcHandeling@upperValue 0073                   ?_adcHandeling 0070         ??_remote_edge_handeling 0070  
            spi_init@sdi_rx_smp 0020            __end_of_scherm_setup 0BB8                  __end_of___bmul 10A6  
                __end_of___wmul 113D                  __end_of_arabic 0892                  __end_of_hebrew 0612  
           start_initialization 0013                     __end_of_ISR 00FC                  ??_adcHandeling 0070  
                      ??___bmul 0021                        ??___wmul 0024             scherm_setup@screen1 005D  
           scherm_setup@screen2 0055                      init_fetch0 1052                     __pdataBANK1 00A0  
                 ??_load_buffer 002C                     ?_timer_init 0070                       _adcBounds 0B12  
                   __pbssCOMMON 007D                       ___latbits 0002                   __pcstackBANK0 0020  
                 __pcstackBANK1 00C5           scherm_init@helderheid 0024                     ?_ports_init 0070  
            key_detection@check 0065          _remote_timer_handeling 1177          volume_conversion@value 0050  
               _screen_transmit 1024        input_conversion@inputNew 004C                    scherm_init@i 0022  
                 ??_scherm_init 0021             __end_of_load_buffer 1800                   ??_send_buffer 0021  
                     _miniCount 00B2                       _inputLeds 0B66                    _inputChanged 00B0  
             spi_init@clock_pol 0021               interrupt_function 0004                  ___wmul@product 0024  
                      _IOCBbits 0096                       clear_ram0 1032                        _PIE1bits 008C  
                     _pins_init 1045                        _PIR1bits 000C            __end_of_adcHandeling 0D32  
                    _ADCON0bits 001F                     __stringbase 0112                      _ADCON1bits 009F  
             ___wmul@multiplier 0020                    send_buffer@i 0023             __end_of_scherm_init 00C9  
                     _volumeOud 00B6                    _scherm_setup 0B79           __end_of_key_detection 1000  
       __end_of_screen_transmit 102A   __end_of_remote_edge_handeling 0B79             __end_of_send_buffer 1298  
             load_buffer@scherm 002B                      ?_pins_init 0070            adcHandeling@adcValue 0077  
                   _load_buffer 1298              __end_of__stringtab 0112                        _adc_init 10A6  
                      __ptext10 10A6                        __ptext11 0E15                        __ptext20 00C9  
                      __ptext12 122C                        __ptext21 0BB8                        __ptext13 1024  
                      __ptext22 1177                        __ptext14 0B79                        __ptext23 0B6A  
                      __ptext15 113D                        __ptext24 0CB0                        __ptext16 10F5  
                      __ptext17 1298                        __ptext18 1116                        __ptext19 108F  
              screen_transmit@c 0020                        _aurebech 0112                        _init_osc 103A  
                      _pic_init 10D6                        _oldstate 006F                        _motoraan 00BD  
                      _timeraan 00C1                        _spi_init 11D1               scherm_setup@F1477 00A8  
             scherm_setup@F1479 00A0                        main@argc 00C5                        main@argv 00C7  
                  ??_timer_init 0020                     _scherm_init 003B                      _INTCONbits 000B  
                      init_ram0 1056                    ??_ports_init 0020                     _send_buffer 122C  
                      intlevel1 0000         ?_remote_timer_handeling 0070                ?_screen_transmit 0070  
            __end_of_timer_init 1032                       stringcode 010A                     ??_pins_init 0020  
                    _OSCCONbits 008F              __end_of_ports_init 1079               ??_rotaryHandeling 0070  
                  _nummerOffset 00B8                     _num_of_lang 00C3                  _interrupt_init 1079  
                   _PSTRCONbits 009D                        stringtab 0100  __end_of_remote_timer_handeling 11D1  
                _scherm1_buffer 01B8              volume_conversion@i 004E                  _scherm2_buffer 0190  
                  _adcHandeling 0CB0                _input_conversion 10F5                      _SSPCONbits 0014  
