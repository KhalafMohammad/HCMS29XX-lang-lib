

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Mar 27 12:42:42 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Generated 22/03/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F887 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80     0000                     	;# 
    81     0001                     	;# 
    82     0002                     	;# 
    83     0003                     	;# 
    84     0004                     	;# 
    85     0005                     	;# 
    86     0006                     	;# 
    87     0007                     	;# 
    88     0008                     	;# 
    89     0009                     	;# 
    90     000A                     	;# 
    91     000B                     	;# 
    92     000C                     	;# 
    93     000D                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0013                     	;# 
   101     0014                     	;# 
   102     0015                     	;# 
   103     0015                     	;# 
   104     0016                     	;# 
   105     0017                     	;# 
   106     0018                     	;# 
   107     0019                     	;# 
   108     001A                     	;# 
   109     001B                     	;# 
   110     001B                     	;# 
   111     001C                     	;# 
   112     001D                     	;# 
   113     001E                     	;# 
   114     001F                     	;# 
   115     0081                     	;# 
   116     0085                     	;# 
   117     0086                     	;# 
   118     0087                     	;# 
   119     0088                     	;# 
   120     0089                     	;# 
   121     008C                     	;# 
   122     008D                     	;# 
   123     008E                     	;# 
   124     008F                     	;# 
   125     0090                     	;# 
   126     0091                     	;# 
   127     0092                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0094                     	;# 
   132     0095                     	;# 
   133     0096                     	;# 
   134     0097                     	;# 
   135     0098                     	;# 
   136     0099                     	;# 
   137     009A                     	;# 
   138     009B                     	;# 
   139     009C                     	;# 
   140     009D                     	;# 
   141     009E                     	;# 
   142     009F                     	;# 
   143     0105                     	;# 
   144     0107                     	;# 
   145     0108                     	;# 
   146     0109                     	;# 
   147     010C                     	;# 
   148     010C                     	;# 
   149     010D                     	;# 
   150     010E                     	;# 
   151     010F                     	;# 
   152     0185                     	;# 
   153     0187                     	;# 
   154     0188                     	;# 
   155     0189                     	;# 
   156     018C                     	;# 
   157     018D                     	;# 
   158     0000                     	;# 
   159     0001                     	;# 
   160     0002                     	;# 
   161     0003                     	;# 
   162     0004                     	;# 
   163     0005                     	;# 
   164     0006                     	;# 
   165     0007                     	;# 
   166     0008                     	;# 
   167     0009                     	;# 
   168     000A                     	;# 
   169     000B                     	;# 
   170     000C                     	;# 
   171     000D                     	;# 
   172     000E                     	;# 
   173     000E                     	;# 
   174     000F                     	;# 
   175     0010                     	;# 
   176     0011                     	;# 
   177     0012                     	;# 
   178     0013                     	;# 
   179     0014                     	;# 
   180     0015                     	;# 
   181     0015                     	;# 
   182     0016                     	;# 
   183     0017                     	;# 
   184     0018                     	;# 
   185     0019                     	;# 
   186     001A                     	;# 
   187     001B                     	;# 
   188     001B                     	;# 
   189     001C                     	;# 
   190     001D                     	;# 
   191     001E                     	;# 
   192     001F                     	;# 
   193     0081                     	;# 
   194     0085                     	;# 
   195     0086                     	;# 
   196     0087                     	;# 
   197     0088                     	;# 
   198     0089                     	;# 
   199     008C                     	;# 
   200     008D                     	;# 
   201     008E                     	;# 
   202     008F                     	;# 
   203     0090                     	;# 
   204     0091                     	;# 
   205     0092                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0094                     	;# 
   210     0095                     	;# 
   211     0096                     	;# 
   212     0097                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009A                     	;# 
   216     009B                     	;# 
   217     009C                     	;# 
   218     009D                     	;# 
   219     009E                     	;# 
   220     009F                     	;# 
   221     0105                     	;# 
   222     0107                     	;# 
   223     0108                     	;# 
   224     0109                     	;# 
   225     010C                     	;# 
   226     010C                     	;# 
   227     010D                     	;# 
   228     010E                     	;# 
   229     010F                     	;# 
   230     0185                     	;# 
   231     0187                     	;# 
   232     0188                     	;# 
   233     0189                     	;# 
   234     018C                     	;# 
   235     018D                     	;# 
   236     0000                     	;# 
   237     0001                     	;# 
   238     0002                     	;# 
   239     0003                     	;# 
   240     0004                     	;# 
   241     0005                     	;# 
   242     0006                     	;# 
   243     0007                     	;# 
   244     0008                     	;# 
   245     0009                     	;# 
   246     000A                     	;# 
   247     000B                     	;# 
   248     000C                     	;# 
   249     000D                     	;# 
   250     000E                     	;# 
   251     000E                     	;# 
   252     000F                     	;# 
   253     0010                     	;# 
   254     0011                     	;# 
   255     0012                     	;# 
   256     0013                     	;# 
   257     0014                     	;# 
   258     0015                     	;# 
   259     0015                     	;# 
   260     0016                     	;# 
   261     0017                     	;# 
   262     0018                     	;# 
   263     0019                     	;# 
   264     001A                     	;# 
   265     001B                     	;# 
   266     001B                     	;# 
   267     001C                     	;# 
   268     001D                     	;# 
   269     001E                     	;# 
   270     001F                     	;# 
   271     0081                     	;# 
   272     0085                     	;# 
   273     0086                     	;# 
   274     0087                     	;# 
   275     0088                     	;# 
   276     0089                     	;# 
   277     008C                     	;# 
   278     008D                     	;# 
   279     008E                     	;# 
   280     008F                     	;# 
   281     0090                     	;# 
   282     0091                     	;# 
   283     0092                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0094                     	;# 
   288     0095                     	;# 
   289     0096                     	;# 
   290     0097                     	;# 
   291     0098                     	;# 
   292     0099                     	;# 
   293     009A                     	;# 
   294     009B                     	;# 
   295     009C                     	;# 
   296     009D                     	;# 
   297     009E                     	;# 
   298     009F                     	;# 
   299     0105                     	;# 
   300     0107                     	;# 
   301     0108                     	;# 
   302     0109                     	;# 
   303     010C                     	;# 
   304     010C                     	;# 
   305     010D                     	;# 
   306     010E                     	;# 
   307     010F                     	;# 
   308     0185                     	;# 
   309     0187                     	;# 
   310     0188                     	;# 
   311     0189                     	;# 
   312     018C                     	;# 
   313     018D                     	;# 
   314     0000                     	;# 
   315     0001                     	;# 
   316     0002                     	;# 
   317     0003                     	;# 
   318     0004                     	;# 
   319     0005                     	;# 
   320     0006                     	;# 
   321     0007                     	;# 
   322     0008                     	;# 
   323     0009                     	;# 
   324     000A                     	;# 
   325     000B                     	;# 
   326     000C                     	;# 
   327     000D                     	;# 
   328     000E                     	;# 
   329     000E                     	;# 
   330     000F                     	;# 
   331     0010                     	;# 
   332     0011                     	;# 
   333     0012                     	;# 
   334     0013                     	;# 
   335     0014                     	;# 
   336     0015                     	;# 
   337     0015                     	;# 
   338     0016                     	;# 
   339     0017                     	;# 
   340     0018                     	;# 
   341     0019                     	;# 
   342     001A                     	;# 
   343     001B                     	;# 
   344     001B                     	;# 
   345     001C                     	;# 
   346     001D                     	;# 
   347     001E                     	;# 
   348     001F                     	;# 
   349     0081                     	;# 
   350     0085                     	;# 
   351     0086                     	;# 
   352     0087                     	;# 
   353     0088                     	;# 
   354     0089                     	;# 
   355     008C                     	;# 
   356     008D                     	;# 
   357     008E                     	;# 
   358     008F                     	;# 
   359     0090                     	;# 
   360     0091                     	;# 
   361     0092                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0094                     	;# 
   366     0095                     	;# 
   367     0096                     	;# 
   368     0097                     	;# 
   369     0098                     	;# 
   370     0099                     	;# 
   371     009A                     	;# 
   372     009B                     	;# 
   373     009C                     	;# 
   374     009D                     	;# 
   375     009E                     	;# 
   376     009F                     	;# 
   377     0105                     	;# 
   378     0107                     	;# 
   379     0108                     	;# 
   380     0109                     	;# 
   381     010C                     	;# 
   382     010C                     	;# 
   383     010D                     	;# 
   384     010E                     	;# 
   385     010F                     	;# 
   386     0185                     	;# 
   387     0187                     	;# 
   388     0188                     	;# 
   389     0189                     	;# 
   390     018C                     	;# 
   391     018D                     	;# 
   392     0000                     	;# 
   393     0001                     	;# 
   394     0002                     	;# 
   395     0003                     	;# 
   396     0004                     	;# 
   397     0005                     	;# 
   398     0006                     	;# 
   399     0007                     	;# 
   400     0008                     	;# 
   401     0009                     	;# 
   402     000A                     	;# 
   403     000B                     	;# 
   404     000C                     	;# 
   405     000D                     	;# 
   406     000E                     	;# 
   407     000E                     	;# 
   408     000F                     	;# 
   409     0010                     	;# 
   410     0011                     	;# 
   411     0012                     	;# 
   412     0013                     	;# 
   413     0014                     	;# 
   414     0015                     	;# 
   415     0015                     	;# 
   416     0016                     	;# 
   417     0017                     	;# 
   418     0018                     	;# 
   419     0019                     	;# 
   420     001A                     	;# 
   421     001B                     	;# 
   422     001B                     	;# 
   423     001C                     	;# 
   424     001D                     	;# 
   425     001E                     	;# 
   426     001F                     	;# 
   427     0081                     	;# 
   428     0085                     	;# 
   429     0086                     	;# 
   430     0087                     	;# 
   431     0088                     	;# 
   432     0089                     	;# 
   433     008C                     	;# 
   434     008D                     	;# 
   435     008E                     	;# 
   436     008F                     	;# 
   437     0090                     	;# 
   438     0091                     	;# 
   439     0092                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0094                     	;# 
   444     0095                     	;# 
   445     0096                     	;# 
   446     0097                     	;# 
   447     0098                     	;# 
   448     0099                     	;# 
   449     009A                     	;# 
   450     009B                     	;# 
   451     009C                     	;# 
   452     009D                     	;# 
   453     009E                     	;# 
   454     009F                     	;# 
   455     0105                     	;# 
   456     0107                     	;# 
   457     0108                     	;# 
   458     0109                     	;# 
   459     010C                     	;# 
   460     010C                     	;# 
   461     010D                     	;# 
   462     010E                     	;# 
   463     010F                     	;# 
   464     0185                     	;# 
   465     0187                     	;# 
   466     0188                     	;# 
   467     0189                     	;# 
   468     018C                     	;# 
   469     018D                     	;# 
   470     0000                     	;# 
   471     0001                     	;# 
   472     0002                     	;# 
   473     0003                     	;# 
   474     0004                     	;# 
   475     0005                     	;# 
   476     0006                     	;# 
   477     0007                     	;# 
   478     0008                     	;# 
   479     0009                     	;# 
   480     000A                     	;# 
   481     000B                     	;# 
   482     000C                     	;# 
   483     000D                     	;# 
   484     000E                     	;# 
   485     000E                     	;# 
   486     000F                     	;# 
   487     0010                     	;# 
   488     0011                     	;# 
   489     0012                     	;# 
   490     0013                     	;# 
   491     0014                     	;# 
   492     0015                     	;# 
   493     0015                     	;# 
   494     0016                     	;# 
   495     0017                     	;# 
   496     0018                     	;# 
   497     0019                     	;# 
   498     001A                     	;# 
   499     001B                     	;# 
   500     001B                     	;# 
   501     001C                     	;# 
   502     001D                     	;# 
   503     001E                     	;# 
   504     001F                     	;# 
   505     0081                     	;# 
   506     0085                     	;# 
   507     0086                     	;# 
   508     0087                     	;# 
   509     0088                     	;# 
   510     0089                     	;# 
   511     008C                     	;# 
   512     008D                     	;# 
   513     008E                     	;# 
   514     008F                     	;# 
   515     0090                     	;# 
   516     0091                     	;# 
   517     0092                     	;# 
   518     0093                     	;# 
   519     0093                     	;# 
   520     0093                     	;# 
   521     0094                     	;# 
   522     0095                     	;# 
   523     0096                     	;# 
   524     0097                     	;# 
   525     0098                     	;# 
   526     0099                     	;# 
   527     009A                     	;# 
   528     009B                     	;# 
   529     009C                     	;# 
   530     009D                     	;# 
   531     009E                     	;# 
   532     009F                     	;# 
   533     0105                     	;# 
   534     0107                     	;# 
   535     0108                     	;# 
   536     0109                     	;# 
   537     010C                     	;# 
   538     010C                     	;# 
   539     010D                     	;# 
   540     010E                     	;# 
   541     010F                     	;# 
   542     0185                     	;# 
   543     0187                     	;# 
   544     0188                     	;# 
   545     0189                     	;# 
   546     018C                     	;# 
   547     018D                     	;# 
   548     0000                     	;# 
   549     0001                     	;# 
   550     0002                     	;# 
   551     0003                     	;# 
   552     0004                     	;# 
   553     0005                     	;# 
   554     0006                     	;# 
   555     0007                     	;# 
   556     0008                     	;# 
   557     0009                     	;# 
   558     000A                     	;# 
   559     000B                     	;# 
   560     000C                     	;# 
   561     000D                     	;# 
   562     000E                     	;# 
   563     000E                     	;# 
   564     000F                     	;# 
   565     0010                     	;# 
   566     0011                     	;# 
   567     0012                     	;# 
   568     0013                     	;# 
   569     0014                     	;# 
   570     0015                     	;# 
   571     0015                     	;# 
   572     0016                     	;# 
   573     0017                     	;# 
   574     0018                     	;# 
   575     0019                     	;# 
   576     001A                     	;# 
   577     001B                     	;# 
   578     001B                     	;# 
   579     001C                     	;# 
   580     001D                     	;# 
   581     001E                     	;# 
   582     001F                     	;# 
   583     0081                     	;# 
   584     0085                     	;# 
   585     0086                     	;# 
   586     0087                     	;# 
   587     0088                     	;# 
   588     0089                     	;# 
   589     008C                     	;# 
   590     008D                     	;# 
   591     008E                     	;# 
   592     008F                     	;# 
   593     0090                     	;# 
   594     0091                     	;# 
   595     0092                     	;# 
   596     0093                     	;# 
   597     0093                     	;# 
   598     0093                     	;# 
   599     0094                     	;# 
   600     0095                     	;# 
   601     0096                     	;# 
   602     0097                     	;# 
   603     0098                     	;# 
   604     0099                     	;# 
   605     009A                     	;# 
   606     009B                     	;# 
   607     009C                     	;# 
   608     009D                     	;# 
   609     009E                     	;# 
   610     009F                     	;# 
   611     0105                     	;# 
   612     0107                     	;# 
   613     0108                     	;# 
   614     0109                     	;# 
   615     010C                     	;# 
   616     010C                     	;# 
   617     010D                     	;# 
   618     010E                     	;# 
   619     010F                     	;# 
   620     0185                     	;# 
   621     0187                     	;# 
   622     0188                     	;# 
   623     0189                     	;# 
   624     018C                     	;# 
   625     018D                     	;# 
   626     0000                     	;# 
   627     0001                     	;# 
   628     0002                     	;# 
   629     0003                     	;# 
   630     0004                     	;# 
   631     0005                     	;# 
   632     0006                     	;# 
   633     0007                     	;# 
   634     0008                     	;# 
   635     0009                     	;# 
   636     000A                     	;# 
   637     000B                     	;# 
   638     000C                     	;# 
   639     000D                     	;# 
   640     000E                     	;# 
   641     000E                     	;# 
   642     000F                     	;# 
   643     0010                     	;# 
   644     0011                     	;# 
   645     0012                     	;# 
   646     0013                     	;# 
   647     0014                     	;# 
   648     0015                     	;# 
   649     0015                     	;# 
   650     0016                     	;# 
   651     0017                     	;# 
   652     0018                     	;# 
   653     0019                     	;# 
   654     001A                     	;# 
   655     001B                     	;# 
   656     001B                     	;# 
   657     001C                     	;# 
   658     001D                     	;# 
   659     001E                     	;# 
   660     001F                     	;# 
   661     0081                     	;# 
   662     0085                     	;# 
   663     0086                     	;# 
   664     0087                     	;# 
   665     0088                     	;# 
   666     0089                     	;# 
   667     008C                     	;# 
   668     008D                     	;# 
   669     008E                     	;# 
   670     008F                     	;# 
   671     0090                     	;# 
   672     0091                     	;# 
   673     0092                     	;# 
   674     0093                     	;# 
   675     0093                     	;# 
   676     0093                     	;# 
   677     0094                     	;# 
   678     0095                     	;# 
   679     0096                     	;# 
   680     0097                     	;# 
   681     0098                     	;# 
   682     0099                     	;# 
   683     009A                     	;# 
   684     009B                     	;# 
   685     009C                     	;# 
   686     009D                     	;# 
   687     009E                     	;# 
   688     009F                     	;# 
   689     0105                     	;# 
   690     0107                     	;# 
   691     0108                     	;# 
   692     0109                     	;# 
   693     010C                     	;# 
   694     010C                     	;# 
   695     010D                     	;# 
   696     010E                     	;# 
   697     010F                     	;# 
   698     0185                     	;# 
   699     0187                     	;# 
   700     0188                     	;# 
   701     0189                     	;# 
   702     018C                     	;# 
   703     018D                     	;# 
   704                           
   705                           	psect	idataBANK1
   706     10F1                     __pidataBANK1:
   707                           
   708                           ;initializer for scherm_setup@F1472
   709     10F1  3456               	retlw	86
   710     10F2  344F               	retlw	79
   711     10F3  344C               	retlw	76
   712     10F4  343A               	retlw	58
   713     10F5  3430               	retlw	48
   714     10F6  3420               	retlw	32
   715     10F7  3420               	retlw	32
   716     10F8  3420               	retlw	32
   717                           
   718                           ;initializer for scherm_setup@F1470
   719     10F9  3449               	retlw	73
   720     10FA  344E               	retlw	78
   721     10FB  3450               	retlw	80
   722     10FC  3455               	retlw	85
   723     10FD  3454               	retlw	84
   724     10FE  343A               	retlw	58
   725     10FF  3430               	retlw	48
   726     1100  3420               	retlw	32
   727                           
   728                           ;initializer for scherm_setup_lang@F1477
   729     1101  3456               	retlw	86
   730     1102  344F               	retlw	79
   731     1103  344C               	retlw	76
   732     1104  343A               	retlw	58
   733     1105  3400               	retlw	0
   734     1106  3400               	retlw	0
   735                           
   736                           ;initializer for scherm_setup_lang@F1475
   737     1107  3449               	retlw	73
   738     1108  344E               	retlw	78
   739     1109  3450               	retlw	80
   740     110A  3455               	retlw	85
   741     110B  3454               	retlw	84
   742     110C  343A               	retlw	58
   743                           
   744                           ;initializer for _inputChanged
   745     110D  3401               	retlw	1
   746     110E  3400               	retlw	0
   747                           
   748                           ;initializer for _miniCount
   749     110F  3403               	retlw	3
   750     1110  3400               	retlw	0
   751                           
   752                           ;initializer for _input
   753     1111  3401               	retlw	1
   754     1112  3400               	retlw	0
   755                           
   756                           ;initializer for _volumeOud
   757     1113  3432               	retlw	50
   758     1114  3400               	retlw	0
   759                           
   760                           ;initializer for _nummerOffset
   761     1115  3430               	retlw	48
   762                           
   763                           	psect	stringtext
   764     0100                     __pstringtext:
   765     0100                     stringtab:
   766     0100                     __stringtab:
   767                           
   768                           ;	String table - string pointers are 2 bytes each
   769     0100  1BFF               	btfsc	btemp+1,7
   770     0101  290A               	ljmp	stringcode
   771     0102  1383               	bcf	3,7
   772     0103  187F               	btfsc	btemp+1,0
   773     0104  1783               	bsf	3,7
   774     0105  0800               	movf	0,w
   775     0106  0A84               	incf	4,f
   776     0107  1903               	skipnz
   777     0108  0AFF               	incf	btemp+1,f
   778     0109  0008               	return
   779     010A                     stringcode:
   780     010A  087F               	movf	btemp+1,w
   781     010B  397F               	andlw	127
   782     010C  008A               	movwf	10
   783     010D  0804               	movf	4,w
   784     010E  0A84               	incf	4,f
   785     010F  1903               	skipnz
   786     0110  0AFF               	incf	btemp+1,f
   787     0111  0082               	movwf	2
   788     0112                     __stringbase:
   789     0112                     __end_of__stringtab:
   790     0112                     _aurebech:
   791     0112  3408               	retlw	8
   792     0113  341C               	retlw	28
   793     0114  343E               	retlw	62
   794     0115  347F               	retlw	127
   795     0116  3400               	retlw	0
   796     0117  3430               	retlw	48
   797     0118  3435               	retlw	53
   798     0119  3448               	retlw	72
   799     011A  3440               	retlw	64
   800     011B  3430               	retlw	48
   801     011C  3445               	retlw	69
   802     011D  3429               	retlw	41
   803     011E  3411               	retlw	17
   804     011F  3421               	retlw	33
   805     0120  347D               	retlw	125
   806     0121  347D               	retlw	125
   807     0122  3409               	retlw	9
   808     0123  3405               	retlw	5
   809     0124  3405               	retlw	5
   810     0125  3479               	retlw	121
   811     0126  347D               	retlw	125
   812     0127  3409               	retlw	9
   813     0128  3411               	retlw	17
   814     0129  3421               	retlw	33
   815     012A  347D               	retlw	125
   816     012B  3438               	retlw	56
   817     012C  3444               	retlw	68
   818     012D  3444               	retlw	68
   819     012E  3438               	retlw	56
   820     012F  3444               	retlw	68
   821     0130  347E               	retlw	126
   822     0131  3401               	retlw	1
   823     0132  3429               	retlw	41
   824     0133  342E               	retlw	46
   825     0134  3410               	retlw	16
   826     0135  3430               	retlw	48
   827     0136  344A               	retlw	74
   828     0137  344D               	retlw	77
   829     0138  3449               	retlw	73
   830     0139  3430               	retlw	48
   831     013A  3460               	retlw	96
   832     013B  3450               	retlw	80
   833     013C  3448               	retlw	72
   834     013D  3450               	retlw	80
   835     013E  3460               	retlw	96
   836     013F  341E               	retlw	30
   837     0140  3404               	retlw	4
   838     0141  3404               	retlw	4
   839     0142  3438               	retlw	56
   840     0143  3440               	retlw	64
   841     0144  343E               	retlw	62
   842     0145  3449               	retlw	73
   843     0146  3449               	retlw	73
   844     0147  3449               	retlw	73
   845     0148  343E               	retlw	62
   846     0149  3462               	retlw	98
   847     014A  3414               	retlw	20
   848     014B  3408               	retlw	8
   849     014C  3410               	retlw	16
   850     014D  3460               	retlw	96
   851     014E  3440               	retlw	64
   852     014F  343C               	retlw	60
   853     0150  3420               	retlw	32
   854     0151  3420               	retlw	32
   855     0152  341C               	retlw	28
   856     0153  3408               	retlw	8
   857     0154  347C               	retlw	124
   858     0155  3404               	retlw	4
   859     0156  347C               	retlw	124
   860     0157  3402               	retlw	2
   861     0158  3438               	retlw	56
   862     0159  3444               	retlw	68
   863     015A  3444               	retlw	68
   864     015B  343C               	retlw	60
   865     015C  3404               	retlw	4
   866     015D  3441               	retlw	65
   867     015E  3463               	retlw	99
   868     015F  3455               	retlw	85
   869     0160  3449               	retlw	73
   870     0161  3441               	retlw	65
   871     0162  3410               	retlw	16
   872     0163  3408               	retlw	8
   873     0164  3478               	retlw	120
   874     0165  3408               	retlw	8
   875     0166  3404               	retlw	4
   876     0167  3418               	retlw	24
   877     0168  3424               	retlw	36
   878     0169  347E               	retlw	126
   879     016A  3424               	retlw	36
   880     016B  3418               	retlw	24
   881     016C  345E               	retlw	94
   882     016D  3461               	retlw	97
   883     016E  3401               	retlw	1
   884     016F  3461               	retlw	97
   885     0170  345E               	retlw	94
   886     0171  3478               	retlw	120
   887     0172  3414               	retlw	20
   888     0173  3415               	retlw	21
   889     0174  3414               	retlw	20
   890     0175  3478               	retlw	120
   891     0176  3438               	retlw	56
   892     0177  3444               	retlw	68
   893     0178  3445               	retlw	69
   894     0179  343C               	retlw	60
   895     017A  3440               	retlw	64
   896     017B  3478               	retlw	120
   897     017C  3415               	retlw	21
   898     017D  3414               	retlw	20
   899     017E  3415               	retlw	21
   900     017F  3478               	retlw	120
   901     0180  3438               	retlw	56
   902     0181  3445               	retlw	69
   903     0182  3444               	retlw	68
   904     0183  343D               	retlw	61
   905     0184  3440               	retlw	64
   906     0185  343C               	retlw	60
   907     0186  3443               	retlw	67
   908     0187  3442               	retlw	66
   909     0188  3443               	retlw	67
   910     0189  343C               	retlw	60
   911     018A  3438               	retlw	56
   912     018B  3445               	retlw	69
   913     018C  3444               	retlw	68
   914     018D  3445               	retlw	69
   915     018E  3438               	retlw	56
   916     018F  343C               	retlw	60
   917     0190  3441               	retlw	65
   918     0191  3440               	retlw	64
   919     0192  3441               	retlw	65
   920     0193  343C               	retlw	60
   921     0194  3438               	retlw	56
   922     0195  3442               	retlw	66
   923     0196  3440               	retlw	64
   924     0197  3442               	retlw	66
   925     0198  3438               	retlw	56
   926     0199  3408               	retlw	8
   927     019A  3408               	retlw	8
   928     019B  342A               	retlw	42
   929     019C  341C               	retlw	28
   930     019D  3408               	retlw	8
   931     019E  3420               	retlw	32
   932     019F  347E               	retlw	126
   933     01A0  3402               	retlw	2
   934     01A1  3402               	retlw	2
   935     01A2  3402               	retlw	2
   936     01A3  3412               	retlw	18
   937     01A4  3419               	retlw	25
   938     01A5  3415               	retlw	21
   939     01A6  3412               	retlw	18
   940     01A7  3400               	retlw	0
   941     01A8  3448               	retlw	72
   942     01A9  347E               	retlw	126
   943     01AA  3449               	retlw	73
   944     01AB  3441               	retlw	65
   945     01AC  3442               	retlw	66
   946     01AD  3401               	retlw	1
   947     01AE  3412               	retlw	18
   948     01AF  347C               	retlw	124
   949     01B0  3412               	retlw	18
   950     01B1  3401               	retlw	1
   951     01B2  3400               	retlw	0
   952     01B3  3400               	retlw	0
   953     01B4  3400               	retlw	0
   954     01B5  3400               	retlw	0
   955     01B6  3400               	retlw	0
   956     01B7  3408               	retlw	8
   957     01B8  3424               	retlw	36
   958     01B9  3412               	retlw	18
   959     01BA  3408               	retlw	8
   960     01BB  3400               	retlw	0
   961     01BC  3400               	retlw	0
   962     01BD  3404               	retlw	4
   963     01BE  3408               	retlw	8
   964     01BF  3404               	retlw	4
   965     01C0  3400               	retlw	0
   966     01C1  3414               	retlw	20
   967     01C2  3434               	retlw	52
   968     01C3  3436               	retlw	54
   969     01C4  3416               	retlw	22
   970     01C5  3414               	retlw	20
   971     01C6  3407               	retlw	7
   972     01C7  3402               	retlw	2
   973     01C8  3467               	retlw	103
   974     01C9  3412               	retlw	18
   975     01CA  340E               	retlw	14
   976     01CB  3406               	retlw	6
   977     01CC  3436               	retlw	54
   978     01CD  3408               	retlw	8
   979     01CE  3436               	retlw	54
   980     01CF  3430               	retlw	48
   981     01D0  3414               	retlw	20
   982     01D1  3422               	retlw	34
   983     01D2  342A               	retlw	42
   984     01D3  342A               	retlw	42
   985     01D4  343E               	retlw	62
   986     01D5  3400               	retlw	0
   987     01D6  341C               	retlw	28
   988     01D7  3404               	retlw	4
   989     01D8  3400               	retlw	0
   990     01D9  3400               	retlw	0
   991     01DA  3400               	retlw	0
   992     01DB  3408               	retlw	8
   993     01DC  343E               	retlw	62
   994     01DD  3400               	retlw	0
   995     01DE  3400               	retlw	0
   996     01DF  3400               	retlw	0
   997     01E0  3400               	retlw	0
   998     01E1  343E               	retlw	62
   999     01E2  3408               	retlw	8
  1000     01E3  3400               	retlw	0
  1001     01E4  341C               	retlw	28
  1002     01E5  3408               	retlw	8
  1003     01E6  343E               	retlw	62
  1004     01E7  3408               	retlw	8
  1005     01E8  341C               	retlw	28
  1006     01E9  343E               	retlw	62
  1007     01EA  342A               	retlw	42
  1008     01EB  3422               	retlw	34
  1009     01EC  343E               	retlw	62
  1010     01ED  3400               	retlw	0
  1011     01EE  3400               	retlw	0
  1012     01EF  3400               	retlw	0
  1013     01F0  340E               	retlw	14
  1014     01F1  3400               	retlw	0
  1015     01F2  3400               	retlw	0
  1016     01F3  3400               	retlw	0
  1017     01F4  3404               	retlw	4
  1018     01F5  3404               	retlw	4
  1019     01F6  3404               	retlw	4
  1020     01F7  3400               	retlw	0
  1021     01F8  3400               	retlw	0
  1022     01F9  3418               	retlw	24
  1023     01FA  3400               	retlw	0
  1024     01FB  3418               	retlw	24
  1025     01FC  3400               	retlw	0
  1026     01FD  3400               	retlw	0
  1027     01FE  3430               	retlw	48
  1028     01FF  3408               	retlw	8
  1029     0200  3406               	retlw	6
  1030     0201  3400               	retlw	0
  1031     0202  343E               	retlw	62
  1032     0203  3422               	retlw	34
  1033     0204  342A               	retlw	42
  1034     0205  3422               	retlw	34
  1035     0206  343E               	retlw	62
  1036     0207  3422               	retlw	34
  1037     0208  3422               	retlw	34
  1038     0209  343E               	retlw	62
  1039     020A  3420               	retlw	32
  1040     020B  3420               	retlw	32
  1041     020C  342A               	retlw	42
  1042     020D  342A               	retlw	42
  1043     020E  342A               	retlw	42
  1044     020F  342A               	retlw	42
  1045     0210  342E               	retlw	46
  1046     0211  342A               	retlw	42
  1047     0212  342A               	retlw	42
  1048     0213  342A               	retlw	42
  1049     0214  3422               	retlw	34
  1050     0215  343E               	retlw	62
  1051     0216  340E               	retlw	14
  1052     0217  3408               	retlw	8
  1053     0218  3408               	retlw	8
  1054     0219  3408               	retlw	8
  1055     021A  343E               	retlw	62
  1056     021B  342E               	retlw	46
  1057     021C  342A               	retlw	42
  1058     021D  342A               	retlw	42
  1059     021E  342A               	retlw	42
  1060     021F  342A               	retlw	42
  1061     0220  343A               	retlw	58
  1062     0221  342A               	retlw	42
  1063     0222  342A               	retlw	42
  1064     0223  342A               	retlw	42
  1065     0224  343A               	retlw	58
  1066     0225  3402               	retlw	2
  1067     0226  3402               	retlw	2
  1068     0227  3402               	retlw	2
  1069     0228  3402               	retlw	2
  1070     0229  343E               	retlw	62
  1071     022A  343E               	retlw	62
  1072     022B  342A               	retlw	42
  1073     022C  342A               	retlw	42
  1074     022D  342A               	retlw	42
  1075     022E  343E               	retlw	62
  1076     022F  342E               	retlw	46
  1077     0230  342A               	retlw	42
  1078     0231  342A               	retlw	42
  1079     0232  342A               	retlw	42
  1080     0233  342E               	retlw	46
  1081     0234  3400               	retlw	0
  1082     0235  3424               	retlw	36
  1083     0236  3424               	retlw	36
  1084     0237  3438               	retlw	56
  1085     0238  3400               	retlw	0
  1086     0239  3400               	retlw	0
  1087     023A  3400               	retlw	0
  1088     023B  347F               	retlw	127
  1089     023C  3400               	retlw	0
  1090     023D  3400               	retlw	0
  1091     023E  3408               	retlw	8
  1092     023F  3408               	retlw	8
  1093     0240  341C               	retlw	28
  1094     0241  3400               	retlw	0
  1095     0242  3400               	retlw	0
  1096     0243  343C               	retlw	60
  1097     0244  3424               	retlw	36
  1098     0245  3400               	retlw	0
  1099     0246  3424               	retlw	36
  1100     0247  343C               	retlw	60
  1101     0248  3400               	retlw	0
  1102     0249  341C               	retlw	28
  1103     024A  3408               	retlw	8
  1104     024B  3408               	retlw	8
  1105     024C  3400               	retlw	0
  1106     024D  3406               	retlw	6
  1107     024E  3402               	retlw	2
  1108     024F  3422               	retlw	34
  1109     0250  341C               	retlw	28
  1110     0251  3400               	retlw	0
  1111     0252  343E               	retlw	62
  1112     0253  3408               	retlw	8
  1113     0254  342A               	retlw	42
  1114     0255  3422               	retlw	34
  1115     0256  343E               	retlw	62
  1116     0257  3436               	retlw	54
  1117     0258  3414               	retlw	20
  1118     0259  3414               	retlw	20
  1119     025A  3414               	retlw	20
  1120     025B  3422               	retlw	34
  1121     025C  3414               	retlw	20
  1122     025D  3422               	retlw	34
  1123     025E  342A               	retlw	42
  1124     025F  3422               	retlw	34
  1125     0260  3414               	retlw	20
  1126     0261  340E               	retlw	14
  1127     0262  3400               	retlw	0
  1128     0263  341C               	retlw	28
  1129     0264  3400               	retlw	0
  1130     0265  3438               	retlw	56
  1131     0266  342A               	retlw	42
  1132     0267  341A               	retlw	26
  1133     0268  340A               	retlw	10
  1134     0269  3406               	retlw	6
  1135     026A  3402               	retlw	2
  1136     026B  341E               	retlw	30
  1137     026C  3420               	retlw	32
  1138     026D  341E               	retlw	30
  1139     026E  3402               	retlw	2
  1140     026F  343E               	retlw	62
  1141     0270  3438               	retlw	56
  1142     0271  3428               	retlw	40
  1143     0272  343E               	retlw	62
  1144     0273  3428               	retlw	40
  1145     0274  3424               	retlw	36
  1146     0275  343E               	retlw	62
  1147     0276  3420               	retlw	32
  1148     0277  3426               	retlw	38
  1149     0278  3412               	retlw	18
  1150     0279  340E               	retlw	14
  1151     027A  3422               	retlw	34
  1152     027B  342A               	retlw	42
  1153     027C  342A               	retlw	42
  1154     027D  342A               	retlw	42
  1155     027E  3422               	retlw	34
  1156     027F  3400               	retlw	0
  1157     0280  3408               	retlw	8
  1158     0281  3404               	retlw	4
  1159     0282  343E               	retlw	62
  1160     0283  3400               	retlw	0
  1161     0284  3428               	retlw	40
  1162     0285  3428               	retlw	40
  1163     0286  3428               	retlw	40
  1164     0287  3424               	retlw	36
  1165     0288  343E               	retlw	62
  1166     0289  3422               	retlw	34
  1167     028A  3422               	retlw	34
  1168     028B  3422               	retlw	34
  1169     028C  3422               	retlw	34
  1170     028D  343E               	retlw	62
  1171     028E  3400               	retlw	0
  1172     028F  3408               	retlw	8
  1173     0290  3410               	retlw	16
  1174     0291  343E               	retlw	62
  1175     0292  3400               	retlw	0
  1176     0293  3438               	retlw	56
  1177     0294  3424               	retlw	36
  1178     0295  3422               	retlw	34
  1179     0296  3422               	retlw	34
  1180     0297  3400               	retlw	0
  1181     0298  341C               	retlw	28
  1182     0299  3422               	retlw	34
  1183     029A  3418               	retlw	24
  1184     029B  3406               	retlw	6
  1185     029C  3438               	retlw	56
  1186     029D  3438               	retlw	56
  1187     029E  3426               	retlw	38
  1188     029F  3422               	retlw	34
  1189     02A0  3426               	retlw	38
  1190     02A1  3438               	retlw	56
  1191     02A2  341C               	retlw	28
  1192     02A3  3422               	retlw	34
  1193     02A4  3426               	retlw	38
  1194     02A5  3420               	retlw	32
  1195     02A6  343E               	retlw	62
  1196     02A7  343E               	retlw	62
  1197     02A8  3422               	retlw	34
  1198     02A9  3422               	retlw	34
  1199     02AA  3402               	retlw	2
  1200     02AB  340E               	retlw	14
  1201     02AC  3422               	retlw	34
  1202     02AD  3412               	retlw	18
  1203     02AE  340A               	retlw	10
  1204     02AF  3406               	retlw	6
  1205     02B0  3402               	retlw	2
  1206     02B1  3412               	retlw	18
  1207     02B2  3424               	retlw	36
  1208     02B3  3408               	retlw	8
  1209     02B4  3410               	retlw	16
  1210     02B5  343E               	retlw	62
  1211     02B6  3408               	retlw	8
  1212     02B7  3412               	retlw	18
  1213     02B8  343E               	retlw	62
  1214     02B9  3410               	retlw	16
  1215     02BA  3408               	retlw	8
  1216     02BB  343E               	retlw	62
  1217     02BC  3420               	retlw	32
  1218     02BD  3428               	retlw	40
  1219     02BE  3424               	retlw	36
  1220     02BF  343E               	retlw	62
  1221     02C0  3402               	retlw	2
  1222     02C1  3404               	retlw	4
  1223     02C2  3438               	retlw	56
  1224     02C3  3404               	retlw	4
  1225     02C4  3402               	retlw	2
  1226     02C5  343E               	retlw	62
  1227     02C6  3422               	retlw	34
  1228     02C7  3422               	retlw	34
  1229     02C8  3422               	retlw	34
  1230     02C9  343E               	retlw	62
  1231     02CA  3430               	retlw	48
  1232     02CB  342C               	retlw	44
  1233     02CC  3422               	retlw	34
  1234     02CD  342C               	retlw	44
  1235     02CE  3430               	retlw	48
  1236     02CF  340E               	retlw	14
  1237     02D0  3412               	retlw	18
  1238     02D1  3426               	retlw	38
  1239     02D2  3410               	retlw	16
  1240     02D3  340E               	retlw	14
  1241     02D4  3430               	retlw	48
  1242     02D5  3424               	retlw	36
  1243     02D6  3424               	retlw	36
  1244     02D7  3424               	retlw	36
  1245     02D8  343E               	retlw	62
  1246     02D9  3400               	retlw	0
  1247     02DA  3414               	retlw	20
  1248     02DB  3477               	retlw	119
  1249     02DC  3400               	retlw	0
  1250     02DD  3400               	retlw	0
  1251     02DE  3400               	retlw	0
  1252     02DF  3406               	retlw	6
  1253     02E0  3408               	retlw	8
  1254     02E1  3430               	retlw	48
  1255     02E2  3400               	retlw	0
  1256     02E3  3400               	retlw	0
  1257     02E4  3400               	retlw	0
  1258     02E5  3477               	retlw	119
  1259     02E6  3414               	retlw	20
  1260     02E7  3400               	retlw	0
  1261     02E8  3400               	retlw	0
  1262     02E9  3408               	retlw	8
  1263     02EA  340C               	retlw	12
  1264     02EB  3408               	retlw	8
  1265     02EC  3400               	retlw	0
  1266     02ED  3400               	retlw	0
  1267     02EE  3420               	retlw	32
  1268     02EF  3420               	retlw	32
  1269     02F0  3420               	retlw	32
  1270     02F1  3400               	retlw	0
  1271     02F2  3400               	retlw	0
  1272     02F3  340C               	retlw	12
  1273     02F4  3414               	retlw	20
  1274     02F5  3400               	retlw	0
  1275     02F6  3400               	retlw	0
  1276     02F7  3400               	retlw	0
  1277     02F8  3434               	retlw	52
  1278     02F9  3410               	retlw	16
  1279     02FA  3410               	retlw	16
  1280     02FB  3424               	retlw	36
  1281     02FC  3418               	retlw	24
  1282     02FD  3424               	retlw	36
  1283     02FE  342C               	retlw	44
  1284     02FF  3424               	retlw	36
  1285     0300  3418               	retlw	24
  1286     0301  341C               	retlw	28
  1287     0302  3400               	retlw	0
  1288     0303  3418               	retlw	24
  1289     0304  3400               	retlw	0
  1290     0305  3438               	retlw	56
  1291     0306  3414               	retlw	20
  1292     0307  3414               	retlw	20
  1293     0308  3434               	retlw	52
  1294     0309  340C               	retlw	12
  1295     030A  3404               	retlw	4
  1296     030B  341C               	retlw	28
  1297     030C  3420               	retlw	32
  1298     030D  341C               	retlw	28
  1299     030E  3404               	retlw	4
  1300     030F  343C               	retlw	60
  1301     0310  3438               	retlw	56
  1302     0311  3428               	retlw	40
  1303     0312  343C               	retlw	60
  1304     0313  3428               	retlw	40
  1305     0314  3428               	retlw	40
  1306     0315  343C               	retlw	60
  1307     0316  3420               	retlw	32
  1308     0317  342C               	retlw	44
  1309     0318  3414               	retlw	20
  1310     0319  340C               	retlw	12
  1311     031A  3424               	retlw	36
  1312     031B  342C               	retlw	44
  1313     031C  342C               	retlw	44
  1314     031D  342C               	retlw	44
  1315     031E  3424               	retlw	36
  1316     031F  3400               	retlw	0
  1317     0320  3408               	retlw	8
  1318     0321  3404               	retlw	4
  1319     0322  343C               	retlw	60
  1320     0323  3400               	retlw	0
  1321     0324  3428               	retlw	40
  1322     0325  3428               	retlw	40
  1323     0326  3428               	retlw	40
  1324     0327  3424               	retlw	36
  1325     0328  343C               	retlw	60
  1326     0329  3400               	retlw	0
  1327     032A  3424               	retlw	36
  1328     032B  3424               	retlw	36
  1329     032C  3424               	retlw	36
  1330     032D  343C               	retlw	60
  1331     032E  3400               	retlw	0
  1332     032F  3410               	retlw	16
  1333     0330  3420               	retlw	32
  1334     0331  343C               	retlw	60
  1335     0332  3400               	retlw	0
  1336     0333  3430               	retlw	48
  1337     0334  3428               	retlw	40
  1338     0335  3424               	retlw	36
  1339     0336  3424               	retlw	36
  1340     0337  3400               	retlw	0
  1341     0338  3418               	retlw	24
  1342     0339  3424               	retlw	36
  1343     033A  3410               	retlw	16
  1344     033B  340C               	retlw	12
  1345     033C  3430               	retlw	48
  1346     033D  3430               	retlw	48
  1347     033E  342C               	retlw	44
  1348     033F  3424               	retlw	36
  1349     0340  342C               	retlw	44
  1350     0341  3430               	retlw	48
  1351     0342  3418               	retlw	24
  1352     0343  3424               	retlw	36
  1353     0344  342C               	retlw	44
  1354     0345  3420               	retlw	32
  1355     0346  343C               	retlw	60
  1356     0347  343C               	retlw	60
  1357     0348  3424               	retlw	36
  1358     0349  3424               	retlw	36
  1359     034A  3404               	retlw	4
  1360     034B  340C               	retlw	12
  1361     034C  3404               	retlw	4
  1362     034D  3424               	retlw	36
  1363     034E  3414               	retlw	20
  1364     034F  340C               	retlw	12
  1365     0350  3404               	retlw	4
  1366     0351  3424               	retlw	36
  1367     0352  3408               	retlw	8
  1368     0353  3410               	retlw	16
  1369     0354  343C               	retlw	60
  1370     0355  3400               	retlw	0
  1371     0356  3410               	retlw	16
  1372     0357  3420               	retlw	32
  1373     0358  343C               	retlw	60
  1374     0359  3420               	retlw	32
  1375     035A  3410               	retlw	16
  1376     035B  343C               	retlw	60
  1377     035C  3420               	retlw	32
  1378     035D  3428               	retlw	40
  1379     035E  3424               	retlw	36
  1380     035F  343C               	retlw	60
  1381     0360  3404               	retlw	4
  1382     0361  3408               	retlw	8
  1383     0362  3430               	retlw	48
  1384     0363  3408               	retlw	8
  1385     0364  3404               	retlw	4
  1386     0365  343C               	retlw	60
  1387     0366  3424               	retlw	36
  1388     0367  3424               	retlw	36
  1389     0368  3424               	retlw	36
  1390     0369  343C               	retlw	60
  1391     036A  3430               	retlw	48
  1392     036B  3428               	retlw	40
  1393     036C  3424               	retlw	36
  1394     036D  3428               	retlw	40
  1395     036E  3430               	retlw	48
  1396     036F  340C               	retlw	12
  1397     0370  3414               	retlw	20
  1398     0371  3420               	retlw	32
  1399     0372  3410               	retlw	16
  1400     0373  340C               	retlw	12
  1401     0374  3420               	retlw	32
  1402     0375  3428               	retlw	40
  1403     0376  3428               	retlw	40
  1404     0377  3428               	retlw	40
  1405     0378  343C               	retlw	60
  1406     0379  3400               	retlw	0
  1407     037A  3414               	retlw	20
  1408     037B  347F               	retlw	127
  1409     037C  3400               	retlw	0
  1410     037D  3400               	retlw	0
  1411     037E  3430               	retlw	48
  1412     037F  3408               	retlw	8
  1413     0380  3407               	retlw	7
  1414     0381  3408               	retlw	8
  1415     0382  3430               	retlw	48
  1416     0383  3400               	retlw	0
  1417     0384  3400               	retlw	0
  1418     0385  347F               	retlw	127
  1419     0386  3414               	retlw	20
  1420     0387  3400               	retlw	0
  1421     0388  3408               	retlw	8
  1422     0389  3408               	retlw	8
  1423     038A  3400               	retlw	0
  1424     038B  3408               	retlw	8
  1425     038C  3408               	retlw	8
  1426     038D  342A               	retlw	42
  1427     038E  3455               	retlw	85
  1428     038F  342A               	retlw	42
  1429     0390  3455               	retlw	85
  1430     0391  342A               	retlw	42
  1431     0392                     __end_of_aurebech:
  1432     0392                     _hebrew:
  1433     0392  3408               	retlw	8
  1434     0393  341C               	retlw	28
  1435     0394  343E               	retlw	62
  1436     0395  347F               	retlw	127
  1437     0396  3400               	retlw	0
  1438     0397  3430               	retlw	48
  1439     0398  3435               	retlw	53
  1440     0399  3448               	retlw	72
  1441     039A  3440               	retlw	64
  1442     039B  3430               	retlw	48
  1443     039C  3445               	retlw	69
  1444     039D  3429               	retlw	41
  1445     039E  3411               	retlw	17
  1446     039F  3421               	retlw	33
  1447     03A0  347D               	retlw	125
  1448     03A1  347D               	retlw	125
  1449     03A2  3409               	retlw	9
  1450     03A3  3405               	retlw	5
  1451     03A4  3405               	retlw	5
  1452     03A5  3479               	retlw	121
  1453     03A6  347D               	retlw	125
  1454     03A7  3409               	retlw	9
  1455     03A8  3411               	retlw	17
  1456     03A9  3421               	retlw	33
  1457     03AA  347D               	retlw	125
  1458     03AB  3438               	retlw	56
  1459     03AC  3444               	retlw	68
  1460     03AD  3444               	retlw	68
  1461     03AE  3438               	retlw	56
  1462     03AF  3444               	retlw	68
  1463     03B0  347E               	retlw	126
  1464     03B1  3401               	retlw	1
  1465     03B2  3429               	retlw	41
  1466     03B3  342E               	retlw	46
  1467     03B4  3410               	retlw	16
  1468     03B5  3430               	retlw	48
  1469     03B6  344A               	retlw	74
  1470     03B7  344D               	retlw	77
  1471     03B8  3449               	retlw	73
  1472     03B9  3430               	retlw	48
  1473     03BA  3460               	retlw	96
  1474     03BB  3450               	retlw	80
  1475     03BC  3448               	retlw	72
  1476     03BD  3450               	retlw	80
  1477     03BE  3460               	retlw	96
  1478     03BF  341E               	retlw	30
  1479     03C0  3404               	retlw	4
  1480     03C1  3404               	retlw	4
  1481     03C2  3438               	retlw	56
  1482     03C3  3440               	retlw	64
  1483     03C4  343E               	retlw	62
  1484     03C5  3449               	retlw	73
  1485     03C6  3449               	retlw	73
  1486     03C7  3449               	retlw	73
  1487     03C8  343E               	retlw	62
  1488     03C9  3462               	retlw	98
  1489     03CA  3414               	retlw	20
  1490     03CB  3408               	retlw	8
  1491     03CC  3410               	retlw	16
  1492     03CD  3460               	retlw	96
  1493     03CE  3440               	retlw	64
  1494     03CF  343C               	retlw	60
  1495     03D0  3420               	retlw	32
  1496     03D1  3420               	retlw	32
  1497     03D2  341C               	retlw	28
  1498     03D3  3408               	retlw	8
  1499     03D4  347C               	retlw	124
  1500     03D5  3404               	retlw	4
  1501     03D6  347C               	retlw	124
  1502     03D7  3402               	retlw	2
  1503     03D8  3438               	retlw	56
  1504     03D9  3444               	retlw	68
  1505     03DA  3444               	retlw	68
  1506     03DB  343C               	retlw	60
  1507     03DC  3404               	retlw	4
  1508     03DD  3441               	retlw	65
  1509     03DE  3463               	retlw	99
  1510     03DF  3455               	retlw	85
  1511     03E0  3449               	retlw	73
  1512     03E1  3441               	retlw	65
  1513     03E2  3410               	retlw	16
  1514     03E3  3408               	retlw	8
  1515     03E4  3478               	retlw	120
  1516     03E5  3408               	retlw	8
  1517     03E6  3404               	retlw	4
  1518     03E7  3418               	retlw	24
  1519     03E8  3424               	retlw	36
  1520     03E9  347E               	retlw	126
  1521     03EA  3424               	retlw	36
  1522     03EB  3418               	retlw	24
  1523     03EC  345E               	retlw	94
  1524     03ED  3461               	retlw	97
  1525     03EE  3401               	retlw	1
  1526     03EF  3461               	retlw	97
  1527     03F0  345E               	retlw	94
  1528     03F1  3478               	retlw	120
  1529     03F2  3414               	retlw	20
  1530     03F3  3415               	retlw	21
  1531     03F4  3414               	retlw	20
  1532     03F5  3478               	retlw	120
  1533     03F6  3438               	retlw	56
  1534     03F7  3444               	retlw	68
  1535     03F8  3445               	retlw	69
  1536     03F9  343C               	retlw	60
  1537     03FA  3440               	retlw	64
  1538     03FB  3478               	retlw	120
  1539     03FC  3415               	retlw	21
  1540     03FD  3414               	retlw	20
  1541     03FE  3415               	retlw	21
  1542     03FF  3478               	retlw	120
  1543     0400  3438               	retlw	56
  1544     0401  3445               	retlw	69
  1545     0402  3444               	retlw	68
  1546     0403  343D               	retlw	61
  1547     0404  3440               	retlw	64
  1548     0405  343C               	retlw	60
  1549     0406  3443               	retlw	67
  1550     0407  3442               	retlw	66
  1551     0408  3443               	retlw	67
  1552     0409  343C               	retlw	60
  1553     040A  3438               	retlw	56
  1554     040B  3445               	retlw	69
  1555     040C  3444               	retlw	68
  1556     040D  3445               	retlw	69
  1557     040E  3438               	retlw	56
  1558     040F  343C               	retlw	60
  1559     0410  3441               	retlw	65
  1560     0411  3440               	retlw	64
  1561     0412  3441               	retlw	65
  1562     0413  343C               	retlw	60
  1563     0414  3438               	retlw	56
  1564     0415  3442               	retlw	66
  1565     0416  3440               	retlw	64
  1566     0417  3442               	retlw	66
  1567     0418  3438               	retlw	56
  1568     0419  3408               	retlw	8
  1569     041A  3408               	retlw	8
  1570     041B  342A               	retlw	42
  1571     041C  341C               	retlw	28
  1572     041D  3408               	retlw	8
  1573     041E  3420               	retlw	32
  1574     041F  347E               	retlw	126
  1575     0420  3402               	retlw	2
  1576     0421  3402               	retlw	2
  1577     0422  3402               	retlw	2
  1578     0423  3412               	retlw	18
  1579     0424  3419               	retlw	25
  1580     0425  3415               	retlw	21
  1581     0426  3412               	retlw	18
  1582     0427  3400               	retlw	0
  1583     0428  3448               	retlw	72
  1584     0429  347E               	retlw	126
  1585     042A  3449               	retlw	73
  1586     042B  3441               	retlw	65
  1587     042C  3442               	retlw	66
  1588     042D  3401               	retlw	1
  1589     042E  3412               	retlw	18
  1590     042F  347C               	retlw	124
  1591     0430  3412               	retlw	18
  1592     0431  3401               	retlw	1
  1593     0432  3400               	retlw	0
  1594     0433  3400               	retlw	0
  1595     0434  3400               	retlw	0
  1596     0435  3400               	retlw	0
  1597     0436  3400               	retlw	0
  1598     0437  3400               	retlw	0
  1599     0438  3400               	retlw	0
  1600     0439  345F               	retlw	95
  1601     043A  3400               	retlw	0
  1602     043B  3400               	retlw	0
  1603     043C  3400               	retlw	0
  1604     043D  3403               	retlw	3
  1605     043E  3400               	retlw	0
  1606     043F  3403               	retlw	3
  1607     0440  3400               	retlw	0
  1608     0441  3414               	retlw	20
  1609     0442  347F               	retlw	127
  1610     0443  3414               	retlw	20
  1611     0444  347F               	retlw	127
  1612     0445  3414               	retlw	20
  1613     0446  3424               	retlw	36
  1614     0447  342A               	retlw	42
  1615     0448  347F               	retlw	127
  1616     0449  342A               	retlw	42
  1617     044A  3412               	retlw	18
  1618     044B  3423               	retlw	35
  1619     044C  3413               	retlw	19
  1620     044D  3408               	retlw	8
  1621     044E  3464               	retlw	100
  1622     044F  3462               	retlw	98
  1623     0450  3436               	retlw	54
  1624     0451  3449               	retlw	73
  1625     0452  3456               	retlw	86
  1626     0453  3420               	retlw	32
  1627     0454  3450               	retlw	80
  1628     0455  3400               	retlw	0
  1629     0456  340B               	retlw	11
  1630     0457  3407               	retlw	7
  1631     0458  3400               	retlw	0
  1632     0459  3400               	retlw	0
  1633     045A  3400               	retlw	0
  1634     045B  3400               	retlw	0
  1635     045C  343E               	retlw	62
  1636     045D  3441               	retlw	65
  1637     045E  3400               	retlw	0
  1638     045F  3400               	retlw	0
  1639     0460  3441               	retlw	65
  1640     0461  343E               	retlw	62
  1641     0462  3400               	retlw	0
  1642     0463  3400               	retlw	0
  1643     0464  3408               	retlw	8
  1644     0465  342A               	retlw	42
  1645     0466  341C               	retlw	28
  1646     0467  342A               	retlw	42
  1647     0468  3408               	retlw	8
  1648     0469  3408               	retlw	8
  1649     046A  3408               	retlw	8
  1650     046B  343E               	retlw	62
  1651     046C  3408               	retlw	8
  1652     046D  3408               	retlw	8
  1653     046E  3400               	retlw	0
  1654     046F  3458               	retlw	88
  1655     0470  3438               	retlw	56
  1656     0471  3400               	retlw	0
  1657     0472  3400               	retlw	0
  1658     0473  3408               	retlw	8
  1659     0474  3408               	retlw	8
  1660     0475  3408               	retlw	8
  1661     0476  3408               	retlw	8
  1662     0477  3408               	retlw	8
  1663     0478  3400               	retlw	0
  1664     0479  3430               	retlw	48
  1665     047A  3430               	retlw	48
  1666     047B  3400               	retlw	0
  1667     047C  3400               	retlw	0
  1668     047D  3420               	retlw	32
  1669     047E  3410               	retlw	16
  1670     047F  3408               	retlw	8
  1671     0480  3404               	retlw	4
  1672     0481  3402               	retlw	2
  1673     0482  343E               	retlw	62
  1674     0483  3451               	retlw	81
  1675     0484  3449               	retlw	73
  1676     0485  3445               	retlw	69
  1677     0486  343E               	retlw	62
  1678     0487  3400               	retlw	0
  1679     0488  3442               	retlw	66
  1680     0489  347F               	retlw	127
  1681     048A  3440               	retlw	64
  1682     048B  3400               	retlw	0
  1683     048C  3462               	retlw	98
  1684     048D  3451               	retlw	81
  1685     048E  3449               	retlw	73
  1686     048F  3449               	retlw	73
  1687     0490  3446               	retlw	70
  1688     0491  3422               	retlw	34
  1689     0492  3441               	retlw	65
  1690     0493  3449               	retlw	73
  1691     0494  3449               	retlw	73
  1692     0495  3436               	retlw	54
  1693     0496  3418               	retlw	24
  1694     0497  3414               	retlw	20
  1695     0498  3412               	retlw	18
  1696     0499  347F               	retlw	127
  1697     049A  3410               	retlw	16
  1698     049B  3427               	retlw	39
  1699     049C  3445               	retlw	69
  1700     049D  3445               	retlw	69
  1701     049E  3445               	retlw	69
  1702     049F  3439               	retlw	57
  1703     04A0  343C               	retlw	60
  1704     04A1  344A               	retlw	74
  1705     04A2  3449               	retlw	73
  1706     04A3  3449               	retlw	73
  1707     04A4  3430               	retlw	48
  1708     04A5  3401               	retlw	1
  1709     04A6  3471               	retlw	113
  1710     04A7  3409               	retlw	9
  1711     04A8  3405               	retlw	5
  1712     04A9  3403               	retlw	3
  1713     04AA  3436               	retlw	54
  1714     04AB  3449               	retlw	73
  1715     04AC  3449               	retlw	73
  1716     04AD  3449               	retlw	73
  1717     04AE  3437               	retlw	55
  1718     04AF  3406               	retlw	6
  1719     04B0  3449               	retlw	73
  1720     04B1  3449               	retlw	73
  1721     04B2  3429               	retlw	41
  1722     04B3  341E               	retlw	30
  1723     04B4  3400               	retlw	0
  1724     04B5  3436               	retlw	54
  1725     04B6  3436               	retlw	54
  1726     04B7  3400               	retlw	0
  1727     04B8  3400               	retlw	0
  1728     04B9  3400               	retlw	0
  1729     04BA  345B               	retlw	91
  1730     04BB  343B               	retlw	59
  1731     04BC  3400               	retlw	0
  1732     04BD  3400               	retlw	0
  1733     04BE  3400               	retlw	0
  1734     04BF  3408               	retlw	8
  1735     04C0  3414               	retlw	20
  1736     04C1  3422               	retlw	34
  1737     04C2  3441               	retlw	65
  1738     04C3  3414               	retlw	20
  1739     04C4  3414               	retlw	20
  1740     04C5  3414               	retlw	20
  1741     04C6  3414               	retlw	20
  1742     04C7  3414               	retlw	20
  1743     04C8  3441               	retlw	65
  1744     04C9  3422               	retlw	34
  1745     04CA  3414               	retlw	20
  1746     04CB  3408               	retlw	8
  1747     04CC  3400               	retlw	0
  1748     04CD  3402               	retlw	2
  1749     04CE  3401               	retlw	1
  1750     04CF  3451               	retlw	81
  1751     04D0  3409               	retlw	9
  1752     04D1  3406               	retlw	6
  1753     04D2  343E               	retlw	62
  1754     04D3  3441               	retlw	65
  1755     04D4  345D               	retlw	93
  1756     04D5  3455               	retlw	85
  1757     04D6  341E               	retlw	30
  1758     04D7  3432               	retlw	50
  1759     04D8  3414               	retlw	20
  1760     04D9  3408               	retlw	8
  1761     04DA  3414               	retlw	20
  1762     04DB  3426               	retlw	38
  1763     04DC  3422               	retlw	34
  1764     04DD  3422               	retlw	34
  1765     04DE  3422               	retlw	34
  1766     04DF  343C               	retlw	60
  1767     04E0  3420               	retlw	32
  1768     04E1  3400               	retlw	0
  1769     04E2  3422               	retlw	34
  1770     04E3  3412               	retlw	18
  1771     04E4  343C               	retlw	60
  1772     04E5  3400               	retlw	0
  1773     04E6  3402               	retlw	2
  1774     04E7  3402               	retlw	2
  1775     04E8  3402               	retlw	2
  1776     04E9  343E               	retlw	62
  1777     04EA  3402               	retlw	2
  1778     04EB  343A               	retlw	58
  1779     04EC  3402               	retlw	2
  1780     04ED  3402               	retlw	2
  1781     04EE  3402               	retlw	2
  1782     04EF  343C               	retlw	60
  1783     04F0  3400               	retlw	0
  1784     04F1  3402               	retlw	2
  1785     04F2  3402               	retlw	2
  1786     04F3  343C               	retlw	60
  1787     04F4  3400               	retlw	0
  1788     04F5  3400               	retlw	0
  1789     04F6  3402               	retlw	2
  1790     04F7  343E               	retlw	62
  1791     04F8  3402               	retlw	2
  1792     04F9  3400               	retlw	0
  1793     04FA  3422               	retlw	34
  1794     04FB  3424               	retlw	36
  1795     04FC  3428               	retlw	40
  1796     04FD  3438               	retlw	56
  1797     04FE  3426               	retlw	38
  1798     04FF  341E               	retlw	30
  1799     0500  3460               	retlw	96
  1800     0501  3442               	retlw	66
  1801     0502  3442               	retlw	66
  1802     0503  343C               	retlw	60
  1803     0504  3400               	retlw	0
  1804     0505  3400               	retlw	0
  1805     0506  3402               	retlw	2
  1806     0507  340E               	retlw	14
  1807     0508  3400               	retlw	0
  1808     0509  3400               	retlw	0
  1809     050A  3422               	retlw	34
  1810     050B  3422               	retlw	34
  1811     050C  3422               	retlw	34
  1812     050D  343C               	retlw	60
  1813     050E  3400               	retlw	0
  1814     050F  3422               	retlw	34
  1815     0510  3422               	retlw	34
  1816     0511  343C               	retlw	60
  1817     0512  3400               	retlw	0
  1818     0513  3402               	retlw	2
  1819     0514  343C               	retlw	60
  1820     0515  3402               	retlw	2
  1821     0516  3422               	retlw	34
  1822     0517  343C               	retlw	60
  1823     0518  3400               	retlw	0
  1824     0519  3407               	retlw	7
  1825     051A  3444               	retlw	68
  1826     051B  3424               	retlw	36
  1827     051C  341C               	retlw	28
  1828     051D  342C               	retlw	44
  1829     051E  342A               	retlw	42
  1830     051F  3422               	retlw	34
  1831     0520  3422               	retlw	34
  1832     0521  343C               	retlw	60
  1833     0522  347A               	retlw	122
  1834     0523  3402               	retlw	2
  1835     0524  3422               	retlw	34
  1836     0525  341C               	retlw	28
  1837     0526  3400               	retlw	0
  1838     0527  3400               	retlw	0
  1839     0528  3402               	retlw	2
  1840     0529  3402               	retlw	2
  1841     052A  347C               	retlw	124
  1842     052B  3400               	retlw	0
  1843     052C  3402               	retlw	2
  1844     052D  340E               	retlw	14
  1845     052E  3432               	retlw	50
  1846     052F  3422               	retlw	34
  1847     0530  341C               	retlw	28
  1848     0531  3422               	retlw	34
  1849     0532  3424               	retlw	36
  1850     0533  3428               	retlw	40
  1851     0534  3428               	retlw	40
  1852     0535  341E               	retlw	30
  1853     0536  3400               	retlw	0
  1854     0537  3400               	retlw	0
  1855     0538  3400               	retlw	0
  1856     0539  3400               	retlw	0
  1857     053A  3400               	retlw	0
  1858     053B  3400               	retlw	0
  1859     053C  3400               	retlw	0
  1860     053D  3400               	retlw	0
  1861     053E  3400               	retlw	0
  1862     053F  3400               	retlw	0
  1863     0540  3402               	retlw	2
  1864     0541  343E               	retlw	62
  1865     0542  3402               	retlw	2
  1866     0543  3402               	retlw	2
  1867     0544  343C               	retlw	60
  1868     0545  3402               	retlw	2
  1869     0546  3404               	retlw	4
  1870     0547  3408               	retlw	8
  1871     0548  3478               	retlw	120
  1872     0549  3406               	retlw	6
  1873     054A  3400               	retlw	0
  1874     054B  3402               	retlw	2
  1875     054C  3402               	retlw	2
  1876     054D  347E               	retlw	126
  1877     054E  3400               	retlw	0
  1878     054F  3402               	retlw	2
  1879     0550  3402               	retlw	2
  1880     0551  3402               	retlw	2
  1881     0552  343C               	retlw	60
  1882     0553  3400               	retlw	0
  1883     0554  343E               	retlw	62
  1884     0555  3428               	retlw	40
  1885     0556  342E               	retlw	46
  1886     0557  3420               	retlw	32
  1887     0558  341E               	retlw	30
  1888     0559  3400               	retlw	0
  1889     055A  3400               	retlw	0
  1890     055B  347F               	retlw	127
  1891     055C  3441               	retlw	65
  1892     055D  3441               	retlw	65
  1893     055E  3402               	retlw	2
  1894     055F  3404               	retlw	4
  1895     0560  3408               	retlw	8
  1896     0561  3410               	retlw	16
  1897     0562  3420               	retlw	32
  1898     0563  3441               	retlw	65
  1899     0564  3441               	retlw	65
  1900     0565  347F               	retlw	127
  1901     0566  3400               	retlw	0
  1902     0567  3400               	retlw	0
  1903     0568  3404               	retlw	4
  1904     0569  3402               	retlw	2
  1905     056A  347F               	retlw	127
  1906     056B  3402               	retlw	2
  1907     056C  3404               	retlw	4
  1908     056D  3440               	retlw	64
  1909     056E  3440               	retlw	64
  1910     056F  3440               	retlw	64
  1911     0570  3440               	retlw	64
  1912     0571  3440               	retlw	64
  1913     0572  3400               	retlw	0
  1914     0573  3407               	retlw	7
  1915     0574  340B               	retlw	11
  1916     0575  3400               	retlw	0
  1917     0576  3400               	retlw	0
  1918     0577  3438               	retlw	56
  1919     0578  3444               	retlw	68
  1920     0579  3444               	retlw	68
  1921     057A  343C               	retlw	60
  1922     057B  3440               	retlw	64
  1923     057C  347F               	retlw	127
  1924     057D  3448               	retlw	72
  1925     057E  3444               	retlw	68
  1926     057F  3444               	retlw	68
  1927     0580  3438               	retlw	56
  1928     0581  3438               	retlw	56
  1929     0582  3444               	retlw	68
  1930     0583  3444               	retlw	68
  1931     0584  3444               	retlw	68
  1932     0585  3444               	retlw	68
  1933     0586  3438               	retlw	56
  1934     0587  3444               	retlw	68
  1935     0588  3444               	retlw	68
  1936     0589  3448               	retlw	72
  1937     058A  347F               	retlw	127
  1938     058B  3438               	retlw	56
  1939     058C  3454               	retlw	84
  1940     058D  3454               	retlw	84
  1941     058E  3454               	retlw	84
  1942     058F  3408               	retlw	8
  1943     0590  3408               	retlw	8
  1944     0591  347E               	retlw	126
  1945     0592  3409               	retlw	9
  1946     0593  3402               	retlw	2
  1947     0594  3400               	retlw	0
  1948     0595  3408               	retlw	8
  1949     0596  3414               	retlw	20
  1950     0597  3454               	retlw	84
  1951     0598  3454               	retlw	84
  1952     0599  343C               	retlw	60
  1953     059A  347F               	retlw	127
  1954     059B  3408               	retlw	8
  1955     059C  3404               	retlw	4
  1956     059D  3404               	retlw	4
  1957     059E  3478               	retlw	120
  1958     059F  3400               	retlw	0
  1959     05A0  3444               	retlw	68
  1960     05A1  347D               	retlw	125
  1961     05A2  3440               	retlw	64
  1962     05A3  3400               	retlw	0
  1963     05A4  3420               	retlw	32
  1964     05A5  3440               	retlw	64
  1965     05A6  3444               	retlw	68
  1966     05A7  343D               	retlw	61
  1967     05A8  3400               	retlw	0
  1968     05A9  3400               	retlw	0
  1969     05AA  347F               	retlw	127
  1970     05AB  3410               	retlw	16
  1971     05AC  3428               	retlw	40
  1972     05AD  3444               	retlw	68
  1973     05AE  3400               	retlw	0
  1974     05AF  3441               	retlw	65
  1975     05B0  347F               	retlw	127
  1976     05B1  3440               	retlw	64
  1977     05B2  3400               	retlw	0
  1978     05B3  3478               	retlw	120
  1979     05B4  3404               	retlw	4
  1980     05B5  3418               	retlw	24
  1981     05B6  3404               	retlw	4
  1982     05B7  3478               	retlw	120
  1983     05B8  347C               	retlw	124
  1984     05B9  3408               	retlw	8
  1985     05BA  3404               	retlw	4
  1986     05BB  3404               	retlw	4
  1987     05BC  3478               	retlw	120
  1988     05BD  3438               	retlw	56
  1989     05BE  3444               	retlw	68
  1990     05BF  3444               	retlw	68
  1991     05C0  3444               	retlw	68
  1992     05C1  3438               	retlw	56
  1993     05C2  347C               	retlw	124
  1994     05C3  3414               	retlw	20
  1995     05C4  3424               	retlw	36
  1996     05C5  3424               	retlw	36
  1997     05C6  3418               	retlw	24
  1998     05C7  3418               	retlw	24
  1999     05C8  3424               	retlw	36
  2000     05C9  3414               	retlw	20
  2001     05CA  347C               	retlw	124
  2002     05CB  3440               	retlw	64
  2003     05CC  3400               	retlw	0
  2004     05CD  347C               	retlw	124
  2005     05CE  3408               	retlw	8
  2006     05CF  3404               	retlw	4
  2007     05D0  3404               	retlw	4
  2008     05D1  3448               	retlw	72
  2009     05D2  3454               	retlw	84
  2010     05D3  3454               	retlw	84
  2011     05D4  3454               	retlw	84
  2012     05D5  3420               	retlw	32
  2013     05D6  3404               	retlw	4
  2014     05D7  343E               	retlw	62
  2015     05D8  3444               	retlw	68
  2016     05D9  3420               	retlw	32
  2017     05DA  3400               	retlw	0
  2018     05DB  343C               	retlw	60
  2019     05DC  3440               	retlw	64
  2020     05DD  3440               	retlw	64
  2021     05DE  3420               	retlw	32
  2022     05DF  347C               	retlw	124
  2023     05E0  341C               	retlw	28
  2024     05E1  3420               	retlw	32
  2025     05E2  3440               	retlw	64
  2026     05E3  3420               	retlw	32
  2027     05E4  341C               	retlw	28
  2028     05E5  343C               	retlw	60
  2029     05E6  3440               	retlw	64
  2030     05E7  3430               	retlw	48
  2031     05E8  3440               	retlw	64
  2032     05E9  343C               	retlw	60
  2033     05EA  3444               	retlw	68
  2034     05EB  3428               	retlw	40
  2035     05EC  3410               	retlw	16
  2036     05ED  3428               	retlw	40
  2037     05EE  3444               	retlw	68
  2038     05EF  3404               	retlw	4
  2039     05F0  3448               	retlw	72
  2040     05F1  3430               	retlw	48
  2041     05F2  3408               	retlw	8
  2042     05F3  3404               	retlw	4
  2043     05F4  3444               	retlw	68
  2044     05F5  3464               	retlw	100
  2045     05F6  3454               	retlw	84
  2046     05F7  344C               	retlw	76
  2047     05F8  3444               	retlw	68
  2048     05F9  3400               	retlw	0
  2049     05FA  3408               	retlw	8
  2050     05FB  3436               	retlw	54
  2051     05FC  3441               	retlw	65
  2052     05FD  3400               	retlw	0
  2053     05FE  3400               	retlw	0
  2054     05FF  3400               	retlw	0
  2055     0600  3477               	retlw	119
  2056     0601  3400               	retlw	0
  2057     0602  3400               	retlw	0
  2058     0603  3400               	retlw	0
  2059     0604  3441               	retlw	65
  2060     0605  3436               	retlw	54
  2061     0606  3408               	retlw	8
  2062     0607  3400               	retlw	0
  2063     0608  3408               	retlw	8
  2064     0609  3404               	retlw	4
  2065     060A  3408               	retlw	8
  2066     060B  3410               	retlw	16
  2067     060C  3408               	retlw	8
  2068     060D  342A               	retlw	42
  2069     060E  3455               	retlw	85
  2070     060F  342A               	retlw	42
  2071     0610  3455               	retlw	85
  2072     0611  342A               	retlw	42
  2073     0612                     __end_of_hebrew:
  2074     0612                     _arabic:
  2075     0612  3408               	retlw	8
  2076     0613  341C               	retlw	28
  2077     0614  343E               	retlw	62
  2078     0615  347F               	retlw	127
  2079     0616  3400               	retlw	0
  2080     0617  3430               	retlw	48
  2081     0618  3435               	retlw	53
  2082     0619  3448               	retlw	72
  2083     061A  3440               	retlw	64
  2084     061B  3430               	retlw	48
  2085     061C  3445               	retlw	69
  2086     061D  3429               	retlw	41
  2087     061E  3411               	retlw	17
  2088     061F  3421               	retlw	33
  2089     0620  347D               	retlw	125
  2090     0621  347D               	retlw	125
  2091     0622  3409               	retlw	9
  2092     0623  3405               	retlw	5
  2093     0624  3405               	retlw	5
  2094     0625  3479               	retlw	121
  2095     0626  347D               	retlw	125
  2096     0627  3409               	retlw	9
  2097     0628  3411               	retlw	17
  2098     0629  3421               	retlw	33
  2099     062A  347D               	retlw	125
  2100     062B  3438               	retlw	56
  2101     062C  3444               	retlw	68
  2102     062D  3444               	retlw	68
  2103     062E  3438               	retlw	56
  2104     062F  3444               	retlw	68
  2105     0630  347E               	retlw	126
  2106     0631  3401               	retlw	1
  2107     0632  3429               	retlw	41
  2108     0633  342E               	retlw	46
  2109     0634  3410               	retlw	16
  2110     0635  3430               	retlw	48
  2111     0636  344A               	retlw	74
  2112     0637  344D               	retlw	77
  2113     0638  3449               	retlw	73
  2114     0639  3430               	retlw	48
  2115     063A  3460               	retlw	96
  2116     063B  3450               	retlw	80
  2117     063C  3448               	retlw	72
  2118     063D  3450               	retlw	80
  2119     063E  3460               	retlw	96
  2120     063F  341E               	retlw	30
  2121     0640  3404               	retlw	4
  2122     0641  3404               	retlw	4
  2123     0642  3438               	retlw	56
  2124     0643  3440               	retlw	64
  2125     0644  343E               	retlw	62
  2126     0645  3449               	retlw	73
  2127     0646  3449               	retlw	73
  2128     0647  3449               	retlw	73
  2129     0648  343E               	retlw	62
  2130     0649  3462               	retlw	98
  2131     064A  3414               	retlw	20
  2132     064B  3408               	retlw	8
  2133     064C  3410               	retlw	16
  2134     064D  3460               	retlw	96
  2135     064E  3440               	retlw	64
  2136     064F  343C               	retlw	60
  2137     0650  3420               	retlw	32
  2138     0651  3420               	retlw	32
  2139     0652  341C               	retlw	28
  2140     0653  3408               	retlw	8
  2141     0654  347C               	retlw	124
  2142     0655  3404               	retlw	4
  2143     0656  347C               	retlw	124
  2144     0657  3402               	retlw	2
  2145     0658  3438               	retlw	56
  2146     0659  3444               	retlw	68
  2147     065A  3444               	retlw	68
  2148     065B  343C               	retlw	60
  2149     065C  3404               	retlw	4
  2150     065D  3441               	retlw	65
  2151     065E  3463               	retlw	99
  2152     065F  3455               	retlw	85
  2153     0660  3449               	retlw	73
  2154     0661  3441               	retlw	65
  2155     0662  3410               	retlw	16
  2156     0663  3408               	retlw	8
  2157     0664  3478               	retlw	120
  2158     0665  3408               	retlw	8
  2159     0666  3404               	retlw	4
  2160     0667  3418               	retlw	24
  2161     0668  3424               	retlw	36
  2162     0669  347E               	retlw	126
  2163     066A  3424               	retlw	36
  2164     066B  3418               	retlw	24
  2165     066C  345E               	retlw	94
  2166     066D  3461               	retlw	97
  2167     066E  3401               	retlw	1
  2168     066F  3461               	retlw	97
  2169     0670  345E               	retlw	94
  2170     0671  3478               	retlw	120
  2171     0672  3414               	retlw	20
  2172     0673  3415               	retlw	21
  2173     0674  3414               	retlw	20
  2174     0675  3478               	retlw	120
  2175     0676  3438               	retlw	56
  2176     0677  3444               	retlw	68
  2177     0678  3445               	retlw	69
  2178     0679  343C               	retlw	60
  2179     067A  3440               	retlw	64
  2180     067B  3478               	retlw	120
  2181     067C  3415               	retlw	21
  2182     067D  3414               	retlw	20
  2183     067E  3415               	retlw	21
  2184     067F  3478               	retlw	120
  2185     0680  3438               	retlw	56
  2186     0681  3445               	retlw	69
  2187     0682  3444               	retlw	68
  2188     0683  343D               	retlw	61
  2189     0684  3440               	retlw	64
  2190     0685  343C               	retlw	60
  2191     0686  3443               	retlw	67
  2192     0687  3442               	retlw	66
  2193     0688  3443               	retlw	67
  2194     0689  343C               	retlw	60
  2195     068A  3438               	retlw	56
  2196     068B  3445               	retlw	69
  2197     068C  3444               	retlw	68
  2198     068D  3445               	retlw	69
  2199     068E  3438               	retlw	56
  2200     068F  343C               	retlw	60
  2201     0690  3441               	retlw	65
  2202     0691  3440               	retlw	64
  2203     0692  3441               	retlw	65
  2204     0693  343C               	retlw	60
  2205     0694  3438               	retlw	56
  2206     0695  3442               	retlw	66
  2207     0696  3440               	retlw	64
  2208     0697  3442               	retlw	66
  2209     0698  3438               	retlw	56
  2210     0699  3408               	retlw	8
  2211     069A  3408               	retlw	8
  2212     069B  342A               	retlw	42
  2213     069C  341C               	retlw	28
  2214     069D  3408               	retlw	8
  2215     069E  3420               	retlw	32
  2216     069F  347E               	retlw	126
  2217     06A0  3402               	retlw	2
  2218     06A1  3402               	retlw	2
  2219     06A2  3402               	retlw	2
  2220     06A3  3412               	retlw	18
  2221     06A4  3419               	retlw	25
  2222     06A5  3415               	retlw	21
  2223     06A6  3412               	retlw	18
  2224     06A7  3400               	retlw	0
  2225     06A8  3448               	retlw	72
  2226     06A9  347E               	retlw	126
  2227     06AA  3449               	retlw	73
  2228     06AB  3441               	retlw	65
  2229     06AC  3442               	retlw	66
  2230     06AD  3401               	retlw	1
  2231     06AE  3412               	retlw	18
  2232     06AF  347C               	retlw	124
  2233     06B0  3412               	retlw	18
  2234     06B1  3401               	retlw	1
  2235     06B2  3400               	retlw	0
  2236     06B3  3400               	retlw	0
  2237     06B4  3400               	retlw	0
  2238     06B5  3400               	retlw	0
  2239     06B6  3400               	retlw	0
  2240     06B7  3400               	retlw	0
  2241     06B8  345F               	retlw	95
  2242     06B9  3400               	retlw	0
  2243     06BA  3400               	retlw	0
  2244     06BB  3400               	retlw	0
  2245     06BC  3400               	retlw	0
  2246     06BD  3403               	retlw	3
  2247     06BE  3400               	retlw	0
  2248     06BF  3403               	retlw	3
  2249     06C0  3400               	retlw	0
  2250     06C1  3414               	retlw	20
  2251     06C2  347F               	retlw	127
  2252     06C3  3414               	retlw	20
  2253     06C4  347F               	retlw	127
  2254     06C5  3414               	retlw	20
  2255     06C6  3424               	retlw	36
  2256     06C7  342A               	retlw	42
  2257     06C8  347F               	retlw	127
  2258     06C9  342A               	retlw	42
  2259     06CA  3412               	retlw	18
  2260     06CB  3423               	retlw	35
  2261     06CC  3413               	retlw	19
  2262     06CD  3408               	retlw	8
  2263     06CE  3464               	retlw	100
  2264     06CF  3462               	retlw	98
  2265     06D0  3436               	retlw	54
  2266     06D1  3449               	retlw	73
  2267     06D2  3456               	retlw	86
  2268     06D3  3420               	retlw	32
  2269     06D4  3450               	retlw	80
  2270     06D5  3400               	retlw	0
  2271     06D6  3400               	retlw	0
  2272     06D7  340C               	retlw	12
  2273     06D8  3400               	retlw	0
  2274     06D9  3400               	retlw	0
  2275     06DA  3400               	retlw	0
  2276     06DB  3400               	retlw	0
  2277     06DC  343E               	retlw	62
  2278     06DD  3441               	retlw	65
  2279     06DE  3400               	retlw	0
  2280     06DF  3400               	retlw	0
  2281     06E0  3441               	retlw	65
  2282     06E1  343E               	retlw	62
  2283     06E2  3400               	retlw	0
  2284     06E3  3400               	retlw	0
  2285     06E4  3408               	retlw	8
  2286     06E5  342A               	retlw	42
  2287     06E6  341C               	retlw	28
  2288     06E7  342A               	retlw	42
  2289     06E8  3408               	retlw	8
  2290     06E9  3408               	retlw	8
  2291     06EA  3408               	retlw	8
  2292     06EB  343E               	retlw	62
  2293     06EC  3408               	retlw	8
  2294     06ED  3408               	retlw	8
  2295     06EE  3400               	retlw	0
  2296     06EF  3400               	retlw	0
  2297     06F0  3458               	retlw	88
  2298     06F1  3438               	retlw	56
  2299     06F2  3400               	retlw	0
  2300     06F3  3400               	retlw	0
  2301     06F4  3400               	retlw	0
  2302     06F5  3410               	retlw	16
  2303     06F6  3410               	retlw	16
  2304     06F7  3400               	retlw	0
  2305     06F8  3400               	retlw	0
  2306     06F9  3400               	retlw	0
  2307     06FA  3430               	retlw	48
  2308     06FB  3430               	retlw	48
  2309     06FC  3400               	retlw	0
  2310     06FD  3420               	retlw	32
  2311     06FE  3410               	retlw	16
  2312     06FF  3408               	retlw	8
  2313     0700  3404               	retlw	4
  2314     0701  3402               	retlw	2
  2315     0702  3400               	retlw	0
  2316     0703  3400               	retlw	0
  2317     0704  3430               	retlw	48
  2318     0705  3430               	retlw	48
  2319     0706  3400               	retlw	0
  2320     0707  3400               	retlw	0
  2321     0708  3400               	retlw	0
  2322     0709  343E               	retlw	62
  2323     070A  3400               	retlw	0
  2324     070B  3400               	retlw	0
  2325     070C  3400               	retlw	0
  2326     070D  347E               	retlw	126
  2327     070E  3408               	retlw	8
  2328     070F  3408               	retlw	8
  2329     0710  3406               	retlw	6
  2330     0711  347E               	retlw	126
  2331     0712  3408               	retlw	8
  2332     0713  340E               	retlw	14
  2333     0714  3408               	retlw	8
  2334     0715  3406               	retlw	6
  2335     0716  3400               	retlw	0
  2336     0717  3434               	retlw	52
  2337     0718  344A               	retlw	74
  2338     0719  344A               	retlw	74
  2339     071A  3400               	retlw	0
  2340     071B  3400               	retlw	0
  2341     071C  341C               	retlw	28
  2342     071D  3422               	retlw	34
  2343     071E  3422               	retlw	34
  2344     071F  341C               	retlw	28
  2345     0720  3402               	retlw	2
  2346     0721  3402               	retlw	2
  2347     0722  3402               	retlw	2
  2348     0723  347E               	retlw	126
  2349     0724  3400               	retlw	0
  2350     0725  340E               	retlw	14
  2351     0726  3438               	retlw	56
  2352     0727  3460               	retlw	96
  2353     0728  3438               	retlw	56
  2354     0729  340E               	retlw	14
  2355     072A  3470               	retlw	112
  2356     072B  341C               	retlw	28
  2357     072C  3406               	retlw	6
  2358     072D  341C               	retlw	28
  2359     072E  3470               	retlw	112
  2360     072F  3406               	retlw	6
  2361     0730  3409               	retlw	9
  2362     0731  3409               	retlw	9
  2363     0732  347E               	retlw	126
  2364     0733  3400               	retlw	0
  2365     0734  3400               	retlw	0
  2366     0735  3400               	retlw	0
  2367     0736  3424               	retlw	36
  2368     0737  3400               	retlw	0
  2369     0738  3400               	retlw	0
  2370     0739  3400               	retlw	0
  2371     073A  3400               	retlw	0
  2372     073B  3464               	retlw	100
  2373     073C  3400               	retlw	0
  2374     073D  3400               	retlw	0
  2375     073E  3400               	retlw	0
  2376     073F  3410               	retlw	16
  2377     0740  3428               	retlw	40
  2378     0741  3444               	retlw	68
  2379     0742  3400               	retlw	0
  2380     0743  3400               	retlw	0
  2381     0744  3414               	retlw	20
  2382     0745  3414               	retlw	20
  2383     0746  3414               	retlw	20
  2384     0747  3400               	retlw	0
  2385     0748  3400               	retlw	0
  2386     0749  3444               	retlw	68
  2387     074A  3428               	retlw	40
  2388     074B  3410               	retlw	16
  2389     074C  3400               	retlw	0
  2390     074D  3402               	retlw	2
  2391     074E  3401               	retlw	1
  2392     074F  3451               	retlw	81
  2393     0750  3409               	retlw	9
  2394     0751  3406               	retlw	6
  2395     0752  343E               	retlw	62
  2396     0753  3441               	retlw	65
  2397     0754  345D               	retlw	93
  2398     0755  3455               	retlw	85
  2399     0756  341E               	retlw	30
  2400     0757  3400               	retlw	0
  2401     0758  3401               	retlw	1
  2402     0759  347D               	retlw	125
  2403     075A  3401               	retlw	1
  2404     075B  3400               	retlw	0
  2405     075C  3408               	retlw	8
  2406     075D  3410               	retlw	16
  2407     075E  3450               	retlw	80
  2408     075F  3410               	retlw	16
  2409     0760  340C               	retlw	12
  2410     0761  3438               	retlw	56
  2411     0762  3420               	retlw	32
  2412     0763  3438               	retlw	56
  2413     0764  3410               	retlw	16
  2414     0765  3418               	retlw	24
  2415     0766  3408               	retlw	8
  2416     0767  3412               	retlw	18
  2417     0768  3413               	retlw	19
  2418     0769  3412               	retlw	18
  2419     076A  340C               	retlw	12
  2420     076B  3400               	retlw	0
  2421     076C  3431               	retlw	49
  2422     076D  3449               	retlw	73
  2423     076E  345E               	retlw	94
  2424     076F  3448               	retlw	72
  2425     0770  3400               	retlw	0
  2426     0771  3432               	retlw	50
  2427     0772  344B               	retlw	75
  2428     0773  344E               	retlw	78
  2429     0774  3448               	retlw	72
  2430     0775  3400               	retlw	0
  2431     0776  3431               	retlw	49
  2432     0777  3449               	retlw	73
  2433     0778  344E               	retlw	78
  2434     0779  3448               	retlw	72
  2435     077A  3400               	retlw	0
  2436     077B  3420               	retlw	32
  2437     077C  3424               	retlw	36
  2438     077D  3424               	retlw	36
  2439     077E  3438               	retlw	56
  2440     077F  3470               	retlw	112
  2441     0780  3408               	retlw	8
  2442     0781  340C               	retlw	12
  2443     0782  340A               	retlw	10
  2444     0783  3404               	retlw	4
  2445     0784  3400               	retlw	0
  2446     0785  3440               	retlw	64
  2447     0786  3440               	retlw	64
  2448     0787  3438               	retlw	56
  2449     0788  3400               	retlw	0
  2450     0789  3400               	retlw	0
  2451     078A  3440               	retlw	64
  2452     078B  3440               	retlw	64
  2453     078C  343A               	retlw	58
  2454     078D  3400               	retlw	0
  2455     078E  3408               	retlw	8
  2456     078F  3410               	retlw	16
  2457     0790  3412               	retlw	18
  2458     0791  3412               	retlw	18
  2459     0792  3408               	retlw	8
  2460     0793  3438               	retlw	56
  2461     0794  3420               	retlw	32
  2462     0795  343A               	retlw	58
  2463     0796  3411               	retlw	17
  2464     0797  341A               	retlw	26
  2465     0798  3430               	retlw	48
  2466     0799  3440               	retlw	64
  2467     079A  3444               	retlw	68
  2468     079B  3440               	retlw	64
  2469     079C  3438               	retlw	56
  2470     079D  3420               	retlw	32
  2471     079E  3444               	retlw	68
  2472     079F  344A               	retlw	74
  2473     07A0  343C               	retlw	60
  2474     07A1  3400               	retlw	0
  2475     07A2  3460               	retlw	96
  2476     07A3  3440               	retlw	64
  2477     07A4  3448               	retlw	72
  2478     07A5  3455               	retlw	85
  2479     07A6  3478               	retlw	120
  2480     07A7  3420               	retlw	32
  2481     07A8  343E               	retlw	62
  2482     07A9  3428               	retlw	40
  2483     07AA  3428               	retlw	40
  2484     07AB  3430               	retlw	48
  2485     07AC  3400               	retlw	0
  2486     07AD  3438               	retlw	56
  2487     07AE  344C               	retlw	76
  2488     07AF  344A               	retlw	74
  2489     07B0  344A               	retlw	74
  2490     07B1  3460               	retlw	96
  2491     07B2  3440               	retlw	64
  2492     07B3  3449               	retlw	73
  2493     07B4  3455               	retlw	85
  2494     07B5  3479               	retlw	121
  2495     07B6  3408               	retlw	8
  2496     07B7  3414               	retlw	20
  2497     07B8  3450               	retlw	80
  2498     07B9  3454               	retlw	84
  2499     07BA  340A               	retlw	10
  2500     07BB  3400               	retlw	0
  2501     07BC  3420               	retlw	32
  2502     07BD  3425               	retlw	37
  2503     07BE  3424               	retlw	36
  2504     07BF  3438               	retlw	56
  2505     07C0  3438               	retlw	56
  2506     07C1  3420               	retlw	32
  2507     07C2  343C               	retlw	60
  2508     07C3  3414               	retlw	20
  2509     07C4  341C               	retlw	28
  2510     07C5  3430               	retlw	48
  2511     07C6  3440               	retlw	64
  2512     07C7  3440               	retlw	64
  2513     07C8  347E               	retlw	126
  2514     07C9  3400               	retlw	0
  2515     07CA  3400               	retlw	0
  2516     07CB  341C               	retlw	28
  2517     07CC  3424               	retlw	36
  2518     07CD  3424               	retlw	36
  2519     07CE  3418               	retlw	24
  2520     07CF  3430               	retlw	48
  2521     07D0  3448               	retlw	72
  2522     07D1  344C               	retlw	76
  2523     07D2  3440               	retlw	64
  2524     07D3  347E               	retlw	126
  2525     07D4  3400               	retlw	0
  2526     07D5  3438               	retlw	56
  2527     07D6  344C               	retlw	76
  2528     07D7  344B               	retlw	75
  2529     07D8  344A               	retlw	74
  2530     07D9  3400               	retlw	0
  2531     07DA  3400               	retlw	0
  2532     07DB  347F               	retlw	127
  2533     07DC  3441               	retlw	65
  2534     07DD  3441               	retlw	65
  2535     07DE  3402               	retlw	2
  2536     07DF  3404               	retlw	4
  2537     07E0  3408               	retlw	8
  2538     07E1  3410               	retlw	16
  2539     07E2  3420               	retlw	32
  2540     07E3  3441               	retlw	65
  2541     07E4  3441               	retlw	65
  2542     07E5  347F               	retlw	127
  2543     07E6  3400               	retlw	0
  2544     07E7  3400               	retlw	0
  2545     07E8  3404               	retlw	4
  2546     07E9  3402               	retlw	2
  2547     07EA  347F               	retlw	127
  2548     07EB  3402               	retlw	2
  2549     07EC  3404               	retlw	4
  2550     07ED  3440               	retlw	64
  2551     07EE  3440               	retlw	64
  2552     07EF  3440               	retlw	64
  2553     07F0  3440               	retlw	64
  2554     07F1  3440               	retlw	64
  2555     07F2  3400               	retlw	0
  2556     07F3  3407               	retlw	7
  2557     07F4  340B               	retlw	11
  2558     07F5  3400               	retlw	0
  2559     07F6  3400               	retlw	0
  2560     07F7  3400               	retlw	0
  2561     07F8  3400               	retlw	0
  2562     07F9  3400               	retlw	0
  2563     07FA  343F               	retlw	63
  2564     07FB  3420               	retlw	32
  2565     07FC  3410               	retlw	16
  2566     07FD  3410               	retlw	16
  2567     07FE  344C               	retlw	76
  2568     07FF  3410               	retlw	16
  2569     0800  3410               	retlw	16
  2570     0801  3410               	retlw	16
  2571     0802  3411               	retlw	17
  2572     0803  340D               	retlw	13
  2573     0804  3410               	retlw	16
  2574     0805  3410               	retlw	16
  2575     0806  3410               	retlw	16
  2576     0807  3412               	retlw	18
  2577     0808  341B               	retlw	27
  2578     0809  3412               	retlw	18
  2579     080A  3410               	retlw	16
  2580     080B  3410               	retlw	16
  2581     080C  3414               	retlw	20
  2582     080D  3452               	retlw	82
  2583     080E  3412               	retlw	18
  2584     080F  340C               	retlw	12
  2585     0810  3410               	retlw	16
  2586     0811  3414               	retlw	20
  2587     0812  3413               	retlw	19
  2588     0813  3412               	retlw	18
  2589     0814  340C               	retlw	12
  2590     0815  3410               	retlw	16
  2591     0816  3414               	retlw	20
  2592     0817  3412               	retlw	18
  2593     0818  3412               	retlw	18
  2594     0819  340C               	retlw	12
  2595     081A  3400               	retlw	0
  2596     081B  3420               	retlw	32
  2597     081C  3424               	retlw	36
  2598     081D  3424               	retlw	36
  2599     081E  3438               	retlw	56
  2600     081F  3400               	retlw	0
  2601     0820  3420               	retlw	32
  2602     0821  3425               	retlw	37
  2603     0822  3424               	retlw	36
  2604     0823  3438               	retlw	56
  2605     0824  3400               	retlw	0
  2606     0825  3440               	retlw	64
  2607     0826  3440               	retlw	64
  2608     0827  3438               	retlw	56
  2609     0828  3410               	retlw	16
  2610     0829  3400               	retlw	0
  2611     082A  3440               	retlw	64
  2612     082B  3440               	retlw	64
  2613     082C  343A               	retlw	58
  2614     082D  3410               	retlw	16
  2615     082E  3438               	retlw	56
  2616     082F  3420               	retlw	32
  2617     0830  3438               	retlw	56
  2618     0831  3420               	retlw	32
  2619     0832  3418               	retlw	24
  2620     0833  3438               	retlw	56
  2621     0834  3422               	retlw	34
  2622     0835  343B               	retlw	59
  2623     0836  3422               	retlw	34
  2624     0837  3418               	retlw	24
  2625     0838  3438               	retlw	56
  2626     0839  3428               	retlw	40
  2627     083A  3424               	retlw	36
  2628     083B  3424               	retlw	36
  2629     083C  3418               	retlw	24
  2630     083D  3438               	retlw	56
  2631     083E  3428               	retlw	40
  2632     083F  3424               	retlw	36
  2633     0840  3425               	retlw	37
  2634     0841  3418               	retlw	24
  2635     0842  3420               	retlw	32
  2636     0843  343E               	retlw	62
  2637     0844  3428               	retlw	40
  2638     0845  3428               	retlw	40
  2639     0846  3430               	retlw	48
  2640     0847  3420               	retlw	32
  2641     0848  343E               	retlw	62
  2642     0849  3428               	retlw	40
  2643     084A  342A               	retlw	42
  2644     084B  3430               	retlw	48
  2645     084C  3420               	retlw	32
  2646     084D  3428               	retlw	40
  2647     084E  343C               	retlw	60
  2648     084F  343C               	retlw	60
  2649     0850  3420               	retlw	32
  2650     0851  3420               	retlw	32
  2651     0852  3428               	retlw	40
  2652     0853  343C               	retlw	60
  2653     0854  343D               	retlw	61
  2654     0855  3420               	retlw	32
  2655     0856  3420               	retlw	32
  2656     0857  3420               	retlw	32
  2657     0858  3428               	retlw	40
  2658     0859  3435               	retlw	53
  2659     085A  341C               	retlw	28
  2660     085B  3420               	retlw	32
  2661     085C  3420               	retlw	32
  2662     085D  3429               	retlw	41
  2663     085E  3435               	retlw	53
  2664     085F  341D               	retlw	29
  2665     0860  3420               	retlw	32
  2666     0861  342C               	retlw	44
  2667     0862  342A               	retlw	42
  2668     0863  3411               	retlw	17
  2669     0864  3421               	retlw	33
  2670     0865  3420               	retlw	32
  2671     0866  3420               	retlw	32
  2672     0867  343E               	retlw	62
  2673     0868  3420               	retlw	32
  2674     0869  3420               	retlw	32
  2675     086A  3420               	retlw	32
  2676     086B  3430               	retlw	48
  2677     086C  3428               	retlw	40
  2678     086D  3428               	retlw	40
  2679     086E  3410               	retlw	16
  2680     086F  3420               	retlw	32
  2681     0870  3420               	retlw	32
  2682     0871  341A               	retlw	26
  2683     0872  3420               	retlw	32
  2684     0873  3420               	retlw	32
  2685     0874  3410               	retlw	16
  2686     0875  3450               	retlw	80
  2687     0876  344C               	retlw	76
  2688     0877  3450               	retlw	80
  2689     0878  3410               	retlw	16
  2690     0879  3400               	retlw	0
  2691     087A  3408               	retlw	8
  2692     087B  3436               	retlw	54
  2693     087C  3441               	retlw	65
  2694     087D  3400               	retlw	0
  2695     087E  3400               	retlw	0
  2696     087F  3400               	retlw	0
  2697     0880  3477               	retlw	119
  2698     0881  3400               	retlw	0
  2699     0882  3400               	retlw	0
  2700     0883  3400               	retlw	0
  2701     0884  3441               	retlw	65
  2702     0885  3436               	retlw	54
  2703     0886  3408               	retlw	8
  2704     0887  3400               	retlw	0
  2705     0888  3408               	retlw	8
  2706     0889  3404               	retlw	4
  2707     088A  3408               	retlw	8
  2708     088B  3410               	retlw	16
  2709     088C  3408               	retlw	8
  2710     088D  342A               	retlw	42
  2711     088E  3455               	retlw	85
  2712     088F  342A               	retlw	42
  2713     0890  3455               	retlw	85
  2714     0891  342A               	retlw	42
  2715     0892                     __end_of_arabic:
  2716     0892                     _ascii:
  2717     0892  3408               	retlw	8
  2718     0893  341C               	retlw	28
  2719     0894  343E               	retlw	62
  2720     0895  347F               	retlw	127
  2721     0896  3400               	retlw	0
  2722     0897  3430               	retlw	48
  2723     0898  3435               	retlw	53
  2724     0899  3448               	retlw	72
  2725     089A  3440               	retlw	64
  2726     089B  3430               	retlw	48
  2727     089C  3445               	retlw	69
  2728     089D  3429               	retlw	41
  2729     089E  3411               	retlw	17
  2730     089F  3421               	retlw	33
  2731     08A0  347D               	retlw	125
  2732     08A1  347D               	retlw	125
  2733     08A2  3409               	retlw	9
  2734     08A3  3405               	retlw	5
  2735     08A4  3405               	retlw	5
  2736     08A5  3479               	retlw	121
  2737     08A6  347D               	retlw	125
  2738     08A7  3409               	retlw	9
  2739     08A8  3411               	retlw	17
  2740     08A9  3421               	retlw	33
  2741     08AA  347D               	retlw	125
  2742     08AB  3438               	retlw	56
  2743     08AC  3444               	retlw	68
  2744     08AD  3444               	retlw	68
  2745     08AE  3438               	retlw	56
  2746     08AF  3444               	retlw	68
  2747     08B0  347E               	retlw	126
  2748     08B1  3401               	retlw	1
  2749     08B2  3429               	retlw	41
  2750     08B3  342E               	retlw	46
  2751     08B4  3410               	retlw	16
  2752     08B5  3430               	retlw	48
  2753     08B6  344A               	retlw	74
  2754     08B7  344D               	retlw	77
  2755     08B8  3449               	retlw	73
  2756     08B9  3430               	retlw	48
  2757     08BA  3460               	retlw	96
  2758     08BB  3450               	retlw	80
  2759     08BC  3448               	retlw	72
  2760     08BD  3450               	retlw	80
  2761     08BE  3460               	retlw	96
  2762     08BF  341E               	retlw	30
  2763     08C0  3404               	retlw	4
  2764     08C1  3404               	retlw	4
  2765     08C2  3438               	retlw	56
  2766     08C3  3440               	retlw	64
  2767     08C4  343E               	retlw	62
  2768     08C5  3449               	retlw	73
  2769     08C6  3449               	retlw	73
  2770     08C7  3449               	retlw	73
  2771     08C8  343E               	retlw	62
  2772     08C9  3462               	retlw	98
  2773     08CA  3414               	retlw	20
  2774     08CB  3408               	retlw	8
  2775     08CC  3410               	retlw	16
  2776     08CD  3460               	retlw	96
  2777     08CE  3440               	retlw	64
  2778     08CF  343C               	retlw	60
  2779     08D0  3420               	retlw	32
  2780     08D1  3420               	retlw	32
  2781     08D2  341C               	retlw	28
  2782     08D3  3408               	retlw	8
  2783     08D4  347C               	retlw	124
  2784     08D5  3404               	retlw	4
  2785     08D6  347C               	retlw	124
  2786     08D7  3402               	retlw	2
  2787     08D8  3438               	retlw	56
  2788     08D9  3444               	retlw	68
  2789     08DA  3444               	retlw	68
  2790     08DB  343C               	retlw	60
  2791     08DC  3404               	retlw	4
  2792     08DD  3441               	retlw	65
  2793     08DE  3463               	retlw	99
  2794     08DF  3455               	retlw	85
  2795     08E0  3449               	retlw	73
  2796     08E1  3441               	retlw	65
  2797     08E2  3410               	retlw	16
  2798     08E3  3408               	retlw	8
  2799     08E4  3478               	retlw	120
  2800     08E5  3408               	retlw	8
  2801     08E6  3404               	retlw	4
  2802     08E7  3418               	retlw	24
  2803     08E8  3424               	retlw	36
  2804     08E9  347E               	retlw	126
  2805     08EA  3424               	retlw	36
  2806     08EB  3418               	retlw	24
  2807     08EC  345E               	retlw	94
  2808     08ED  3461               	retlw	97
  2809     08EE  3401               	retlw	1
  2810     08EF  3461               	retlw	97
  2811     08F0  345E               	retlw	94
  2812     08F1  3478               	retlw	120
  2813     08F2  3414               	retlw	20
  2814     08F3  3415               	retlw	21
  2815     08F4  3414               	retlw	20
  2816     08F5  3478               	retlw	120
  2817     08F6  3438               	retlw	56
  2818     08F7  3444               	retlw	68
  2819     08F8  3445               	retlw	69
  2820     08F9  343C               	retlw	60
  2821     08FA  3440               	retlw	64
  2822     08FB  3478               	retlw	120
  2823     08FC  3415               	retlw	21
  2824     08FD  3414               	retlw	20
  2825     08FE  3415               	retlw	21
  2826     08FF  3478               	retlw	120
  2827     0900  3438               	retlw	56
  2828     0901  3445               	retlw	69
  2829     0902  3444               	retlw	68
  2830     0903  343D               	retlw	61
  2831     0904  3440               	retlw	64
  2832     0905  343C               	retlw	60
  2833     0906  3443               	retlw	67
  2834     0907  3442               	retlw	66
  2835     0908  3443               	retlw	67
  2836     0909  343C               	retlw	60
  2837     090A  3438               	retlw	56
  2838     090B  3445               	retlw	69
  2839     090C  3444               	retlw	68
  2840     090D  3445               	retlw	69
  2841     090E  3438               	retlw	56
  2842     090F  343C               	retlw	60
  2843     0910  3441               	retlw	65
  2844     0911  3440               	retlw	64
  2845     0912  3441               	retlw	65
  2846     0913  343C               	retlw	60
  2847     0914  3438               	retlw	56
  2848     0915  3442               	retlw	66
  2849     0916  3440               	retlw	64
  2850     0917  3442               	retlw	66
  2851     0918  3438               	retlw	56
  2852     0919  3408               	retlw	8
  2853     091A  3408               	retlw	8
  2854     091B  342A               	retlw	42
  2855     091C  341C               	retlw	28
  2856     091D  3408               	retlw	8
  2857     091E  3420               	retlw	32
  2858     091F  347E               	retlw	126
  2859     0920  3402               	retlw	2
  2860     0921  3402               	retlw	2
  2861     0922  3402               	retlw	2
  2862     0923  3412               	retlw	18
  2863     0924  3419               	retlw	25
  2864     0925  3415               	retlw	21
  2865     0926  3412               	retlw	18
  2866     0927  3400               	retlw	0
  2867     0928  3448               	retlw	72
  2868     0929  347E               	retlw	126
  2869     092A  3449               	retlw	73
  2870     092B  3441               	retlw	65
  2871     092C  3442               	retlw	66
  2872     092D  3401               	retlw	1
  2873     092E  3412               	retlw	18
  2874     092F  347C               	retlw	124
  2875     0930  3412               	retlw	18
  2876     0931  3401               	retlw	1
  2877     0932  3400               	retlw	0
  2878     0933  3400               	retlw	0
  2879     0934  3400               	retlw	0
  2880     0935  3400               	retlw	0
  2881     0936  3400               	retlw	0
  2882     0937  3400               	retlw	0
  2883     0938  3400               	retlw	0
  2884     0939  345F               	retlw	95
  2885     093A  3400               	retlw	0
  2886     093B  3400               	retlw	0
  2887     093C  3400               	retlw	0
  2888     093D  3403               	retlw	3
  2889     093E  3400               	retlw	0
  2890     093F  3403               	retlw	3
  2891     0940  3400               	retlw	0
  2892     0941  3414               	retlw	20
  2893     0942  347F               	retlw	127
  2894     0943  3414               	retlw	20
  2895     0944  347F               	retlw	127
  2896     0945  3414               	retlw	20
  2897     0946  3424               	retlw	36
  2898     0947  342A               	retlw	42
  2899     0948  347F               	retlw	127
  2900     0949  342A               	retlw	42
  2901     094A  3412               	retlw	18
  2902     094B  3423               	retlw	35
  2903     094C  3413               	retlw	19
  2904     094D  3408               	retlw	8
  2905     094E  3464               	retlw	100
  2906     094F  3462               	retlw	98
  2907     0950  3436               	retlw	54
  2908     0951  3449               	retlw	73
  2909     0952  3456               	retlw	86
  2910     0953  3420               	retlw	32
  2911     0954  3450               	retlw	80
  2912     0955  3400               	retlw	0
  2913     0956  340B               	retlw	11
  2914     0957  3407               	retlw	7
  2915     0958  3400               	retlw	0
  2916     0959  3400               	retlw	0
  2917     095A  3400               	retlw	0
  2918     095B  3400               	retlw	0
  2919     095C  343E               	retlw	62
  2920     095D  3441               	retlw	65
  2921     095E  3400               	retlw	0
  2922     095F  3400               	retlw	0
  2923     0960  3441               	retlw	65
  2924     0961  343E               	retlw	62
  2925     0962  3400               	retlw	0
  2926     0963  3400               	retlw	0
  2927     0964  3408               	retlw	8
  2928     0965  342A               	retlw	42
  2929     0966  341C               	retlw	28
  2930     0967  342A               	retlw	42
  2931     0968  3408               	retlw	8
  2932     0969  3408               	retlw	8
  2933     096A  3408               	retlw	8
  2934     096B  343E               	retlw	62
  2935     096C  3408               	retlw	8
  2936     096D  3408               	retlw	8
  2937     096E  3400               	retlw	0
  2938     096F  3458               	retlw	88
  2939     0970  3438               	retlw	56
  2940     0971  3400               	retlw	0
  2941     0972  3400               	retlw	0
  2942     0973  3408               	retlw	8
  2943     0974  3408               	retlw	8
  2944     0975  3408               	retlw	8
  2945     0976  3408               	retlw	8
  2946     0977  3408               	retlw	8
  2947     0978  3400               	retlw	0
  2948     0979  3430               	retlw	48
  2949     097A  3430               	retlw	48
  2950     097B  3400               	retlw	0
  2951     097C  3400               	retlw	0
  2952     097D  3420               	retlw	32
  2953     097E  3410               	retlw	16
  2954     097F  3408               	retlw	8
  2955     0980  3404               	retlw	4
  2956     0981  3402               	retlw	2
  2957     0982  343E               	retlw	62
  2958     0983  3451               	retlw	81
  2959     0984  3449               	retlw	73
  2960     0985  3445               	retlw	69
  2961     0986  343E               	retlw	62
  2962     0987  3400               	retlw	0
  2963     0988  3442               	retlw	66
  2964     0989  347F               	retlw	127
  2965     098A  3440               	retlw	64
  2966     098B  3400               	retlw	0
  2967     098C  3462               	retlw	98
  2968     098D  3451               	retlw	81
  2969     098E  3449               	retlw	73
  2970     098F  3449               	retlw	73
  2971     0990  3446               	retlw	70
  2972     0991  3422               	retlw	34
  2973     0992  3441               	retlw	65
  2974     0993  3449               	retlw	73
  2975     0994  3449               	retlw	73
  2976     0995  3436               	retlw	54
  2977     0996  3418               	retlw	24
  2978     0997  3414               	retlw	20
  2979     0998  3412               	retlw	18
  2980     0999  347F               	retlw	127
  2981     099A  3410               	retlw	16
  2982     099B  3427               	retlw	39
  2983     099C  3445               	retlw	69
  2984     099D  3445               	retlw	69
  2985     099E  3445               	retlw	69
  2986     099F  3439               	retlw	57
  2987     09A0  343C               	retlw	60
  2988     09A1  344A               	retlw	74
  2989     09A2  3449               	retlw	73
  2990     09A3  3449               	retlw	73
  2991     09A4  3430               	retlw	48
  2992     09A5  3401               	retlw	1
  2993     09A6  3471               	retlw	113
  2994     09A7  3409               	retlw	9
  2995     09A8  3405               	retlw	5
  2996     09A9  3403               	retlw	3
  2997     09AA  3436               	retlw	54
  2998     09AB  3449               	retlw	73
  2999     09AC  3449               	retlw	73
  3000     09AD  3449               	retlw	73
  3001     09AE  3437               	retlw	55
  3002     09AF  3406               	retlw	6
  3003     09B0  3449               	retlw	73
  3004     09B1  3449               	retlw	73
  3005     09B2  3429               	retlw	41
  3006     09B3  341E               	retlw	30
  3007     09B4  3400               	retlw	0
  3008     09B5  3436               	retlw	54
  3009     09B6  3436               	retlw	54
  3010     09B7  3400               	retlw	0
  3011     09B8  3400               	retlw	0
  3012     09B9  3400               	retlw	0
  3013     09BA  345B               	retlw	91
  3014     09BB  343B               	retlw	59
  3015     09BC  3400               	retlw	0
  3016     09BD  3400               	retlw	0
  3017     09BE  3400               	retlw	0
  3018     09BF  3408               	retlw	8
  3019     09C0  3414               	retlw	20
  3020     09C1  3422               	retlw	34
  3021     09C2  3441               	retlw	65
  3022     09C3  3414               	retlw	20
  3023     09C4  3414               	retlw	20
  3024     09C5  3414               	retlw	20
  3025     09C6  3414               	retlw	20
  3026     09C7  3414               	retlw	20
  3027     09C8  3441               	retlw	65
  3028     09C9  3422               	retlw	34
  3029     09CA  3414               	retlw	20
  3030     09CB  3408               	retlw	8
  3031     09CC  3400               	retlw	0
  3032     09CD  3402               	retlw	2
  3033     09CE  3401               	retlw	1
  3034     09CF  3451               	retlw	81
  3035     09D0  3409               	retlw	9
  3036     09D1  3406               	retlw	6
  3037     09D2  343E               	retlw	62
  3038     09D3  3441               	retlw	65
  3039     09D4  345D               	retlw	93
  3040     09D5  3455               	retlw	85
  3041     09D6  341E               	retlw	30
  3042     09D7  347E               	retlw	126
  3043     09D8  3409               	retlw	9
  3044     09D9  3409               	retlw	9
  3045     09DA  3409               	retlw	9
  3046     09DB  347E               	retlw	126
  3047     09DC  347E               	retlw	126
  3048     09DD  3449               	retlw	73
  3049     09DE  3449               	retlw	73
  3050     09DF  3449               	retlw	73
  3051     09E0  3436               	retlw	54
  3052     09E1  343E               	retlw	62
  3053     09E2  3441               	retlw	65
  3054     09E3  3441               	retlw	65
  3055     09E4  3441               	retlw	65
  3056     09E5  3422               	retlw	34
  3057     09E6  347F               	retlw	127
  3058     09E7  3441               	retlw	65
  3059     09E8  3441               	retlw	65
  3060     09E9  3441               	retlw	65
  3061     09EA  343E               	retlw	62
  3062     09EB  347F               	retlw	127
  3063     09EC  3449               	retlw	73
  3064     09ED  3449               	retlw	73
  3065     09EE  3449               	retlw	73
  3066     09EF  3441               	retlw	65
  3067     09F0  347F               	retlw	127
  3068     09F1  3409               	retlw	9
  3069     09F2  3409               	retlw	9
  3070     09F3  3409               	retlw	9
  3071     09F4  3401               	retlw	1
  3072     09F5  343E               	retlw	62
  3073     09F6  3441               	retlw	65
  3074     09F7  3441               	retlw	65
  3075     09F8  3451               	retlw	81
  3076     09F9  3432               	retlw	50
  3077     09FA  347F               	retlw	127
  3078     09FB  3408               	retlw	8
  3079     09FC  3408               	retlw	8
  3080     09FD  3408               	retlw	8
  3081     09FE  347F               	retlw	127
  3082     09FF  3400               	retlw	0
  3083     0A00  3441               	retlw	65
  3084     0A01  347F               	retlw	127
  3085     0A02  3441               	retlw	65
  3086     0A03  3400               	retlw	0
  3087     0A04  3420               	retlw	32
  3088     0A05  3440               	retlw	64
  3089     0A06  3440               	retlw	64
  3090     0A07  3440               	retlw	64
  3091     0A08  343F               	retlw	63
  3092     0A09  347F               	retlw	127
  3093     0A0A  3408               	retlw	8
  3094     0A0B  3414               	retlw	20
  3095     0A0C  3422               	retlw	34
  3096     0A0D  3441               	retlw	65
  3097     0A0E  347F               	retlw	127
  3098     0A0F  3440               	retlw	64
  3099     0A10  3440               	retlw	64
  3100     0A11  3440               	retlw	64
  3101     0A12  3440               	retlw	64
  3102     0A13  347F               	retlw	127
  3103     0A14  3402               	retlw	2
  3104     0A15  340C               	retlw	12
  3105     0A16  3402               	retlw	2
  3106     0A17  347F               	retlw	127
  3107     0A18  347F               	retlw	127
  3108     0A19  3404               	retlw	4
  3109     0A1A  3408               	retlw	8
  3110     0A1B  3410               	retlw	16
  3111     0A1C  347F               	retlw	127
  3112     0A1D  343E               	retlw	62
  3113     0A1E  3441               	retlw	65
  3114     0A1F  3441               	retlw	65
  3115     0A20  3441               	retlw	65
  3116     0A21  343E               	retlw	62
  3117     0A22  347F               	retlw	127
  3118     0A23  3409               	retlw	9
  3119     0A24  3409               	retlw	9
  3120     0A25  3409               	retlw	9
  3121     0A26  3406               	retlw	6
  3122     0A27  343E               	retlw	62
  3123     0A28  3441               	retlw	65
  3124     0A29  3451               	retlw	81
  3125     0A2A  3421               	retlw	33
  3126     0A2B  345E               	retlw	94
  3127     0A2C  347F               	retlw	127
  3128     0A2D  3409               	retlw	9
  3129     0A2E  3419               	retlw	25
  3130     0A2F  3429               	retlw	41
  3131     0A30  3446               	retlw	70
  3132     0A31  3426               	retlw	38
  3133     0A32  3449               	retlw	73
  3134     0A33  3449               	retlw	73
  3135     0A34  3449               	retlw	73
  3136     0A35  3432               	retlw	50
  3137     0A36  3401               	retlw	1
  3138     0A37  3401               	retlw	1
  3139     0A38  347F               	retlw	127
  3140     0A39  3401               	retlw	1
  3141     0A3A  3401               	retlw	1
  3142     0A3B  343F               	retlw	63
  3143     0A3C  3440               	retlw	64
  3144     0A3D  3440               	retlw	64
  3145     0A3E  3440               	retlw	64
  3146     0A3F  343F               	retlw	63
  3147     0A40  3407               	retlw	7
  3148     0A41  3418               	retlw	24
  3149     0A42  3460               	retlw	96
  3150     0A43  3418               	retlw	24
  3151     0A44  3407               	retlw	7
  3152     0A45  347F               	retlw	127
  3153     0A46  3420               	retlw	32
  3154     0A47  3418               	retlw	24
  3155     0A48  3420               	retlw	32
  3156     0A49  347F               	retlw	127
  3157     0A4A  3463               	retlw	99
  3158     0A4B  3414               	retlw	20
  3159     0A4C  3408               	retlw	8
  3160     0A4D  3414               	retlw	20
  3161     0A4E  3463               	retlw	99
  3162     0A4F  3403               	retlw	3
  3163     0A50  3404               	retlw	4
  3164     0A51  3478               	retlw	120
  3165     0A52  3404               	retlw	4
  3166     0A53  3403               	retlw	3
  3167     0A54  3461               	retlw	97
  3168     0A55  3451               	retlw	81
  3169     0A56  3449               	retlw	73
  3170     0A57  3445               	retlw	69
  3171     0A58  3443               	retlw	67
  3172     0A59  3400               	retlw	0
  3173     0A5A  3400               	retlw	0
  3174     0A5B  347F               	retlw	127
  3175     0A5C  3441               	retlw	65
  3176     0A5D  3441               	retlw	65
  3177     0A5E  3402               	retlw	2
  3178     0A5F  3404               	retlw	4
  3179     0A60  3408               	retlw	8
  3180     0A61  3410               	retlw	16
  3181     0A62  3420               	retlw	32
  3182     0A63  3441               	retlw	65
  3183     0A64  3441               	retlw	65
  3184     0A65  347F               	retlw	127
  3185     0A66  3400               	retlw	0
  3186     0A67  3400               	retlw	0
  3187     0A68  3404               	retlw	4
  3188     0A69  3402               	retlw	2
  3189     0A6A  347F               	retlw	127
  3190     0A6B  3402               	retlw	2
  3191     0A6C  3404               	retlw	4
  3192     0A6D  3440               	retlw	64
  3193     0A6E  3440               	retlw	64
  3194     0A6F  3440               	retlw	64
  3195     0A70  3440               	retlw	64
  3196     0A71  3440               	retlw	64
  3197     0A72  3400               	retlw	0
  3198     0A73  3407               	retlw	7
  3199     0A74  340B               	retlw	11
  3200     0A75  3400               	retlw	0
  3201     0A76  3400               	retlw	0
  3202     0A77  3438               	retlw	56
  3203     0A78  3444               	retlw	68
  3204     0A79  3444               	retlw	68
  3205     0A7A  343C               	retlw	60
  3206     0A7B  3440               	retlw	64
  3207     0A7C  347F               	retlw	127
  3208     0A7D  3448               	retlw	72
  3209     0A7E  3444               	retlw	68
  3210     0A7F  3444               	retlw	68
  3211     0A80  3438               	retlw	56
  3212     0A81  3438               	retlw	56
  3213     0A82  3444               	retlw	68
  3214     0A83  3444               	retlw	68
  3215     0A84  3444               	retlw	68
  3216     0A85  3444               	retlw	68
  3217     0A86  3438               	retlw	56
  3218     0A87  3444               	retlw	68
  3219     0A88  3444               	retlw	68
  3220     0A89  3448               	retlw	72
  3221     0A8A  347F               	retlw	127
  3222     0A8B  3438               	retlw	56
  3223     0A8C  3454               	retlw	84
  3224     0A8D  3454               	retlw	84
  3225     0A8E  3454               	retlw	84
  3226     0A8F  3408               	retlw	8
  3227     0A90  3408               	retlw	8
  3228     0A91  347E               	retlw	126
  3229     0A92  3409               	retlw	9
  3230     0A93  3402               	retlw	2
  3231     0A94  3400               	retlw	0
  3232     0A95  3408               	retlw	8
  3233     0A96  3414               	retlw	20
  3234     0A97  3454               	retlw	84
  3235     0A98  3454               	retlw	84
  3236     0A99  343C               	retlw	60
  3237     0A9A  347F               	retlw	127
  3238     0A9B  3408               	retlw	8
  3239     0A9C  3404               	retlw	4
  3240     0A9D  3404               	retlw	4
  3241     0A9E  3478               	retlw	120
  3242     0A9F  3400               	retlw	0
  3243     0AA0  3444               	retlw	68
  3244     0AA1  347D               	retlw	125
  3245     0AA2  3440               	retlw	64
  3246     0AA3  3400               	retlw	0
  3247     0AA4  3420               	retlw	32
  3248     0AA5  3440               	retlw	64
  3249     0AA6  3444               	retlw	68
  3250     0AA7  343D               	retlw	61
  3251     0AA8  3400               	retlw	0
  3252     0AA9  3400               	retlw	0
  3253     0AAA  347F               	retlw	127
  3254     0AAB  3410               	retlw	16
  3255     0AAC  3428               	retlw	40
  3256     0AAD  3444               	retlw	68
  3257     0AAE  3400               	retlw	0
  3258     0AAF  3441               	retlw	65
  3259     0AB0  347F               	retlw	127
  3260     0AB1  3440               	retlw	64
  3261     0AB2  3400               	retlw	0
  3262     0AB3  3478               	retlw	120
  3263     0AB4  3404               	retlw	4
  3264     0AB5  3418               	retlw	24
  3265     0AB6  3404               	retlw	4
  3266     0AB7  3478               	retlw	120
  3267     0AB8  347C               	retlw	124
  3268     0AB9  3408               	retlw	8
  3269     0ABA  3404               	retlw	4
  3270     0ABB  3404               	retlw	4
  3271     0ABC  3478               	retlw	120
  3272     0ABD  3438               	retlw	56
  3273     0ABE  3444               	retlw	68
  3274     0ABF  3444               	retlw	68
  3275     0AC0  3444               	retlw	68
  3276     0AC1  3438               	retlw	56
  3277     0AC2  347C               	retlw	124
  3278     0AC3  3414               	retlw	20
  3279     0AC4  3424               	retlw	36
  3280     0AC5  3424               	retlw	36
  3281     0AC6  3418               	retlw	24
  3282     0AC7  3418               	retlw	24
  3283     0AC8  3424               	retlw	36
  3284     0AC9  3414               	retlw	20
  3285     0ACA  347C               	retlw	124
  3286     0ACB  3440               	retlw	64
  3287     0ACC  3400               	retlw	0
  3288     0ACD  347C               	retlw	124
  3289     0ACE  3408               	retlw	8
  3290     0ACF  3404               	retlw	4
  3291     0AD0  3404               	retlw	4
  3292     0AD1  3448               	retlw	72
  3293     0AD2  3454               	retlw	84
  3294     0AD3  3454               	retlw	84
  3295     0AD4  3454               	retlw	84
  3296     0AD5  3420               	retlw	32
  3297     0AD6  3404               	retlw	4
  3298     0AD7  343E               	retlw	62
  3299     0AD8  3444               	retlw	68
  3300     0AD9  3420               	retlw	32
  3301     0ADA  3400               	retlw	0
  3302     0ADB  343C               	retlw	60
  3303     0ADC  3440               	retlw	64
  3304     0ADD  3440               	retlw	64
  3305     0ADE  3420               	retlw	32
  3306     0ADF  347C               	retlw	124
  3307     0AE0  341C               	retlw	28
  3308     0AE1  3420               	retlw	32
  3309     0AE2  3440               	retlw	64
  3310     0AE3  3420               	retlw	32
  3311     0AE4  341C               	retlw	28
  3312     0AE5  343C               	retlw	60
  3313     0AE6  3440               	retlw	64
  3314     0AE7  3430               	retlw	48
  3315     0AE8  3440               	retlw	64
  3316     0AE9  343C               	retlw	60
  3317     0AEA  3444               	retlw	68
  3318     0AEB  3428               	retlw	40
  3319     0AEC  3410               	retlw	16
  3320     0AED  3428               	retlw	40
  3321     0AEE  3444               	retlw	68
  3322     0AEF  3404               	retlw	4
  3323     0AF0  3448               	retlw	72
  3324     0AF1  3430               	retlw	48
  3325     0AF2  3408               	retlw	8
  3326     0AF3  3404               	retlw	4
  3327     0AF4  3444               	retlw	68
  3328     0AF5  3464               	retlw	100
  3329     0AF6  3454               	retlw	84
  3330     0AF7  344C               	retlw	76
  3331     0AF8  3444               	retlw	68
  3332     0AF9  3400               	retlw	0
  3333     0AFA  3408               	retlw	8
  3334     0AFB  3436               	retlw	54
  3335     0AFC  3441               	retlw	65
  3336     0AFD  3400               	retlw	0
  3337     0AFE  3400               	retlw	0
  3338     0AFF  3400               	retlw	0
  3339     0B00  3477               	retlw	119
  3340     0B01  3400               	retlw	0
  3341     0B02  3400               	retlw	0
  3342     0B03  3400               	retlw	0
  3343     0B04  3441               	retlw	65
  3344     0B05  3436               	retlw	54
  3345     0B06  3408               	retlw	8
  3346     0B07  3400               	retlw	0
  3347     0B08  3408               	retlw	8
  3348     0B09  3404               	retlw	4
  3349     0B0A  3408               	retlw	8
  3350     0B0B  3410               	retlw	16
  3351     0B0C  3408               	retlw	8
  3352     0B0D  342A               	retlw	42
  3353     0B0E  3455               	retlw	85
  3354     0B0F  342A               	retlw	42
  3355     0B10  3455               	retlw	85
  3356     0B11  342A               	retlw	42
  3357     0B12                     __end_of_ascii:
  3358     0B12                     _adcBounds:
  3359     0B12  3400               	retlw	0
  3360     0B13  3400               	retlw	0
  3361     0B14  3419               	retlw	25
  3362     0B15  3400               	retlw	0
  3363     0B16  3432               	retlw	50
  3364     0B17  3400               	retlw	0
  3365     0B18  344B               	retlw	75
  3366     0B19  3400               	retlw	0
  3367     0B1A  3464               	retlw	100
  3368     0B1B  3400               	retlw	0
  3369     0B1C  347D               	retlw	125
  3370     0B1D  3400               	retlw	0
  3371     0B1E  3496               	retlw	150
  3372     0B1F  3400               	retlw	0
  3373     0B20  34AF               	retlw	175
  3374     0B21  3400               	retlw	0
  3375     0B22  34C8               	retlw	200
  3376     0B23  3400               	retlw	0
  3377     0B24  34E1               	retlw	225
  3378     0B25  3400               	retlw	0
  3379     0B26  34FA               	retlw	250
  3380     0B27  3400               	retlw	0
  3381     0B28  3413               	retlw	19
  3382     0B29  3401               	retlw	1
  3383     0B2A  342C               	retlw	44
  3384     0B2B  3401               	retlw	1
  3385     0B2C  3445               	retlw	69
  3386     0B2D  3401               	retlw	1
  3387     0B2E  345E               	retlw	94
  3388     0B2F  3401               	retlw	1
  3389     0B30  3477               	retlw	119
  3390     0B31  3401               	retlw	1
  3391     0B32  3490               	retlw	144
  3392     0B33  3401               	retlw	1
  3393     0B34  34A9               	retlw	169
  3394     0B35  3401               	retlw	1
  3395     0B36  34C2               	retlw	194
  3396     0B37  3401               	retlw	1
  3397     0B38  34DB               	retlw	219
  3398     0B39  3401               	retlw	1
  3399     0B3A  34F4               	retlw	244
  3400     0B3B  3401               	retlw	1
  3401     0B3C  340D               	retlw	13
  3402     0B3D  3402               	retlw	2
  3403     0B3E  3426               	retlw	38
  3404     0B3F  3402               	retlw	2
  3405     0B40  343F               	retlw	63
  3406     0B41  3402               	retlw	2
  3407     0B42  3458               	retlw	88
  3408     0B43  3402               	retlw	2
  3409     0B44  3471               	retlw	113
  3410     0B45  3402               	retlw	2
  3411     0B46  348A               	retlw	138
  3412     0B47  3402               	retlw	2
  3413     0B48  34A3               	retlw	163
  3414     0B49  3402               	retlw	2
  3415     0B4A  34BC               	retlw	188
  3416     0B4B  3402               	retlw	2
  3417     0B4C  34D5               	retlw	213
  3418     0B4D  3402               	retlw	2
  3419     0B4E  34EE               	retlw	238
  3420     0B4F  3402               	retlw	2
  3421     0B50  3407               	retlw	7
  3422     0B51  3403               	retlw	3
  3423     0B52  3420               	retlw	32
  3424     0B53  3403               	retlw	3
  3425     0B54  3439               	retlw	57
  3426     0B55  3403               	retlw	3
  3427     0B56  3452               	retlw	82
  3428     0B57  3403               	retlw	3
  3429     0B58  346B               	retlw	107
  3430     0B59  3403               	retlw	3
  3431     0B5A  3484               	retlw	132
  3432     0B5B  3403               	retlw	3
  3433     0B5C  349D               	retlw	157
  3434     0B5D  3403               	retlw	3
  3435     0B5E  34B6               	retlw	182
  3436     0B5F  3403               	retlw	3
  3437     0B60  34CF               	retlw	207
  3438     0B61  3403               	retlw	3
  3439     0B62  34E8               	retlw	232
  3440     0B63  3403               	retlw	3
  3441     0B64  3401               	retlw	1
  3442     0B65  3404               	retlw	4
  3443     0B66                     __end_of_adcBounds:
  3444     0B66                     _inputLeds:
  3445     0B66  34FE               	retlw	254
  3446     0B67  34FD               	retlw	253
  3447     0B68  34FB               	retlw	251
  3448     0B69  34F7               	retlw	247
  3449     0B6A                     __end_of_inputLeds:
  3450     000E                     _TMR1	set	14
  3451     0014                     _SSPCONbits	set	20
  3452     0013                     _SSPBUF	set	19
  3453     0008                     _PORTDbits	set	8
  3454     0007                     _PORTCbits	set	7
  3455     0006                     _PORTBbits	set	6
  3456     001F                     _ADCON0bits	set	31
  3457     0010                     _T1CONbits	set	16
  3458     000B                     _INTCONbits	set	11
  3459     0009                     _PORTE	set	9
  3460     0008                     _PORTD	set	8
  3461     0007                     _PORTC	set	7
  3462     0006                     _PORTB	set	6
  3463     0005                     _PORTA	set	5
  3464     000C                     _PIR1bits	set	12
  3465     001E                     _ADRESH	set	30
  3466     00F9                     _GO	set	249
  3467     0094                     _SSPSTATbits	set	148
  3468     0087                     _TRISCbits	set	135
  3469     009F                     _ADCON1bits	set	159
  3470     0081                     _OPTION_REGbits	set	129
  3471     0096                     _IOCBbits	set	150
  3472     008C                     _PIE1bits	set	140
  3473     009D                     _PSTRCONbits	set	157
  3474     0086                     _TRISBbits	set	134
  3475     0089                     _TRISEbits	set	137
  3476     0089                     _TRISE	set	137
  3477     0088                     _TRISD	set	136
  3478     0087                     _TRISC	set	135
  3479     0086                     _TRISB	set	134
  3480     0085                     _TRISA	set	133
  3481     008F                     _OSCCONbits	set	143
  3482     009E                     _ADRESL	set	158
  3483     0188                     _ANSELbits	set	392
  3484     0189                     _ANSELH	set	393
  3485     0188                     _ANSEL	set	392
  3486                           
  3487                           	psect	cinit
  3488     0013                     start_initialization:	
  3489                           ; #config settings
  3490                           
  3491     0013                     __initialization:
  3492                           
  3493                           ; Initialize objects allocated to BANK1
  3494     0013  1383               	bcf	3,7	;select IRP bank0
  3495     0014  30C5               	movlw	low (__pdataBANK1+37)
  3496     0015  00FD               	movwf	btemp+-1
  3497     0016  3010               	movlw	high __pidataBANK1
  3498     0017  00FE               	movwf	btemp
  3499     0018  30F1               	movlw	low __pidataBANK1
  3500     0019  00FF               	movwf	btemp+1
  3501     001A  30A0               	movlw	low __pdataBANK1
  3502     001B  0084               	movwf	4
  3503     001C  160A  118A  205E  120A  118A  	fcall	init_ram0
  3504                           
  3505                           ; Clear objects allocated to BANK3
  3506     0021  1783               	bsf	3,7	;select IRP bank2
  3507     0022  3090               	movlw	low __pbssBANK3
  3508     0023  0084               	movwf	4
  3509     0024  30E0               	movlw	low (__pbssBANK3+80)
  3510     0025  160A  118A  202B  120A  118A  	fcall	clear_ram0
  3511                           
  3512                           ; Clear objects allocated to BANK1
  3513     002A  1383               	bcf	3,7	;select IRP bank0
  3514     002B  30C5               	movlw	low __pbssBANK1
  3515     002C  0084               	movwf	4
  3516     002D  30D1               	movlw	low (__pbssBANK1+12)
  3517     002E  160A  118A  202B  120A  118A  	fcall	clear_ram0
  3518                           
  3519                           ; Clear objects allocated to BANK0
  3520     0033  01ED               	clrf	__pbssBANK0& (0+127)
  3521     0034  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  3522     0035  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  3523                           
  3524                           ; Clear objects allocated to COMMON
  3525     0036  01FD               	clrf	__pbssCOMMON& (0+127)
  3526     0037                     end_of_initialization:	
  3527                           ;End of C runtime variable initialization code
  3528                           
  3529     0037                     __end_of__initialization:
  3530     0037  0183               	clrf	3
  3531     0038  120A  158A  2C36   	ljmp	_main	;jump to C main() function
  3532                           
  3533                           	psect	bssCOMMON
  3534     007D                     __pbssCOMMON:
  3535     007D                     _state:
  3536     007D                     	ds	1
  3537                           
  3538                           	psect	bssBANK0
  3539     006D                     __pbssBANK0:
  3540     006D                     _volume:
  3541     006D                     	ds	2
  3542     006F                     _oldstate:
  3543     006F                     	ds	1
  3544                           
  3545                           	psect	bssBANK1
  3546     00C5                     __pbssBANK1:
  3547     00C5                     _final_code:
  3548     00C5                     	ds	4
  3549     00C9                     _motoraan:
  3550     00C9                     	ds	2
  3551     00CB                     _remote_counter:
  3552     00CB                     	ds	2
  3553     00CD                     _timeraan:
  3554     00CD                     	ds	2
  3555     00CF                     _num_of_lang:
  3556     00CF                     	ds	2
  3557                           
  3558                           	psect	dataBANK1
  3559     00A0                     __pdataBANK1:
  3560     00A0                     scherm_setup@F1472:
  3561     00A0                     	ds	8
  3562     00A8                     scherm_setup@F1470:
  3563     00A8                     	ds	8
  3564     00B0                     scherm_setup_lang@F1477:
  3565     00B0                     	ds	6
  3566     00B6                     scherm_setup_lang@F1475:
  3567     00B6                     	ds	6
  3568     00BC                     _inputChanged:
  3569     00BC                     	ds	2
  3570     00BE                     _miniCount:
  3571     00BE                     	ds	2
  3572     00C0                     _input:
  3573     00C0                     	ds	2
  3574     00C2                     _volumeOud:
  3575     00C2                     	ds	2
  3576     00C4                     _nummerOffset:
  3577     00C4                     	ds	1
  3578                           
  3579                           	psect	bssBANK3
  3580     0190                     __pbssBANK3:
  3581     0190                     _scherm2_buffer:
  3582     0190                     	ds	40
  3583     01B8                     _scherm1_buffer:
  3584     01B8                     	ds	40
  3585                           
  3586                           	psect	inittext
  3587     105A                     init_fetch0:	
  3588                           ;	Called with low address in FSR and high address in W
  3589                           
  3590     105A  087E               	movf	btemp,w
  3591     105B  008A               	movwf	10
  3592     105C  087F               	movf	btemp+1,w
  3593     105D  0082               	movwf	2
  3594     105E                     init_ram0:	
  3595                           ;Called with:
  3596                           ;	high address of idata address in btemp 
  3597                           ;	low address of idata address in btemp+1 
  3598                           ;	low address of data in FSR
  3599                           ;	high address + 1 of data in btemp-1
  3600                           
  3601     105E  160A  118A  205A  160A  118A  	fcall	init_fetch0
  3602     1063  0080               	movwf	0
  3603     1064  0A84               	incf	4,f
  3604     1065  0804               	movf	4,w
  3605     1066  067D               	xorwf	btemp+-1,w
  3606     1067  1903               	btfsc	3,2
  3607     1068  3400               	retlw	0
  3608     1069  0AFF               	incf	btemp+1,f
  3609     106A  1903               	btfsc	3,2
  3610     106B  0AFE               	incf	btemp,f
  3611     106C  285E               	goto	init_ram0
  3612                           
  3613                           	psect	clrtext
  3614     102B                     clear_ram0:	
  3615                           ;	Called with FSR containing the base address, and
  3616                           ;	W with the last address+1
  3617                           
  3618     102B  0064               	clrwdt	;clear the watchdog before getting into this loop
  3619     102C                     clrloop0:
  3620     102C  0180               	clrf	0	;clear RAM location pointed to by FSR
  3621     102D  0A84               	incf	4,f	;increment pointer
  3622     102E  0604               	xorwf	4,w	;XOR with final address
  3623     102F  1903               	btfsc	3,2	;have we reached the end yet?
  3624     1030  3400               	retlw	0	;all done for this memory range, return
  3625     1031  0604               	xorwf	4,w	;XOR again to restore value
  3626     1032  282C               	goto	clrloop0	;do the next byte
  3627                           
  3628                           	psect	cstackBANK1
  3629     00D1                     __pcstackBANK1:
  3630     00D1                     ?_main:
  3631     00D1                     main@argc:	
  3632                           ; 2 bytes @ 0x0
  3633                           
  3634                           
  3635                           ; 2 bytes @ 0x0
  3636     00D1                     	ds	2
  3637     00D3                     main@argv:
  3638                           
  3639                           ; 2 bytes @ 0x2
  3640     00D3                     	ds	2
  3641                           
  3642                           	psect	cstackCOMMON
  3643     0070                     __pcstackCOMMON:
  3644     0070                     ?_init_osc:
  3645     0070                     ?_ports_init:	
  3646                           ; 1 bytes @ 0x0
  3647                           
  3648     0070                     ?_pins_init:	
  3649                           ; 1 bytes @ 0x0
  3650                           
  3651     0070                     ?_interrupt_init:	
  3652                           ; 1 bytes @ 0x0
  3653                           
  3654     0070                     ?_timer_init:	
  3655                           ; 1 bytes @ 0x0
  3656                           
  3657     0070                     ?_adc_init:	
  3658                           ; 1 bytes @ 0x0
  3659                           
  3660     0070                     ?_scherm_init:	
  3661                           ; 1 bytes @ 0x0
  3662                           
  3663     0070                     ?_scherm_setup:	
  3664                           ; 1 bytes @ 0x0
  3665                           
  3666     0070                     ?_key_detection:	
  3667                           ; 1 bytes @ 0x0
  3668                           
  3669     0070                     ?_input_conversion:	
  3670                           ; 1 bytes @ 0x0
  3671                           
  3672     0070                     ?_send_buffer:	
  3673                           ; 1 bytes @ 0x0
  3674                           
  3675     0070                     ?_remote_edge_handeling:	
  3676                           ; 1 bytes @ 0x0
  3677                           
  3678     0070                     ??_remote_edge_handeling:	
  3679                           ; 1 bytes @ 0x0
  3680                           
  3681     0070                     ?_remote_timer_handeling:	
  3682                           ; 1 bytes @ 0x0
  3683                           
  3684     0070                     ??_remote_timer_handeling:	
  3685                           ; 1 bytes @ 0x0
  3686                           
  3687     0070                     ?_rotaryHandeling:	
  3688                           ; 1 bytes @ 0x0
  3689                           
  3690     0070                     ??_rotaryHandeling:	
  3691                           ; 1 bytes @ 0x0
  3692                           
  3693     0070                     ?_screen_transmit:	
  3694                           ; 1 bytes @ 0x0
  3695                           
  3696     0070                     ?_adcHandeling:	
  3697                           ; 1 bytes @ 0x0
  3698                           
  3699     0070                     ??_adcHandeling:	
  3700                           ; 1 bytes @ 0x0
  3701                           
  3702     0070                     ?_volume_conversion:	
  3703                           ; 1 bytes @ 0x0
  3704                           
  3705     0070                     ?_pic_init:	
  3706                           ; 1 bytes @ 0x0
  3707                           
  3708     0070                     ?_ISR:	
  3709                           ; 1 bytes @ 0x0
  3710                           
  3711                           
  3712                           ; 1 bytes @ 0x0
  3713     0070                     	ds	3
  3714     0073                     adcHandeling@upperValue:
  3715                           
  3716                           ; 2 bytes @ 0x3
  3717     0073                     	ds	2
  3718     0075                     adcHandeling@lowerValue:
  3719                           
  3720                           ; 2 bytes @ 0x5
  3721     0075                     	ds	2
  3722     0077                     adcHandeling@adcValue:
  3723                           
  3724                           ; 2 bytes @ 0x7
  3725     0077                     	ds	2
  3726     0079                     ??_ISR:
  3727                           
  3728                           ; 1 bytes @ 0x9
  3729     0079                     	ds	4
  3730                           
  3731                           	psect	cstackBANK0
  3732     0020                     __pcstackBANK0:
  3733     0020                     ??_init_osc:
  3734     0020                     ??_ports_init:	
  3735                           ; 1 bytes @ 0x0
  3736                           
  3737     0020                     ??_pins_init:	
  3738                           ; 1 bytes @ 0x0
  3739                           
  3740     0020                     ??_interrupt_init:	
  3741                           ; 1 bytes @ 0x0
  3742                           
  3743     0020                     ??_timer_init:	
  3744                           ; 1 bytes @ 0x0
  3745                           
  3746     0020                     ??_adc_init:	
  3747                           ; 1 bytes @ 0x0
  3748                           
  3749     0020                     ?_spi_init:	
  3750                           ; 1 bytes @ 0x0
  3751                           
  3752     0020                     ??_screen_transmit:	
  3753                           ; 1 bytes @ 0x0
  3754                           
  3755     0020                     ??_pic_init:	
  3756                           ; 1 bytes @ 0x0
  3757                           
  3758     0020                     ?___bmul:	
  3759                           ; 1 bytes @ 0x0
  3760                           
  3761     0020                     ?___wmul:	
  3762                           ; 1 bytes @ 0x0
  3763                           
  3764     0020                     screen_transmit@c:	
  3765                           ; 2 bytes @ 0x0
  3766                           
  3767     0020                     spi_init@sdi_rx_smp:	
  3768                           ; 1 bytes @ 0x0
  3769                           
  3770     0020                     ___bmul@multiplicand:	
  3771                           ; 1 bytes @ 0x0
  3772                           
  3773     0020                     ___wmul@multiplier:	
  3774                           ; 1 bytes @ 0x0
  3775                           
  3776                           
  3777                           ; 2 bytes @ 0x0
  3778     0020                     	ds	1
  3779     0021                     ??_scherm_init:
  3780     0021                     ??_send_buffer:	
  3781                           ; 1 bytes @ 0x1
  3782                           
  3783     0021                     ??___bmul:	
  3784                           ; 1 bytes @ 0x1
  3785                           
  3786     0021                     spi_init@clock_pol:	
  3787                           ; 1 bytes @ 0x1
  3788                           
  3789     0021                     ___bmul@product:	
  3790                           ; 1 bytes @ 0x1
  3791                           
  3792                           
  3793                           ; 1 bytes @ 0x1
  3794     0021                     	ds	1
  3795     0022                     send_buffer@scherm:
  3796     0022                     spi_init@sdo_tx_edge:	
  3797                           ; 1 bytes @ 0x2
  3798                           
  3799     0022                     ___bmul@multiplier:	
  3800                           ; 1 bytes @ 0x2
  3801                           
  3802     0022                     scherm_init@i:	
  3803                           ; 1 bytes @ 0x2
  3804                           
  3805     0022                     ___wmul@multiplicand:	
  3806                           ; 2 bytes @ 0x2
  3807                           
  3808                           
  3809                           ; 2 bytes @ 0x2
  3810     0022                     	ds	1
  3811     0023                     ??_spi_init:
  3812     0023                     spi_init@mst_slv_oscdiv:	
  3813                           ; 1 bytes @ 0x3
  3814                           
  3815     0023                     send_buffer@i:	
  3816                           ; 1 bytes @ 0x3
  3817                           
  3818                           
  3819                           ; 2 bytes @ 0x3
  3820     0023                     	ds	1
  3821     0024                     ??___wmul:
  3822     0024                     scherm_init@helderheid:	
  3823                           ; 1 bytes @ 0x4
  3824                           
  3825     0024                     ___wmul@product:	
  3826                           ; 1 bytes @ 0x4
  3827                           
  3828                           
  3829                           ; 2 bytes @ 0x4
  3830     0024                     	ds	1
  3831     0025                     scherm_init@controlWord_1:
  3832     0025                     send_buffer@i_974:	
  3833                           ; 1 bytes @ 0x5
  3834                           
  3835                           
  3836                           ; 2 bytes @ 0x5
  3837     0025                     	ds	1
  3838     0026                     ?_load_buffer:
  3839     0026                     scherm_init@controlWord_0:	
  3840                           ; 1 bytes @ 0x6
  3841                           
  3842     0026                     load_buffer@lang:	
  3843                           ; 1 bytes @ 0x6
  3844                           
  3845                           
  3846                           ; 2 bytes @ 0x6
  3847     0026                     	ds	2
  3848     0028                     load_buffer@character:
  3849                           
  3850                           ; 1 bytes @ 0x8
  3851     0028                     	ds	1
  3852     0029                     load_buffer@position:
  3853                           
  3854                           ; 2 bytes @ 0x9
  3855     0029                     	ds	2
  3856     002B                     load_buffer@scherm:
  3857                           
  3858                           ; 1 bytes @ 0xB
  3859     002B                     	ds	1
  3860     002C                     ??_load_buffer:
  3861                           
  3862                           ; 1 bytes @ 0xC
  3863     002C                     	ds	8
  3864     0034                     load_buffer@i:
  3865                           
  3866                           ; 2 bytes @ 0x14
  3867     0034                     	ds	2
  3868     0036                     load_buffer@i_981:
  3869                           
  3870                           ; 2 bytes @ 0x16
  3871     0036                     	ds	2
  3872     0038                     load_buffer@i_983:
  3873                           
  3874                           ; 2 bytes @ 0x18
  3875     0038                     	ds	2
  3876     003A                     load_buffer@i_984:
  3877                           
  3878                           ; 2 bytes @ 0x1A
  3879     003A                     	ds	2
  3880     003C                     load_buffer@i_986:
  3881                           
  3882                           ; 2 bytes @ 0x1C
  3883     003C                     	ds	2
  3884     003E                     load_buffer@i_987:
  3885                           
  3886                           ; 2 bytes @ 0x1E
  3887     003E                     	ds	2
  3888     0040                     load_buffer@i_989:
  3889                           
  3890                           ; 2 bytes @ 0x20
  3891     0040                     	ds	2
  3892     0042                     load_buffer@i_990:
  3893                           
  3894                           ; 2 bytes @ 0x22
  3895     0042                     	ds	2
  3896     0044                     load_buffer@i_982:
  3897                           
  3898                           ; 2 bytes @ 0x24
  3899     0044                     	ds	2
  3900     0046                     load_buffer@i_985:
  3901                           
  3902                           ; 2 bytes @ 0x26
  3903     0046                     	ds	2
  3904     0048                     load_buffer@i_988:
  3905                           
  3906                           ; 2 bytes @ 0x28
  3907     0048                     	ds	2
  3908     004A                     load_buffer@i_991:
  3909                           
  3910                           ; 2 bytes @ 0x2A
  3911     004A                     	ds	2
  3912     004C                     ??_input_conversion:
  3913     004C                     ?_text_to_buffer:	
  3914                           ; 1 bytes @ 0x2C
  3915                           
  3916     004C                     ??_volume_conversion:	
  3917                           ; 1 bytes @ 0x2C
  3918                           
  3919     004C                     input_conversion@inputNew:	
  3920                           ; 1 bytes @ 0x2C
  3921                           
  3922     004C                     text_to_buffer@newtext:	
  3923                           ; 1 bytes @ 0x2C
  3924                           
  3925     004C                     volume_conversion@buffer:	
  3926                           ; 1 bytes @ 0x2C
  3927                           
  3928                           
  3929                           ; 2 bytes @ 0x2C
  3930     004C                     	ds	1
  3931     004D                     ??_text_to_buffer:
  3932                           
  3933                           ; 1 bytes @ 0x2D
  3934     004D                     	ds	1
  3935     004E                     text_to_buffer@scherm:
  3936     004E                     volume_conversion@i:	
  3937                           ; 1 bytes @ 0x2E
  3938                           
  3939                           
  3940                           ; 2 bytes @ 0x2E
  3941     004E                     	ds	1
  3942     004F                     text_to_buffer@i:
  3943                           
  3944                           ; 2 bytes @ 0x2F
  3945     004F                     	ds	1
  3946     0050                     volume_conversion@value:
  3947                           
  3948                           ; 1 bytes @ 0x30
  3949     0050                     	ds	1
  3950     0051                     ??_scherm_setup:
  3951                           
  3952                           ; 1 bytes @ 0x31
  3953     0051                     	ds	4
  3954     0055                     scherm_setup@screen2:
  3955                           
  3956                           ; 8 bytes @ 0x35
  3957     0055                     	ds	8
  3958     005D                     scherm_setup@screen1:
  3959                           
  3960                           ; 8 bytes @ 0x3D
  3961     005D                     	ds	8
  3962     0065                     ??_key_detection:
  3963     0065                     key_detection@check:	
  3964                           ; 1 bytes @ 0x45
  3965                           
  3966                           
  3967                           ; 4 bytes @ 0x45
  3968     0065                     	ds	4
  3969     0069                     key_detection@temp_code:
  3970                           
  3971                           ; 4 bytes @ 0x49
  3972     0069                     	ds	4
  3973     006D                     ??_main:
  3974                           
  3975                           	psect	maintext
  3976     0C36                     __pmaintext:	
  3977                           ; 1 bytes @ 0x4D
  3978 ;;
  3979 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3980 ;;
  3981 ;; *************** function _main *****************
  3982 ;; Defined at:
  3983 ;;		line 9 in file "main.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;  argc            2    0[BANK1 ] int 
  3986 ;;  argv            2    2[BANK1 ] PTR PTR unsigned char 
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;  helderheid      1    0        unsigned char 
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  2    0[BANK1 ] int 
  3991 ;; Registers used:
  3992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3993 ;; Tracked objects:
  3994 ;;		On entry : B00/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3998 ;;      Params:         0       0       4       0       0
  3999 ;;      Locals:         0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0
  4001 ;;      Totals:         0       0       4       0       0
  4002 ;;Total ram usage:        4 bytes
  4003 ;; Hardware stack levels required when called: 8
  4004 ;; This function calls:
  4005 ;;		_input_conversion
  4006 ;;		_key_detection
  4007 ;;		_pic_init
  4008 ;;		_scherm_init
  4009 ;;		_scherm_setup
  4010 ;;		_send_buffer
  4011 ;;		_spi_init
  4012 ;;		_volume_conversion
  4013 ;; This function is called by:
  4014 ;;		Startup code after reset
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018     0C36                     _main:	
  4019                           ;psect for function _main
  4020                           
  4021     0C36                     l2419:	
  4022                           ;incstack = 0
  4023 ;; using string table level
  4024                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4025                           
  4026                           
  4027                           ;main.c: 11:     pic_init();
  4028     0C36  160A  118A  20B1  120A  158A  	fcall	_pic_init
  4029     0C3B                     l2421:
  4030                           
  4031                           ;main.c: 12:     spi_init(MST_OSC_DIV_04, SMP1_SDI_END, CKP0_CPOL0_IDLE_LOW, CKE1_CPHA0_
      +                          TRSMIT_ACT2IDL);
  4032     0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  4033     0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  4034     0C3D  01A0               	clrf	spi_init@sdi_rx_smp
  4035     0C3E  0AA0               	incf	spi_init@sdi_rx_smp,f
  4036     0C3F  01A1               	clrf	spi_init@clock_pol
  4037     0C40  01A2               	clrf	spi_init@sdo_tx_edge
  4038     0C41  0AA2               	incf	spi_init@sdo_tx_edge,f
  4039     0C42  3000               	movlw	0
  4040     0C43  160A  118A  21D1  120A  158A  	fcall	_spi_init
  4041     0C48                     l2423:
  4042     0C48                     l2425:
  4043                           
  4044                           ;main.c: 14:     scherm_init(helderheid);
  4045     0C48  300F               	movlw	15
  4046     0C49  120A  118A  203B  120A  158A  	fcall	_scherm_init
  4047     0C4E                     l2427:
  4048                           
  4049                           ;main.c: 15:     scherm_setup();
  4050     0C4E  120A  158A  237F  120A  158A  	fcall	_scherm_setup
  4051     0C53                     l2429:
  4052                           
  4053                           ;main.c: 18:         if (remote_counter == 12) {
  4054     0C53  300C               	movlw	12
  4055     0C54  1683               	bsf	3,5	;RP0=1, select bank1
  4056     0C55  1303               	bcf	3,6	;RP1=0, select bank1
  4057     0C56  064B               	xorwf	_remote_counter^(0+128),w	;volatile
  4058     0C57  044C               	iorwf	(_remote_counter+1)^(0+128),w	;volatile
  4059     0C58  1D03               	btfss	3,2
  4060     0C59  2C5B               	goto	u1761
  4061     0C5A  2C5C               	goto	u1760
  4062     0C5B                     u1761:
  4063     0C5B  2C61               	goto	l2433
  4064     0C5C                     u1760:
  4065     0C5C                     l2431:
  4066                           
  4067                           ;main.c: 19:             key_detection();
  4068     0C5C  120A  158A  261B  120A  158A  	fcall	_key_detection
  4069     0C61                     l2433:
  4070                           
  4071                           ;main.c: 21:         if(inputChanged == 1){
  4072     0C61  1683               	bsf	3,5	;RP0=1, select bank1
  4073     0C62  1303               	bcf	3,6	;RP1=0, select bank1
  4074     0C63  033C               	decf	_inputChanged^(0+128),w
  4075     0C64  043D               	iorwf	(_inputChanged+1)^(0+128),w
  4076     0C65  1D03               	btfss	3,2
  4077     0C66  2C68               	goto	u1771
  4078     0C67  2C69               	goto	u1770
  4079     0C68                     u1771:
  4080     0C68  2C89               	goto	l2443
  4081     0C69                     u1770:
  4082     0C69                     l2435:
  4083                           
  4084                           ;main.c: 22:             input_conversion();
  4085     0C69  160A  118A  20D0  120A  158A  	fcall	_input_conversion
  4086     0C6E                     l2437:
  4087                           
  4088                           ;main.c: 23:             PORTA = inputLeds[input - 1];
  4089     0C6E  1683               	bsf	3,5	;RP0=1, select bank1
  4090     0C6F  1303               	bcf	3,6	;RP1=0, select bank1
  4091     0C70  0840               	movf	_input^(0+128),w
  4092     0C71  3E65               	addlw	low ((_inputLeds| (0+32768)+65535))
  4093     0C72  0084               	movwf	4
  4094     0C73  308B               	movlw	high ((_inputLeds| (0+32768)+65535))
  4095     0C74  1803               	skipnc
  4096     0C75  3E01               	addlw	1
  4097     0C76  1283               	bcf	3,5	;RP0=0, select bank0
  4098     0C77  1303               	bcf	3,6	;RP1=0, select bank0
  4099     0C78  00FF               	movwf	btemp+1
  4100     0C79  120A  118A  2100  120A  158A  	fcall	stringtab
  4101     0C7E  0085               	movwf	5	;volatile
  4102     0C7F                     l2439:
  4103                           
  4104                           ;main.c: 24:             send_buffer(SCREEN_2);
  4105     0C7F  3002               	movlw	2
  4106     0C80  160A  118A  222C  120A  158A  	fcall	_send_buffer
  4107     0C85                     l2441:
  4108                           
  4109                           ;main.c: 25:             inputChanged = 0;
  4110     0C85  1683               	bsf	3,5	;RP0=1, select bank1
  4111     0C86  1303               	bcf	3,6	;RP1=0, select bank1
  4112     0C87  01BC               	clrf	_inputChanged^(0+128)
  4113     0C88  01BD               	clrf	(_inputChanged+1)^(0+128)
  4114     0C89                     l2443:
  4115                           
  4116                           ;main.c: 27:         if(volume != volumeOud){
  4117     0C89  0843               	movf	(_volumeOud+1)^(0+128),w
  4118     0C8A  1283               	bcf	3,5	;RP0=0, select bank0
  4119     0C8B  1303               	bcf	3,6	;RP1=0, select bank0
  4120     0C8C  066E               	xorwf	_volume+1,w
  4121     0C8D  1D03               	skipz
  4122     0C8E  2C95               	goto	u1785
  4123     0C8F  1683               	bsf	3,5	;RP0=1, select bank1
  4124     0C90  1303               	bcf	3,6	;RP1=0, select bank1
  4125     0C91  0842               	movf	_volumeOud^(0+128),w
  4126     0C92  1283               	bcf	3,5	;RP0=0, select bank0
  4127     0C93  1303               	bcf	3,6	;RP1=0, select bank0
  4128     0C94  066D               	xorwf	_volume,w
  4129     0C95                     u1785:
  4130     0C95  1903               	skipnz
  4131     0C96  2C98               	goto	u1781
  4132     0C97  2C99               	goto	u1780
  4133     0C98                     u1781:
  4134     0C98  2CB0               	goto	l2449
  4135     0C99                     u1780:
  4136     0C99                     l2445:
  4137                           
  4138                           ;main.c: 28:             volume_conversion();
  4139     0C99  120A  158A  2538  120A  158A  	fcall	_volume_conversion
  4140                           
  4141                           ;main.c: 29:             send_buffer(SCREEN_1);
  4142     0C9E  3001               	movlw	1
  4143     0C9F  160A  118A  222C  120A  158A  	fcall	_send_buffer
  4144     0CA4                     l2447:
  4145                           
  4146                           ;main.c: 30:             volumeOud = volume;
  4147     0CA4  1283               	bcf	3,5	;RP0=0, select bank0
  4148     0CA5  1303               	bcf	3,6	;RP1=0, select bank0
  4149     0CA6  086E               	movf	_volume+1,w
  4150     0CA7  1683               	bsf	3,5	;RP0=1, select bank1
  4151     0CA8  1303               	bcf	3,6	;RP1=0, select bank1
  4152     0CA9  00C3               	movwf	(_volumeOud+1)^(0+128)
  4153     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  4154     0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  4155     0CAC  086D               	movf	_volume,w
  4156     0CAD  1683               	bsf	3,5	;RP0=1, select bank1
  4157     0CAE  1303               	bcf	3,6	;RP1=0, select bank1
  4158     0CAF  00C2               	movwf	_volumeOud^(0+128)
  4159     0CB0                     l2449:
  4160                           
  4161                           ;main.c: 32:         GO = 1;
  4162     0CB0  1283               	bcf	3,5	;RP0=0, select bank0
  4163     0CB1  149F               	bsf	31,1	;volatile
  4164     0CB2  2C53               	goto	l2429
  4165     0CB3  120A  118A  2810   	ljmp	start
  4166     0CB6                     __end_of_main:
  4167                           
  4168                           	psect	text1
  4169     0D38                     __ptext1:	
  4170 ;; *************** function _volume_conversion *****************
  4171 ;; Defined at:
  4172 ;;		line 17 in file "adc.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;		None
  4175 ;; Auto vars:     Size  Location     Type
  4176 ;;  i               2   46[BANK0 ] int 
  4177 ;;  buffer          2   44[BANK0 ] unsigned char [2]
  4178 ;;  value           1   48[BANK0 ] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      void 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4188 ;;      Params:         0       0       0       0       0
  4189 ;;      Locals:         0       5       0       0       0
  4190 ;;      Temps:          0       0       0       0       0
  4191 ;;      Totals:         0       5       0       0       0
  4192 ;;Total ram usage:        5 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 5
  4195 ;; This function calls:
  4196 ;;		_load_buffer
  4197 ;; This function is called by:
  4198 ;;		_main
  4199 ;; This function uses a non-reentrant model
  4200 ;;
  4201                           
  4202     0D38                     _volume_conversion:	
  4203                           ;psect for function _volume_conversion
  4204                           
  4205     0D38                     l2069:	
  4206                           ;incstack = 0
  4207                           ; Regs used in _volume_conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4208                           
  4209                           
  4210                           ;adc.c: 19:     char buffer[2];;adc.c: 20:     char value;;adc.c: 21:     if(volume < 10
      +                          ){
  4211     0D38  1283               	bcf	3,5	;RP0=0, select bank0
  4212     0D39  1303               	bcf	3,6	;RP1=0, select bank0
  4213     0D3A  086E               	movf	_volume+1,w
  4214     0D3B  3A80               	xorlw	128
  4215     0D3C  00FF               	movwf	btemp+1
  4216     0D3D  3080               	movlw	128
  4217     0D3E  027F               	subwf	btemp+1,w
  4218     0D3F  1D03               	skipz
  4219     0D40  2D43               	goto	u1355
  4220     0D41  300A               	movlw	10
  4221     0D42  026D               	subwf	_volume,w
  4222     0D43                     u1355:
  4223     0D43  1803               	skipnc
  4224     0D44  2D46               	goto	u1351
  4225     0D45  2D47               	goto	u1350
  4226     0D46                     u1351:
  4227     0D46  2D50               	goto	l2079
  4228     0D47                     u1350:
  4229     0D47                     l2071:
  4230     0D47  1283               	bcf	3,5	;RP0=0, select bank0
  4231     0D48  1303               	bcf	3,6	;RP1=0, select bank0
  4232     0D49  086D               	movf	_volume,w
  4233     0D4A  3E30               	addlw	48
  4234     0D4B  00D0               	movwf	volume_conversion@value
  4235     0D4C                     l2073:
  4236                           
  4237                           ;adc.c: 23:         buffer[0] = value;
  4238     0D4C  0850               	movf	volume_conversion@value,w
  4239     0D4D  00CC               	movwf	volume_conversion@buffer
  4240     0D4E                     l2075:
  4241     0D4E                     l2077:
  4242                           
  4243                           ;adc.c: 25:         buffer[1] = value;
  4244     0D4E  01CD               	clrf	volume_conversion@buffer+1
  4245                           
  4246                           ;adc.c: 26:     }
  4247     0D4F  2D9F               	goto	l2109
  4248     0D50                     l2079:
  4249     0D50  1283               	bcf	3,5	;RP0=0, select bank0
  4250     0D51  1303               	bcf	3,6	;RP1=0, select bank0
  4251     0D52  086E               	movf	_volume+1,w
  4252     0D53  3A80               	xorlw	128
  4253     0D54  00FF               	movwf	btemp+1
  4254     0D55  3080               	movlw	128
  4255     0D56  027F               	subwf	btemp+1,w
  4256     0D57  1D03               	skipz
  4257     0D58  2D5B               	goto	u1365
  4258     0D59  3014               	movlw	20
  4259     0D5A  026D               	subwf	_volume,w
  4260     0D5B                     u1365:
  4261     0D5B  1803               	skipnc
  4262     0D5C  2D5E               	goto	u1361
  4263     0D5D  2D5F               	goto	u1360
  4264     0D5E                     u1361:
  4265     0D5E  2D69               	goto	l2087
  4266     0D5F                     u1360:
  4267     0D5F                     l2081:
  4268                           
  4269                           ;adc.c: 29:         buffer[0] = value;
  4270     0D5F  3031               	movlw	49
  4271     0D60  1283               	bcf	3,5	;RP0=0, select bank0
  4272     0D61  1303               	bcf	3,6	;RP1=0, select bank0
  4273     0D62  00CC               	movwf	volume_conversion@buffer
  4274     0D63                     l2083:
  4275     0D63  086D               	movf	_volume,w
  4276     0D64  3E26               	addlw	38
  4277     0D65  00D0               	movwf	volume_conversion@value
  4278     0D66                     l2085:
  4279                           
  4280                           ;adc.c: 31:         buffer[1] = value;
  4281     0D66  0850               	movf	volume_conversion@value,w
  4282     0D67  00CD               	movwf	volume_conversion@buffer+1
  4283                           
  4284                           ;adc.c: 32:     }
  4285     0D68  2D9F               	goto	l2109
  4286     0D69                     l2087:
  4287     0D69  1283               	bcf	3,5	;RP0=0, select bank0
  4288     0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  4289     0D6B  086E               	movf	_volume+1,w
  4290     0D6C  3A80               	xorlw	128
  4291     0D6D  00FF               	movwf	btemp+1
  4292     0D6E  3080               	movlw	128
  4293     0D6F  027F               	subwf	btemp+1,w
  4294     0D70  1D03               	skipz
  4295     0D71  2D74               	goto	u1375
  4296     0D72  301E               	movlw	30
  4297     0D73  026D               	subwf	_volume,w
  4298     0D74                     u1375:
  4299     0D74  1803               	skipnc
  4300     0D75  2D77               	goto	u1371
  4301     0D76  2D78               	goto	u1370
  4302     0D77                     u1371:
  4303     0D77  2D80               	goto	l2095
  4304     0D78                     u1370:
  4305     0D78                     l2089:
  4306                           
  4307                           ;adc.c: 35:         buffer[0] = value;
  4308     0D78  3032               	movlw	50
  4309     0D79  1283               	bcf	3,5	;RP0=0, select bank0
  4310     0D7A  1303               	bcf	3,6	;RP1=0, select bank0
  4311     0D7B  00CC               	movwf	volume_conversion@buffer
  4312     0D7C                     l2091:
  4313     0D7C  086D               	movf	_volume,w
  4314     0D7D  3E1C               	addlw	28
  4315     0D7E  00D0               	movwf	volume_conversion@value
  4316     0D7F  2D66               	goto	l2085
  4317     0D80                     l2095:
  4318     0D80  1283               	bcf	3,5	;RP0=0, select bank0
  4319     0D81  1303               	bcf	3,6	;RP1=0, select bank0
  4320     0D82  086E               	movf	_volume+1,w
  4321     0D83  3A80               	xorlw	128
  4322     0D84  00FF               	movwf	btemp+1
  4323     0D85  3080               	movlw	128
  4324     0D86  027F               	subwf	btemp+1,w
  4325     0D87  1D03               	skipz
  4326     0D88  2D8B               	goto	u1385
  4327     0D89  3028               	movlw	40
  4328     0D8A  026D               	subwf	_volume,w
  4329     0D8B                     u1385:
  4330     0D8B  1803               	skipnc
  4331     0D8C  2D8E               	goto	u1381
  4332     0D8D  2D8F               	goto	u1380
  4333     0D8E                     u1381:
  4334     0D8E  2D97               	goto	l2103
  4335     0D8F                     u1380:
  4336     0D8F                     l2097:
  4337                           
  4338                           ;adc.c: 41:         buffer[0] = value;
  4339     0D8F  3033               	movlw	51
  4340     0D90  1283               	bcf	3,5	;RP0=0, select bank0
  4341     0D91  1303               	bcf	3,6	;RP1=0, select bank0
  4342     0D92  00CC               	movwf	volume_conversion@buffer
  4343     0D93                     l2099:
  4344     0D93  086D               	movf	_volume,w
  4345     0D94  3E12               	addlw	18
  4346     0D95  00D0               	movwf	volume_conversion@value
  4347     0D96  2D66               	goto	l2085
  4348     0D97                     l2103:
  4349                           
  4350                           ;adc.c: 47:         buffer[0] = value;
  4351     0D97  3034               	movlw	52
  4352     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  4353     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  4354     0D9A  00CC               	movwf	volume_conversion@buffer
  4355     0D9B                     l2105:
  4356     0D9B  086D               	movf	_volume,w
  4357     0D9C  3E08               	addlw	8
  4358     0D9D  00D0               	movwf	volume_conversion@value
  4359     0D9E  2D66               	goto	l2085
  4360     0D9F                     l2109:
  4361                           
  4362                           ;adc.c: 52:     for(int i = 0; i < 2; i++){
  4363     0D9F  01CE               	clrf	volume_conversion@i
  4364     0DA0  01CF               	clrf	volume_conversion@i+1
  4365     0DA1                     l2115:
  4366                           
  4367                           ;adc.c: 53:         if(buffer[i] == '\0'){
  4368     0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  4369     0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  4370     0DA3  084E               	movf	volume_conversion@i,w
  4371     0DA4  3E4C               	addlw	(low (volume_conversion@buffer| 0))& (0+255)
  4372     0DA5  0084               	movwf	4
  4373     0DA6  1383               	bcf	3,7	;select IRP bank0
  4374     0DA7  0800               	movf	0,w
  4375     0DA8  1D03               	btfss	3,2
  4376     0DA9  2DAB               	goto	u1391
  4377     0DAA  2DAC               	goto	u1390
  4378     0DAB                     u1391:
  4379     0DAB  2DCC               	goto	l2123
  4380     0DAC                     u1390:
  4381     0DAC                     l2117:
  4382                           
  4383                           ;adc.c: 54:             if(i == 1){
  4384     0DAC  034E               	decf	volume_conversion@i,w
  4385     0DAD  044F               	iorwf	volume_conversion@i+1,w
  4386     0DAE  1D03               	btfss	3,2
  4387     0DAF  2DB1               	goto	u1401
  4388     0DB0  2DB2               	goto	u1400
  4389     0DB1                     u1401:
  4390     0DB1  2E01               	goto	l2129
  4391     0DB2                     u1400:
  4392     0DB2                     l2119:
  4393                           
  4394                           ;adc.c: 55:                 load_buffer(num_of_lang ,' ',5,SCREEN_1);
  4395     0DB2  1683               	bsf	3,5	;RP0=1, select bank1
  4396     0DB3  1303               	bcf	3,6	;RP1=0, select bank1
  4397     0DB4  0850               	movf	(_num_of_lang+1)^(0+128),w
  4398     0DB5  1283               	bcf	3,5	;RP0=0, select bank0
  4399     0DB6  1303               	bcf	3,6	;RP1=0, select bank0
  4400     0DB7  00A7               	movwf	load_buffer@lang+1
  4401     0DB8  1683               	bsf	3,5	;RP0=1, select bank1
  4402     0DB9  1303               	bcf	3,6	;RP1=0, select bank1
  4403     0DBA  084F               	movf	_num_of_lang^(0+128),w
  4404     0DBB  1283               	bcf	3,5	;RP0=0, select bank0
  4405     0DBC  1303               	bcf	3,6	;RP1=0, select bank0
  4406     0DBD  00A6               	movwf	load_buffer@lang
  4407     0DBE  3020               	movlw	32
  4408     0DBF  00A8               	movwf	load_buffer@character
  4409     0DC0  3005               	movlw	5
  4410     0DC1  00A9               	movwf	load_buffer@position
  4411     0DC2  3000               	movlw	0
  4412     0DC3  00AA               	movwf	load_buffer@position+1
  4413     0DC4  01AB               	clrf	load_buffer@scherm
  4414     0DC5  0AAB               	incf	load_buffer@scherm,f
  4415     0DC6  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4416     0DCB  2E01               	goto	l2129
  4417     0DCC                     l2123:
  4418                           
  4419                           ;adc.c: 60:             load_buffer(num_of_lang ,buffer[i],i+4, SCREEN_1);
  4420     0DCC  1683               	bsf	3,5	;RP0=1, select bank1
  4421     0DCD  1303               	bcf	3,6	;RP1=0, select bank1
  4422     0DCE  0850               	movf	(_num_of_lang+1)^(0+128),w
  4423     0DCF  1283               	bcf	3,5	;RP0=0, select bank0
  4424     0DD0  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0DD1  00A7               	movwf	load_buffer@lang+1
  4426     0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  4427     0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  4428     0DD4  084F               	movf	_num_of_lang^(0+128),w
  4429     0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  4430     0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  4431     0DD7  00A6               	movwf	load_buffer@lang
  4432     0DD8  084E               	movf	volume_conversion@i,w
  4433     0DD9  3E4C               	addlw	(low (volume_conversion@buffer| 0))& (0+255)
  4434     0DDA  0084               	movwf	4
  4435     0DDB  0800               	movf	0,w
  4436     0DDC  00A8               	movwf	load_buffer@character
  4437     0DDD  084E               	movf	volume_conversion@i,w
  4438     0DDE  3E04               	addlw	4
  4439     0DDF  00A9               	movwf	load_buffer@position
  4440     0DE0  084F               	movf	volume_conversion@i+1,w
  4441     0DE1  1803               	skipnc
  4442     0DE2  3E01               	addlw	1
  4443     0DE3  3E00               	addlw	0
  4444     0DE4  00AA               	movwf	load_buffer@position+1
  4445     0DE5  01AB               	clrf	load_buffer@scherm
  4446     0DE6  0AAB               	incf	load_buffer@scherm,f
  4447     0DE7  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4448     0DEC                     l2125:
  4449                           
  4450                           ;adc.c: 62:     }
  4451     0DEC  3001               	movlw	1
  4452     0DED  1283               	bcf	3,5	;RP0=0, select bank0
  4453     0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  4454     0DEF  07CE               	addwf	volume_conversion@i,f
  4455     0DF0  1803               	skipnc
  4456     0DF1  0ACF               	incf	volume_conversion@i+1,f
  4457     0DF2  3000               	movlw	0
  4458     0DF3  07CF               	addwf	volume_conversion@i+1,f
  4459     0DF4                     l2127:
  4460     0DF4  084F               	movf	volume_conversion@i+1,w
  4461     0DF5  3A80               	xorlw	128
  4462     0DF6  00FF               	movwf	btemp+1
  4463     0DF7  3080               	movlw	128
  4464     0DF8  027F               	subwf	btemp+1,w
  4465     0DF9  1D03               	skipz
  4466     0DFA  2DFD               	goto	u1415
  4467     0DFB  3002               	movlw	2
  4468     0DFC  024E               	subwf	volume_conversion@i,w
  4469     0DFD                     u1415:
  4470     0DFD  1C03               	skipc
  4471     0DFE  2E00               	goto	u1411
  4472     0DFF  2E01               	goto	u1410
  4473     0E00                     u1411:
  4474     0E00  2DA1               	goto	l2115
  4475     0E01                     u1410:
  4476     0E01                     l2129:
  4477                           
  4478                           ;adc.c: 63:     load_buffer(num_of_lang ,' ', 7, SCREEN_1);
  4479     0E01  1683               	bsf	3,5	;RP0=1, select bank1
  4480     0E02  1303               	bcf	3,6	;RP1=0, select bank1
  4481     0E03  0850               	movf	(_num_of_lang+1)^(0+128),w
  4482     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  4483     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  4484     0E06  00A7               	movwf	load_buffer@lang+1
  4485     0E07  1683               	bsf	3,5	;RP0=1, select bank1
  4486     0E08  1303               	bcf	3,6	;RP1=0, select bank1
  4487     0E09  084F               	movf	_num_of_lang^(0+128),w
  4488     0E0A  1283               	bcf	3,5	;RP0=0, select bank0
  4489     0E0B  1303               	bcf	3,6	;RP1=0, select bank0
  4490     0E0C  00A6               	movwf	load_buffer@lang
  4491     0E0D  3020               	movlw	32
  4492     0E0E  00A8               	movwf	load_buffer@character
  4493     0E0F  3007               	movlw	7
  4494     0E10  00A9               	movwf	load_buffer@position
  4495     0E11  3000               	movlw	0
  4496     0E12  00AA               	movwf	load_buffer@position+1
  4497     0E13  01AB               	clrf	load_buffer@scherm
  4498     0E14  0AAB               	incf	load_buffer@scherm,f
  4499     0E15  160A  118A  2298  120A  158A  	fcall	_load_buffer
  4500     0E1A                     l58:
  4501     0E1A  0008               	return
  4502     0E1B                     __end_of_volume_conversion:
  4503                           
  4504                           	psect	text2
  4505     11D1                     __ptext2:	
  4506 ;; *************** function _spi_init *****************
  4507 ;; Defined at:
  4508 ;;		line 14 in file "spi.c"
  4509 ;; Parameters:    Size  Location     Type
  4510 ;;  mst_slv_oscd    1    wreg     enum E1420
  4511 ;;  sdi_rx_smp      1    0[BANK0 ] enum E1428
  4512 ;;  clock_pol       1    1[BANK0 ] enum E1432
  4513 ;;  sdo_tx_edge     1    2[BANK0 ] enum E1436
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;  mst_slv_oscd    1    3[BANK0 ] enum E1420
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  1    wreg      void 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, btemp+1
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       3       0       0       0
  4526 ;;      Locals:         0       1       0       0       0
  4527 ;;      Temps:          0       0       0       0       0
  4528 ;;      Totals:         0       4       0       0       0
  4529 ;;Total ram usage:        4 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 3
  4532 ;; This function calls:
  4533 ;;		Nothing
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539     11D1                     _spi_init:	
  4540                           ;psect for function _spi_init
  4541                           
  4542                           
  4543                           ;incstack = 0
  4544                           ; Regs used in _spi_init: [wreg+status,2+status,0+btemp+1]
  4545                           ;spi_init@mst_slv_oscdiv stored from wreg
  4546     11D1  1283               	bcf	3,5	;RP0=0, select bank0
  4547     11D2  1303               	bcf	3,6	;RP1=0, select bank0
  4548     11D3  00A3               	movwf	spi_init@mst_slv_oscdiv
  4549     11D4                     l2137:
  4550                           
  4551                           ;spi.c: 17:     SSPCONbits.SSPM = mst_slv_oscdiv;
  4552     11D4  0814               	movf	20,w	;volatile
  4553     11D5  0623               	xorwf	spi_init@mst_slv_oscdiv,w
  4554     11D6  39F0               	andlw	-16
  4555     11D7  0623               	xorwf	spi_init@mst_slv_oscdiv,w
  4556     11D8  0094               	movwf	20	;volatile
  4557     11D9                     l2139:
  4558                           
  4559                           ;spi.c: 19:     TRISCbits.TRISC5 = 0;
  4560     11D9  1683               	bsf	3,5	;RP0=1, select bank1
  4561     11DA  1303               	bcf	3,6	;RP1=0, select bank1
  4562     11DB  1287               	bcf	7,5	;volatile
  4563     11DC                     l2141:
  4564                           
  4565                           ;spi.c: 20:     TRISCbits.TRISC4 = 0;
  4566     11DC  1207               	bcf	7,4	;volatile
  4567     11DD                     l2143:
  4568                           
  4569                           ;spi.c: 29:     if(mst_slv_oscdiv > 3){
  4570     11DD  3004               	movlw	4
  4571     11DE  1283               	bcf	3,5	;RP0=0, select bank0
  4572     11DF  1303               	bcf	3,6	;RP1=0, select bank0
  4573     11E0  0223               	subwf	spi_init@mst_slv_oscdiv,w
  4574     11E1  1C03               	skipc
  4575     11E2  29E4               	goto	u1421
  4576     11E3  29E5               	goto	u1420
  4577     11E4                     u1421:
  4578     11E4  29F6               	goto	l2147
  4579     11E5                     u1420:
  4580     11E5                     l2145:
  4581                           
  4582                           ;spi.c: 30:         SSPSTATbits.SMP = 0;
  4583     11E5  1683               	bsf	3,5	;RP0=1, select bank1
  4584     11E6  1303               	bcf	3,6	;RP1=0, select bank1
  4585     11E7  1394               	bcf	20,7	;volatile
  4586                           
  4587                           ;spi.c: 31:         TRISCbits.TRISC3 = 1;
  4588     11E8  1587               	bsf	7,3	;volatile
  4589                           
  4590                           ;spi.c: 32:         SSPCONbits.CKP = PORTCbits.RC3;
  4591     11E9  1283               	bcf	3,5	;RP0=0, select bank0
  4592     11EA  1303               	bcf	3,6	;RP1=0, select bank0
  4593     11EB  1987               	btfsc	7,3	;volatile
  4594     11EC  29EE               	goto	u1431
  4595     11ED  29F2               	goto	u1430
  4596     11EE                     u1431:
  4597     11EE  1283               	bcf	3,5	;RP0=0, select bank0
  4598     11EF  1303               	bcf	3,6	;RP1=0, select bank0
  4599     11F0  1614               	bsf	20,4	;volatile
  4600     11F1  29F5               	goto	u1444
  4601     11F2                     u1430:
  4602     11F2  1283               	bcf	3,5	;RP0=0, select bank0
  4603     11F3  1303               	bcf	3,6	;RP1=0, select bank0
  4604     11F4  1214               	bcf	20,4	;volatile
  4605     11F5                     u1444:
  4606                           
  4607                           ;spi.c: 33:     }
  4608     11F5  2A05               	goto	l541
  4609     11F6                     l2147:
  4610                           
  4611                           ;spi.c: 41:         SSPSTATbits.SMP = sdi_rx_smp;
  4612     11F6  0C20               	rrf	spi_init@sdi_rx_smp,w
  4613     11F7  1683               	bsf	3,5	;RP0=1, select bank1
  4614     11F8  1303               	bcf	3,6	;RP1=0, select bank1
  4615     11F9  1C03               	skipc
  4616     11FA  1394               	bcf	20,7	;volatile
  4617     11FB  1803               	skipnc
  4618     11FC  1794               	bsf	20,7	;volatile
  4619     11FD                     l2149:
  4620                           
  4621                           ;spi.c: 42:         TRISCbits.TRISC3 = 0;
  4622     11FD  1187               	bcf	7,3	;volatile
  4623                           
  4624                           ;spi.c: 43:         SSPCONbits.CKP = clock_pol;
  4625     11FE  1283               	bcf	3,5	;RP0=0, select bank0
  4626     11FF  1303               	bcf	3,6	;RP1=0, select bank0
  4627     1200  0C21               	rrf	spi_init@clock_pol,w
  4628     1201  1C03               	skipc
  4629     1202  1214               	bcf	20,4	;volatile
  4630     1203  1803               	skipnc
  4631     1204  1614               	bsf	20,4	;volatile
  4632     1205                     l541:	
  4633                           ;spi.c: 44:     }
  4634                           
  4635                           
  4636                           ;spi.c: 50:     SSPSTATbits.CKE = sdo_tx_edge;
  4637     1205  0C22               	rrf	spi_init@sdo_tx_edge,w
  4638     1206  1683               	bsf	3,5	;RP0=1, select bank1
  4639     1207  1303               	bcf	3,6	;RP1=0, select bank1
  4640     1208  1C03               	skipc
  4641     1209  1314               	bcf	20,6	;volatile
  4642     120A  1803               	skipnc
  4643     120B  1714               	bsf	20,6	;volatile
  4644     120C                     l2151:
  4645                           
  4646                           ;spi.c: 51:     if(clock_pol == 1 || PORTCbits.RC3 == 1){
  4647     120C  1283               	bcf	3,5	;RP0=0, select bank0
  4648     120D  1303               	bcf	3,6	;RP1=0, select bank0
  4649     120E  0321               	decf	spi_init@clock_pol,w
  4650     120F  1903               	btfsc	3,2
  4651     1210  2A12               	goto	u1451
  4652     1211  2A13               	goto	u1450
  4653     1212                     u1451:
  4654     1212  2A17               	goto	l2155
  4655     1213                     u1450:
  4656     1213                     l2153:
  4657     1213  1D87               	btfss	7,3	;volatile
  4658     1214  2A16               	goto	u1461
  4659     1215  2A17               	goto	u1460
  4660     1216                     u1461:
  4661     1216  2A29               	goto	l2157
  4662     1217                     u1460:
  4663     1217                     l2155:
  4664                           
  4665                           ;spi.c: 52:         SSPSTATbits.CKE ^= 1;
  4666     1217  1683               	bsf	3,5	;RP0=1, select bank1
  4667     1218  1303               	bcf	3,6	;RP1=0, select bank1
  4668     1219  0E14               	swapf	20,w	;volatile
  4669     121A  00FF               	movwf	btemp+1
  4670     121B  0CFF               	rrf	btemp+1,f
  4671     121C  0C7F               	rrf	btemp+1,w
  4672     121D  3901               	andlw	1
  4673     121E  00FF               	movwf	btemp+1
  4674     121F  3001               	movlw	1
  4675     1220  06FF               	xorwf	btemp+1,f
  4676     1221  0EFF               	swapf	btemp+1,f
  4677     1222  0DFF               	rlf	btemp+1,f
  4678     1223  0DFF               	rlf	btemp+1,f
  4679     1224  0814               	movf	20,w	;volatile
  4680     1225  067F               	xorwf	btemp+1,w
  4681     1226  39BF               	andlw	-65
  4682     1227  067F               	xorwf	btemp+1,w
  4683     1228  0094               	movwf	20	;volatile
  4684     1229                     l2157:
  4685                           
  4686                           ;spi.c: 55:     SSPCONbits.SSPEN = 1;
  4687     1229  1283               	bcf	3,5	;RP0=0, select bank0
  4688     122A  1694               	bsf	20,5	;volatile
  4689     122B                     l545:
  4690     122B  0008               	return
  4691     122C                     __end_of_spi_init:
  4692                           
  4693                           	psect	text3
  4694     122C                     __ptext3:	
  4695 ;; *************** function _send_buffer *****************
  4696 ;; Defined at:
  4697 ;;		line 84 in file "scherm.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  scherm          1    wreg     enum E1435
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  scherm          1    2[BANK0 ] enum E1435
  4702 ;;  i               2    5[BANK0 ] int 
  4703 ;;  i               2    3[BANK0 ] int 
  4704 ;; Return value:  Size  Location     Type
  4705 ;;                  1    wreg      void 
  4706 ;; Registers used:
  4707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4708 ;; Tracked objects:
  4709 ;;		On entry : 0/0
  4710 ;;		On exit  : 0/0
  4711 ;;		Unchanged: 0/0
  4712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4713 ;;      Params:         0       0       0       0       0
  4714 ;;      Locals:         0       5       0       0       0
  4715 ;;      Temps:          0       1       0       0       0
  4716 ;;      Totals:         0       6       0       0       0
  4717 ;;Total ram usage:        6 bytes
  4718 ;; Hardware stack levels used: 1
  4719 ;; Hardware stack levels required when called: 4
  4720 ;; This function calls:
  4721 ;;		_screen_transmit
  4722 ;; This function is called by:
  4723 ;;		_main
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727     122C                     _send_buffer:	
  4728                           ;psect for function _send_buffer
  4729                           
  4730                           
  4731                           ;incstack = 0
  4732                           ; Regs used in _send_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4733                           ;send_buffer@scherm stored from wreg
  4734     122C  1283               	bcf	3,5	;RP0=0, select bank0
  4735     122D  1303               	bcf	3,6	;RP1=0, select bank0
  4736     122E  00A2               	movwf	send_buffer@scherm
  4737     122F                     l2315:
  4738                           
  4739                           ;scherm.c: 85:     if (scherm == SCREEN_1) {
  4740     122F  0322               	decf	send_buffer@scherm,w
  4741     1230  1D03               	btfss	3,2
  4742     1231  2A33               	goto	u1621
  4743     1232  2A34               	goto	u1620
  4744     1233                     u1621:
  4745     1233  2A63               	goto	l2335
  4746     1234                     u1620:
  4747     1234                     l2317:
  4748                           
  4749                           ;scherm.c: 86:         PORTCbits.RC4 = 0;
  4750     1234  1207               	bcf	7,4	;volatile
  4751     1235                     l2319:
  4752                           
  4753                           ;scherm.c: 88:         for (int i = 0; i < 40; i++) {
  4754     1235  01A3               	clrf	send_buffer@i
  4755     1236  01A4               	clrf	send_buffer@i+1
  4756     1237                     l2325:
  4757                           
  4758                           ;scherm.c: 89:             screen_transmit(scherm1_buffer[i]);
  4759     1237  1283               	bcf	3,5	;RP0=0, select bank0
  4760     1238  1303               	bcf	3,6	;RP1=0, select bank0
  4761     1239  0823               	movf	send_buffer@i,w
  4762     123A  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  4763     123B  0084               	movwf	4
  4764     123C  1783               	bsf	3,7	;select IRP bank3
  4765     123D  0800               	movf	0,w
  4766     123E  160A  118A  201D  160A  118A  	fcall	_screen_transmit
  4767     1243                     l2327:
  4768                           
  4769                           ;scherm.c: 90:         }
  4770     1243  3001               	movlw	1
  4771     1244  1283               	bcf	3,5	;RP0=0, select bank0
  4772     1245  1303               	bcf	3,6	;RP1=0, select bank0
  4773     1246  07A3               	addwf	send_buffer@i,f
  4774     1247  1803               	skipnc
  4775     1248  0AA4               	incf	send_buffer@i+1,f
  4776     1249  3000               	movlw	0
  4777     124A  07A4               	addwf	send_buffer@i+1,f
  4778     124B                     l2329:
  4779     124B  0824               	movf	send_buffer@i+1,w
  4780     124C  3A80               	xorlw	128
  4781     124D  00FF               	movwf	btemp+1
  4782     124E  3080               	movlw	128
  4783     124F  027F               	subwf	btemp+1,w
  4784     1250  1D03               	skipz
  4785     1251  2A54               	goto	u1635
  4786     1252  3028               	movlw	40
  4787     1253  0223               	subwf	send_buffer@i,w
  4788     1254                     u1635:
  4789     1254  1C03               	skipc
  4790     1255  2A57               	goto	u1631
  4791     1256  2A58               	goto	u1630
  4792     1257                     u1631:
  4793     1257  2A37               	goto	l2325
  4794     1258                     u1630:
  4795     1258                     l2331:
  4796                           
  4797                           ;scherm.c: 91:         _delay((unsigned long)((200)*(500000/4000000.0)));
  4798     1258  3007               	movlw	7
  4799     1259  1283               	bcf	3,5	;RP0=0, select bank0
  4800     125A  1303               	bcf	3,6	;RP1=0, select bank0
  4801     125B  00A1               	movwf	??_send_buffer
  4802     125C                     u1857:
  4803     125C  0BA1               	decfsz	??_send_buffer,f
  4804     125D  2A5C               	goto	u1857
  4805     125E  0000               	nop
  4806     125F                     l2333:
  4807                           
  4808                           ;scherm.c: 92:         PORTCbits.RC4 = 1;
  4809     125F  1283               	bcf	3,5	;RP0=0, select bank0
  4810     1260  1303               	bcf	3,6	;RP1=0, select bank0
  4811     1261  1607               	bsf	7,4	;volatile
  4812                           
  4813                           ;scherm.c: 93:     } else if (scherm == SCREEN_2) {
  4814     1262  2A97               	goto	l457
  4815     1263                     l2335:
  4816     1263  3002               	movlw	2
  4817     1264  0622               	xorwf	send_buffer@scherm,w
  4818     1265  1D03               	btfss	3,2
  4819     1266  2A68               	goto	u1641
  4820     1267  2A69               	goto	u1640
  4821     1268                     u1641:
  4822     1268  2A97               	goto	l457
  4823     1269                     u1640:
  4824     1269                     l2337:
  4825                           
  4826                           ;scherm.c: 94:         PORTDbits.RD4 = 0;
  4827     1269  1208               	bcf	8,4	;volatile
  4828     126A                     l2339:
  4829                           
  4830                           ;scherm.c: 96:         for (int i = 0; i < 40; i++) {
  4831     126A  01A5               	clrf	send_buffer@i_974
  4832     126B  01A6               	clrf	send_buffer@i_974+1
  4833     126C                     l2345:
  4834                           
  4835                           ;scherm.c: 97:             screen_transmit(scherm2_buffer[i]);
  4836     126C  1283               	bcf	3,5	;RP0=0, select bank0
  4837     126D  1303               	bcf	3,6	;RP1=0, select bank0
  4838     126E  0825               	movf	send_buffer@i_974,w
  4839     126F  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  4840     1270  0084               	movwf	4
  4841     1271  1783               	bsf	3,7	;select IRP bank3
  4842     1272  0800               	movf	0,w
  4843     1273  160A  118A  201D  160A  118A  	fcall	_screen_transmit
  4844     1278                     l2347:
  4845                           
  4846                           ;scherm.c: 98:         }
  4847     1278  3001               	movlw	1
  4848     1279  1283               	bcf	3,5	;RP0=0, select bank0
  4849     127A  1303               	bcf	3,6	;RP1=0, select bank0
  4850     127B  07A5               	addwf	send_buffer@i_974,f
  4851     127C  1803               	skipnc
  4852     127D  0AA6               	incf	send_buffer@i_974+1,f
  4853     127E  3000               	movlw	0
  4854     127F  07A6               	addwf	send_buffer@i_974+1,f
  4855     1280                     l2349:
  4856     1280  0826               	movf	send_buffer@i_974+1,w
  4857     1281  3A80               	xorlw	128
  4858     1282  00FF               	movwf	btemp+1
  4859     1283  3080               	movlw	128
  4860     1284  027F               	subwf	btemp+1,w
  4861     1285  1D03               	skipz
  4862     1286  2A89               	goto	u1655
  4863     1287  3028               	movlw	40
  4864     1288  0225               	subwf	send_buffer@i_974,w
  4865     1289                     u1655:
  4866     1289  1C03               	skipc
  4867     128A  2A8C               	goto	u1651
  4868     128B  2A8D               	goto	u1650
  4869     128C                     u1651:
  4870     128C  2A6C               	goto	l2345
  4871     128D                     u1650:
  4872     128D                     l2351:
  4873                           
  4874                           ;scherm.c: 99:         _delay((unsigned long)((200)*(500000/4000000.0)));
  4875     128D  3007               	movlw	7
  4876     128E  1283               	bcf	3,5	;RP0=0, select bank0
  4877     128F  1303               	bcf	3,6	;RP1=0, select bank0
  4878     1290  00A1               	movwf	??_send_buffer
  4879     1291                     u1867:
  4880     1291  0BA1               	decfsz	??_send_buffer,f
  4881     1292  2A91               	goto	u1867
  4882     1293  0000               	nop
  4883     1294                     l2353:
  4884                           
  4885                           ;scherm.c: 100:         PORTDbits.RD4 = 1;
  4886     1294  1283               	bcf	3,5	;RP0=0, select bank0
  4887     1295  1303               	bcf	3,6	;RP1=0, select bank0
  4888     1296  1608               	bsf	8,4	;volatile
  4889     1297                     l457:
  4890     1297  0008               	return
  4891     1298                     __end_of_send_buffer:
  4892                           
  4893                           	psect	text4
  4894     003B                     __ptext4:	
  4895 ;; *************** function _scherm_init *****************
  4896 ;; Defined at:
  4897 ;;		line 3 in file "scherm.c"
  4898 ;; Parameters:    Size  Location     Type
  4899 ;;  helderheid      1    wreg     unsigned char 
  4900 ;; Auto vars:     Size  Location     Type
  4901 ;;  helderheid      1    4[BANK0 ] unsigned char 
  4902 ;;  i               2    2[BANK0 ] int 
  4903 ;;  controlWord_    1    6[BANK0 ] unsigned char 
  4904 ;;  controlWord_    1    5[BANK0 ] unsigned char 
  4905 ;; Return value:  Size  Location     Type
  4906 ;;                  1    wreg      void 
  4907 ;; Registers used:
  4908 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4909 ;; Tracked objects:
  4910 ;;		On entry : 0/0
  4911 ;;		On exit  : 0/0
  4912 ;;		Unchanged: 0/0
  4913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4914 ;;      Params:         0       0       0       0       0
  4915 ;;      Locals:         0       5       0       0       0
  4916 ;;      Temps:          0       1       0       0       0
  4917 ;;      Totals:         0       6       0       0       0
  4918 ;;Total ram usage:        6 bytes
  4919 ;; Hardware stack levels used: 1
  4920 ;; Hardware stack levels required when called: 4
  4921 ;; This function calls:
  4922 ;;		_screen_transmit
  4923 ;; This function is called by:
  4924 ;;		_main
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928     003B                     _scherm_init:	
  4929                           ;psect for function _scherm_init
  4930                           
  4931                           
  4932                           ;incstack = 0
  4933                           ; Regs used in _scherm_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4934                           ;scherm_init@helderheid stored from wreg
  4935     003B  1283               	bcf	3,5	;RP0=0, select bank0
  4936     003C  1303               	bcf	3,6	;RP1=0, select bank0
  4937     003D  00A4               	movwf	scherm_init@helderheid
  4938     003E                     l2159:
  4939                           
  4940                           ;scherm.c: 4:     char controlWord_0 = 0b01110000;
  4941     003E  3070               	movlw	112
  4942     003F  00A6               	movwf	scherm_init@controlWord_0
  4943                           
  4944                           ;scherm.c: 5:     char controlWord_1 = 0b10000000;
  4945     0040  3080               	movlw	128
  4946     0041  00A5               	movwf	scherm_init@controlWord_1
  4947                           
  4948                           ;scherm.c: 7:     if (helderheid > 15) {
  4949     0042  3010               	movlw	16
  4950     0043  0224               	subwf	scherm_init@helderheid,w
  4951     0044  1C03               	skipc
  4952     0045  2847               	goto	u1471
  4953     0046  2848               	goto	u1470
  4954     0047                     u1471:
  4955     0047  284A               	goto	l2163
  4956     0048                     u1470:
  4957     0048                     l2161:
  4958                           
  4959                           ;scherm.c: 8:         helderheid = 15;
  4960     0048  300F               	movlw	15
  4961     0049  00A4               	movwf	scherm_init@helderheid
  4962     004A                     l2163:
  4963                           
  4964                           ;scherm.c: 11:     controlWord_0 = controlWord_0 + helderheid;
  4965     004A  0824               	movf	scherm_init@helderheid,w
  4966     004B  0726               	addwf	scherm_init@controlWord_0,w
  4967     004C  00A6               	movwf	scherm_init@controlWord_0
  4968     004D                     l2165:
  4969                           
  4970                           ;scherm.c: 13:     PORTCbits.RC2 = 1;
  4971     004D  1507               	bsf	7,2	;volatile
  4972     004E                     l2167:
  4973                           
  4974                           ;scherm.c: 14:     PORTCbits.RC4 = 1;
  4975     004E  1607               	bsf	7,4	;volatile
  4976     004F                     l2169:
  4977                           
  4978                           ;scherm.c: 15:     PORTCbits.RC6 = 0;
  4979     004F  1307               	bcf	7,6	;volatile
  4980     0050                     l2171:
  4981                           
  4982                           ;scherm.c: 16:     PORTCbits.RC7 = 1;
  4983     0050  1787               	bsf	7,7	;volatile
  4984     0051                     l2173:
  4985                           
  4986                           ;scherm.c: 18:     PORTDbits.RD2 = 1;
  4987     0051  1508               	bsf	8,2	;volatile
  4988     0052                     l2175:
  4989                           
  4990                           ;scherm.c: 19:     PORTDbits.RD4 = 1;
  4991     0052  1608               	bsf	8,4	;volatile
  4992     0053                     l2177:
  4993                           
  4994                           ;scherm.c: 20:     PORTDbits.RD6 = 0;
  4995     0053  1308               	bcf	8,6	;volatile
  4996     0054                     l2179:
  4997                           
  4998                           ;scherm.c: 21:     PORTDbits.RD7 = 1;
  4999     0054  1788               	bsf	8,7	;volatile
  5000     0055                     l2181:
  5001                           
  5002                           ;scherm.c: 23:     PORTCbits.RC2 = 0;
  5003     0055  1107               	bcf	7,2	;volatile
  5004     0056                     l2183:
  5005                           
  5006                           ;scherm.c: 24:     PORTDbits.RD2 = 0;
  5007     0056  1108               	bcf	8,2	;volatile
  5008     0057                     l2185:
  5009                           
  5010                           ;scherm.c: 25:     _delay((unsigned long)((200)*(500000/4000000.0)));
  5011     0057  3007               	movlw	7
  5012     0058  1283               	bcf	3,5	;RP0=0, select bank0
  5013     0059  1303               	bcf	3,6	;RP1=0, select bank0
  5014     005A  00A1               	movwf	??_scherm_init
  5015     005B                     u1877:
  5016     005B  0BA1               	decfsz	??_scherm_init,f
  5017     005C  285B               	goto	u1877
  5018     005D  0000               	nop
  5019     005E                     l2187:
  5020                           
  5021                           ;scherm.c: 26:     PORTCbits.RC2 = 1;
  5022     005E  1283               	bcf	3,5	;RP0=0, select bank0
  5023     005F  1303               	bcf	3,6	;RP1=0, select bank0
  5024     0060  1507               	bsf	7,2	;volatile
  5025     0061                     l2189:
  5026                           
  5027                           ;scherm.c: 27:     PORTDbits.RD2 = 1;
  5028     0061  1508               	bsf	8,2	;volatile
  5029     0062                     l2191:
  5030                           
  5031                           ;scherm.c: 29:     PORTCbits.RC7 = 0;
  5032     0062  1387               	bcf	7,7	;volatile
  5033     0063                     l2193:
  5034                           
  5035                           ;scherm.c: 30:     PORTDbits.RD7 = 0;
  5036     0063  1388               	bcf	8,7	;volatile
  5037     0064                     l2195:
  5038                           
  5039                           ;scherm.c: 32:     PORTCbits.RC4 = 0;
  5040     0064  1207               	bcf	7,4	;volatile
  5041     0065                     l2197:
  5042                           
  5043                           ;scherm.c: 33:     PORTDbits.RD4 = 0;
  5044     0065  1208               	bcf	8,4	;volatile
  5045     0066                     l2199:
  5046                           
  5047                           ;scherm.c: 34:     for (int i = 0; i < 40; i++) {
  5048     0066  01A2               	clrf	scherm_init@i
  5049     0067  01A3               	clrf	scherm_init@i+1
  5050     0068                     l2205:
  5051                           
  5052                           ;scherm.c: 35:         screen_transmit(0b00000000);
  5053     0068  3000               	movlw	0
  5054     0069  160A  118A  201D  120A  118A  	fcall	_screen_transmit
  5055     006E                     l2207:
  5056                           
  5057                           ;scherm.c: 36:     }
  5058     006E  3001               	movlw	1
  5059     006F  1283               	bcf	3,5	;RP0=0, select bank0
  5060     0070  1303               	bcf	3,6	;RP1=0, select bank0
  5061     0071  07A2               	addwf	scherm_init@i,f
  5062     0072  1803               	skipnc
  5063     0073  0AA3               	incf	scherm_init@i+1,f
  5064     0074  3000               	movlw	0
  5065     0075  07A3               	addwf	scherm_init@i+1,f
  5066     0076                     l2209:
  5067     0076  0823               	movf	scherm_init@i+1,w
  5068     0077  3A80               	xorlw	128
  5069     0078  00FF               	movwf	btemp+1
  5070     0079  3080               	movlw	128
  5071     007A  027F               	subwf	btemp+1,w
  5072     007B  1D03               	skipz
  5073     007C  287F               	goto	u1485
  5074     007D  3028               	movlw	40
  5075     007E  0222               	subwf	scherm_init@i,w
  5076     007F                     u1485:
  5077     007F  1C03               	skipc
  5078     0080  2882               	goto	u1481
  5079     0081  2883               	goto	u1480
  5080     0082                     u1481:
  5081     0082  2868               	goto	l2205
  5082     0083                     u1480:
  5083     0083                     l2211:
  5084                           
  5085                           ;scherm.c: 37:     _delay((unsigned long)((200)*(500000/4000000.0)));
  5086     0083  3007               	movlw	7
  5087     0084  1283               	bcf	3,5	;RP0=0, select bank0
  5088     0085  1303               	bcf	3,6	;RP1=0, select bank0
  5089     0086  00A1               	movwf	??_scherm_init
  5090     0087                     u1887:
  5091     0087  0BA1               	decfsz	??_scherm_init,f
  5092     0088  2887               	goto	u1887
  5093     0089  0000               	nop
  5094     008A                     l2213:
  5095                           
  5096                           ;scherm.c: 38:     PORTCbits.RC4 = 1;
  5097     008A  1283               	bcf	3,5	;RP0=0, select bank0
  5098     008B  1303               	bcf	3,6	;RP1=0, select bank0
  5099     008C  1607               	bsf	7,4	;volatile
  5100     008D                     l2215:
  5101                           
  5102                           ;scherm.c: 39:     PORTDbits.RD4 = 1;
  5103     008D  1608               	bsf	8,4	;volatile
  5104     008E                     l2217:
  5105                           
  5106                           ;scherm.c: 41:     PORTCbits.RC7 = 1;
  5107     008E  1787               	bsf	7,7	;volatile
  5108     008F                     l2219:
  5109                           
  5110                           ;scherm.c: 42:     PORTDbits.RD7 = 1;
  5111     008F  1788               	bsf	8,7	;volatile
  5112     0090                     l2221:
  5113                           
  5114                           ;scherm.c: 45:     PORTCbits.RC4 = 0;
  5115     0090  1207               	bcf	7,4	;volatile
  5116     0091                     l2223:
  5117                           
  5118                           ;scherm.c: 46:     PORTDbits.RD4 = 0;
  5119     0091  1208               	bcf	8,4	;volatile
  5120     0092                     l2225:
  5121                           
  5122                           ;scherm.c: 48:     screen_transmit(controlWord_0);
  5123     0092  0826               	movf	scherm_init@controlWord_0,w
  5124     0093  160A  118A  201D  120A  118A  	fcall	_screen_transmit
  5125     0098                     l2227:
  5126                           
  5127                           ;scherm.c: 49:     screen_transmit(controlWord_0);
  5128     0098  1283               	bcf	3,5	;RP0=0, select bank0
  5129     0099  1303               	bcf	3,6	;RP1=0, select bank0
  5130     009A  0826               	movf	scherm_init@controlWord_0,w
  5131     009B  160A  118A  201D  120A  118A  	fcall	_screen_transmit
  5132                           
  5133                           ;scherm.c: 50:     _delay((unsigned long)((200)*(500000/4000000.0)));
  5134     00A0  3007               	movlw	7
  5135     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  5136     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  5137     00A3  00A1               	movwf	??_scherm_init
  5138     00A4                     u1897:
  5139     00A4  0BA1               	decfsz	??_scherm_init,f
  5140     00A5  28A4               	goto	u1897
  5141     00A6  0000               	nop
  5142     00A7                     l2229:
  5143                           
  5144                           ;scherm.c: 52:     PORTCbits.RC4 = 1;
  5145     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  5146     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  5147     00A9  1607               	bsf	7,4	;volatile
  5148     00AA                     l2231:
  5149                           
  5150                           ;scherm.c: 53:     PORTDbits.RD4 = 1;
  5151     00AA  1608               	bsf	8,4	;volatile
  5152     00AB                     l2233:
  5153                           
  5154                           ;scherm.c: 56:     PORTCbits.RC4 = 0;
  5155     00AB  1207               	bcf	7,4	;volatile
  5156     00AC                     l2235:
  5157                           
  5158                           ;scherm.c: 57:     PORTDbits.RD4 = 0;
  5159     00AC  1208               	bcf	8,4	;volatile
  5160     00AD                     l2237:
  5161                           
  5162                           ;scherm.c: 59:     screen_transmit(controlWord_1);
  5163     00AD  0825               	movf	scherm_init@controlWord_1,w
  5164     00AE  160A  118A  201D  120A  118A  	fcall	_screen_transmit
  5165     00B3                     l2239:
  5166                           
  5167                           ;scherm.c: 60:     screen_transmit(controlWord_1);
  5168     00B3  1283               	bcf	3,5	;RP0=0, select bank0
  5169     00B4  1303               	bcf	3,6	;RP1=0, select bank0
  5170     00B5  0825               	movf	scherm_init@controlWord_1,w
  5171     00B6  160A  118A  201D  120A  118A  	fcall	_screen_transmit
  5172                           
  5173                           ;scherm.c: 61:     _delay((unsigned long)((200)*(500000/4000000.0)));
  5174     00BB  3007               	movlw	7
  5175     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  5176     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  5177     00BE  00A1               	movwf	??_scherm_init
  5178     00BF                     u1907:
  5179     00BF  0BA1               	decfsz	??_scherm_init,f
  5180     00C0  28BF               	goto	u1907
  5181     00C1  0000               	nop
  5182     00C2                     l2241:
  5183                           
  5184                           ;scherm.c: 63:     PORTCbits.RC4 = 1;
  5185     00C2  1283               	bcf	3,5	;RP0=0, select bank0
  5186     00C3  1303               	bcf	3,6	;RP1=0, select bank0
  5187     00C4  1607               	bsf	7,4	;volatile
  5188     00C5                     l2243:
  5189                           
  5190                           ;scherm.c: 64:     PORTDbits.RD4 = 1;
  5191     00C5  1608               	bsf	8,4	;volatile
  5192     00C6                     l2245:
  5193                           
  5194                           ;scherm.c: 66:     PORTCbits.RC7 = 0;
  5195     00C6  1387               	bcf	7,7	;volatile
  5196     00C7                     l2247:
  5197                           
  5198                           ;scherm.c: 67:     PORTDbits.RD7 = 0;
  5199     00C7  1388               	bcf	8,7	;volatile
  5200     00C8                     l433:
  5201     00C8  0008               	return
  5202     00C9                     __end_of_scherm_init:
  5203                           
  5204                           	psect	text5
  5205     101D                     __ptext5:	
  5206 ;; *************** function _screen_transmit *****************
  5207 ;; Defined at:
  5208 ;;		line 190 in file "scherm.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  c               1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  c               1    0[BANK0 ] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      void 
  5215 ;; Registers used:
  5216 ;;		wreg
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5222 ;;      Params:         0       0       0       0       0
  5223 ;;      Locals:         0       1       0       0       0
  5224 ;;      Temps:          0       0       0       0       0
  5225 ;;      Totals:         0       1       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; Hardware stack levels required when called: 3
  5229 ;; This function calls:
  5230 ;;		Nothing
  5231 ;; This function is called by:
  5232 ;;		_scherm_init
  5233 ;;		_send_buffer
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237     101D                     _screen_transmit:	
  5238                           ;psect for function _screen_transmit
  5239                           
  5240                           
  5241                           ;incstack = 0
  5242                           ; Regs used in _screen_transmit: [wreg]
  5243                           ;screen_transmit@c stored from wreg
  5244     101D  1283               	bcf	3,5	;RP0=0, select bank0
  5245     101E  1303               	bcf	3,6	;RP1=0, select bank0
  5246     101F  00A0               	movwf	screen_transmit@c
  5247     1020                     l2049:
  5248                           
  5249                           ;scherm.c: 192:     SSPBUF = c;
  5250     1020  0820               	movf	screen_transmit@c,w
  5251     1021  0093               	movwf	19	;volatile
  5252     1022                     l529:
  5253     1022  0008               	return
  5254     1023                     __end_of_screen_transmit:
  5255                           
  5256                           	psect	text6
  5257     10B1                     __ptext6:	
  5258 ;; *************** function _pic_init *****************
  5259 ;; Defined at:
  5260 ;;		line 3 in file "init.c"
  5261 ;; Parameters:    Size  Location     Type
  5262 ;;		None
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;		None
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, pclath, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5274 ;;      Params:         0       0       0       0       0
  5275 ;;      Locals:         0       0       0       0       0
  5276 ;;      Temps:          0       0       0       0       0
  5277 ;;      Totals:         0       0       0       0       0
  5278 ;;Total ram usage:        0 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 4
  5281 ;; This function calls:
  5282 ;;		_adc_init
  5283 ;;		_init_osc
  5284 ;;		_interrupt_init
  5285 ;;		_pins_init
  5286 ;;		_ports_init
  5287 ;;		_timer_init
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           
  5293     10B1                     _pic_init:	
  5294                           ;psect for function _pic_init
  5295                           
  5296     10B1                     l2131:	
  5297                           ;incstack = 0
  5298                           ; Regs used in _pic_init: [wreg+status,2+status,0+pclath+cstack]
  5299                           
  5300                           
  5301                           ;init.c: 4:     init_osc();
  5302     10B1  160A  118A  2033  160A  118A  	fcall	_init_osc
  5303                           
  5304                           ;init.c: 5:     ports_init();
  5305     10B6  120A  158A  236B  160A  118A  	fcall	_ports_init
  5306     10BB                     l2133:
  5307                           
  5308                           ;init.c: 6:     pins_init();
  5309     10BB  160A  118A  203E  160A  118A  	fcall	_pins_init
  5310     10C0                     l2135:
  5311                           
  5312                           ;init.c: 7:     interrupt_init();
  5313     10C0  160A  118A  206D  160A  118A  	fcall	_interrupt_init
  5314                           
  5315                           ;init.c: 8:     timer_init();
  5316     10C5  160A  118A  2023  160A  118A  	fcall	_timer_init
  5317                           
  5318                           ;init.c: 9:     adc_init();
  5319     10CA  160A  118A  209A  160A  118A  	fcall	_adc_init
  5320     10CF                     l137:
  5321     10CF  0008               	return
  5322     10D0                     __end_of_pic_init:
  5323                           
  5324                           	psect	text7
  5325     1023                     __ptext7:	
  5326 ;; *************** function _timer_init *****************
  5327 ;; Defined at:
  5328 ;;		line 60 in file "init.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;		None
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;		None
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, status,2, status,0
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5342 ;;      Params:         0       0       0       0       0
  5343 ;;      Locals:         0       0       0       0       0
  5344 ;;      Temps:          0       0       0       0       0
  5345 ;;      Totals:         0       0       0       0       0
  5346 ;;Total ram usage:        0 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 3
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_pic_init
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356     1023                     _timer_init:	
  5357                           ;psect for function _timer_init
  5358                           
  5359     1023                     l2029:	
  5360                           ;incstack = 0
  5361                           ; Regs used in _timer_init: [wreg+status,2+status,0]
  5362                           
  5363                           
  5364                           ;init.c: 61:     T1CONbits.TMR1CS = 0;
  5365     1023  1283               	bcf	3,5	;RP0=0, select bank0
  5366     1024  1303               	bcf	3,6	;RP1=0, select bank0
  5367     1025  1090               	bcf	16,1	;volatile
  5368     1026                     l2031:
  5369                           
  5370                           ;init.c: 62:     T1CONbits.T1CKPS = 0b10;
  5371     1026  0810               	movf	16,w	;volatile
  5372     1027  39CF               	andlw	-49
  5373     1028  3820               	iorlw	32
  5374     1029  0090               	movwf	16	;volatile
  5375     102A                     l155:
  5376     102A  0008               	return
  5377     102B                     __end_of_timer_init:
  5378                           
  5379                           	psect	text8
  5380     0B6B                     __ptext8:	
  5381 ;; *************** function _ports_init *****************
  5382 ;; Defined at:
  5383 ;;		line 19 in file "init.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;		None
  5386 ;; Auto vars:     Size  Location     Type
  5387 ;;		None
  5388 ;; Return value:  Size  Location     Type
  5389 ;;                  1    wreg      void 
  5390 ;; Registers used:
  5391 ;;		wreg, status,2
  5392 ;; Tracked objects:
  5393 ;;		On entry : 0/0
  5394 ;;		On exit  : 0/0
  5395 ;;		Unchanged: 0/0
  5396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5397 ;;      Params:         0       0       0       0       0
  5398 ;;      Locals:         0       0       0       0       0
  5399 ;;      Temps:          0       0       0       0       0
  5400 ;;      Totals:         0       0       0       0       0
  5401 ;;Total ram usage:        0 bytes
  5402 ;; Hardware stack levels used: 1
  5403 ;; Hardware stack levels required when called: 3
  5404 ;; This function calls:
  5405 ;;		Nothing
  5406 ;; This function is called by:
  5407 ;;		_pic_init
  5408 ;; This function uses a non-reentrant model
  5409 ;;
  5410                           
  5411     0B6B                     _ports_init:	
  5412                           ;psect for function _ports_init
  5413                           
  5414     0B6B                     l2017:	
  5415                           ;incstack = 0
  5416                           ; Regs used in _ports_init: [wreg+status,2]
  5417                           
  5418                           
  5419                           ;init.c: 20:     ANSEL = 0;
  5420     0B6B  1683               	bsf	3,5	;RP0=1, select bank3
  5421     0B6C  1703               	bsf	3,6	;RP1=1, select bank3
  5422     0B6D  0188               	clrf	8	;volatile
  5423                           
  5424                           ;init.c: 21:     ANSELH = 0;
  5425     0B6E  0189               	clrf	9	;volatile
  5426                           
  5427                           ;init.c: 23:     TRISA = 0;
  5428     0B6F  1683               	bsf	3,5	;RP0=1, select bank1
  5429     0B70  1303               	bcf	3,6	;RP1=0, select bank1
  5430     0B71  0185               	clrf	5	;volatile
  5431                           
  5432                           ;init.c: 24:     TRISB = 0;
  5433     0B72  0186               	clrf	6	;volatile
  5434                           
  5435                           ;init.c: 25:     TRISC = 0;
  5436     0B73  0187               	clrf	7	;volatile
  5437                           
  5438                           ;init.c: 26:     TRISD = 0;
  5439     0B74  0188               	clrf	8	;volatile
  5440                           
  5441                           ;init.c: 27:     TRISE = 0;
  5442     0B75  0189               	clrf	9	;volatile
  5443                           
  5444                           ;init.c: 29:     PORTA = 0;
  5445     0B76  1283               	bcf	3,5	;RP0=0, select bank0
  5446     0B77  1303               	bcf	3,6	;RP1=0, select bank0
  5447     0B78  0185               	clrf	5	;volatile
  5448                           
  5449                           ;init.c: 30:     PORTB = 0;
  5450     0B79  0186               	clrf	6	;volatile
  5451     0B7A                     l2019:
  5452                           
  5453                           ;init.c: 31:     PORTC = 0b00000011;
  5454     0B7A  3003               	movlw	3
  5455     0B7B  0087               	movwf	7	;volatile
  5456     0B7C                     l2021:
  5457                           
  5458                           ;init.c: 32:     PORTD = 0;
  5459     0B7C  0188               	clrf	8	;volatile
  5460     0B7D                     l2023:
  5461                           
  5462                           ;init.c: 33:     PORTE = 0;
  5463     0B7D  0189               	clrf	9	;volatile
  5464     0B7E                     l146:
  5465     0B7E  0008               	return
  5466     0B7F                     __end_of_ports_init:
  5467                           
  5468                           	psect	text9
  5469     103E                     __ptext9:	
  5470 ;; *************** function _pins_init *****************
  5471 ;; Defined at:
  5472 ;;		line 35 in file "init.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;		None
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  1    wreg      void 
  5479 ;; Registers used:
  5480 ;;		None
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5486 ;;      Params:         0       0       0       0       0
  5487 ;;      Locals:         0       0       0       0       0
  5488 ;;      Temps:          0       0       0       0       0
  5489 ;;      Totals:         0       0       0       0       0
  5490 ;;Total ram usage:        0 bytes
  5491 ;; Hardware stack levels used: 1
  5492 ;; Hardware stack levels required when called: 3
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_pic_init
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500     103E                     _pins_init:	
  5501                           ;psect for function _pins_init
  5502                           
  5503     103E                     l2025:	
  5504                           ;incstack = 0
  5505                           ; Regs used in _pins_init: []
  5506                           
  5507                           
  5508                           ;init.c: 36:     TRISEbits.TRISE2 = 1;
  5509     103E  1683               	bsf	3,5	;RP0=1, select bank1
  5510     103F  1303               	bcf	3,6	;RP1=0, select bank1
  5511     1040  1509               	bsf	9,2	;volatile
  5512                           
  5513                           ;init.c: 37:     ANSELbits.ANS7 = 1;
  5514     1041  1683               	bsf	3,5	;RP0=1, select bank3
  5515     1042  1703               	bsf	3,6	;RP1=1, select bank3
  5516     1043  1788               	bsf	8,7	;volatile
  5517                           
  5518                           ;init.c: 38:     TRISBbits.TRISB0 = 1;
  5519     1044  1683               	bsf	3,5	;RP0=1, select bank1
  5520     1045  1303               	bcf	3,6	;RP1=0, select bank1
  5521     1046  1406               	bsf	6,0	;volatile
  5522                           
  5523                           ;init.c: 39:     TRISBbits.TRISB4 = 1;
  5524     1047  1606               	bsf	6,4	;volatile
  5525                           
  5526                           ;init.c: 40:     TRISBbits.TRISB5 = 1;
  5527     1048  1686               	bsf	6,5	;volatile
  5528                           
  5529                           ;init.c: 41:     PSTRCONbits.STRC = 0;
  5530     1049  111D               	bcf	29,2	;volatile
  5531     104A                     l149:
  5532     104A  0008               	return
  5533     104B                     __end_of_pins_init:
  5534                           
  5535                           	psect	text10
  5536     106D                     __ptext10:	
  5537 ;; *************** function _interrupt_init *****************
  5538 ;; Defined at:
  5539 ;;		line 43 in file "init.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;		None
  5542 ;; Auto vars:     Size  Location     Type
  5543 ;;		None
  5544 ;; Return value:  Size  Location     Type
  5545 ;;                  1    wreg      void 
  5546 ;; Registers used:
  5547 ;;		None
  5548 ;; Tracked objects:
  5549 ;;		On entry : 0/0
  5550 ;;		On exit  : 0/0
  5551 ;;		Unchanged: 0/0
  5552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5553 ;;      Params:         0       0       0       0       0
  5554 ;;      Locals:         0       0       0       0       0
  5555 ;;      Temps:          0       0       0       0       0
  5556 ;;      Totals:         0       0       0       0       0
  5557 ;;Total ram usage:        0 bytes
  5558 ;; Hardware stack levels used: 1
  5559 ;; Hardware stack levels required when called: 3
  5560 ;; This function calls:
  5561 ;;		Nothing
  5562 ;; This function is called by:
  5563 ;;		_pic_init
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567     106D                     _interrupt_init:	
  5568                           ;psect for function _interrupt_init
  5569                           
  5570     106D                     l2027:	
  5571                           ;incstack = 0
  5572                           ; Regs used in _interrupt_init: []
  5573                           
  5574                           
  5575                           ;init.c: 44:     INTCONbits.RBIF = 0;
  5576     106D  100B               	bcf	11,0	;volatile
  5577                           
  5578                           ;init.c: 45:     INTCONbits.RBIE = 1;
  5579     106E  158B               	bsf	11,3	;volatile
  5580                           
  5581                           ;init.c: 46:     PIE1bits.ADIE = 1;
  5582     106F  1683               	bsf	3,5	;RP0=1, select bank1
  5583     1070  1303               	bcf	3,6	;RP1=0, select bank1
  5584     1071  170C               	bsf	12,6	;volatile
  5585                           
  5586                           ;init.c: 47:     PIR1bits.ADIF = 0;
  5587     1072  1283               	bcf	3,5	;RP0=0, select bank0
  5588     1073  1303               	bcf	3,6	;RP1=0, select bank0
  5589     1074  130C               	bcf	12,6	;volatile
  5590                           
  5591                           ;init.c: 48:     IOCBbits.IOCB4 = 1;
  5592     1075  1683               	bsf	3,5	;RP0=1, select bank1
  5593     1076  1303               	bcf	3,6	;RP1=0, select bank1
  5594     1077  1616               	bsf	22,4	;volatile
  5595                           
  5596                           ;init.c: 49:     IOCBbits.IOCB5 = 1;
  5597     1078  1696               	bsf	22,5	;volatile
  5598                           
  5599                           ;init.c: 51:     OPTION_REGbits.INTEDG = 0;
  5600     1079  1301               	bcf	1,6	;volatile
  5601                           
  5602                           ;init.c: 52:     INTCONbits.INTE = 1;
  5603     107A  160B               	bsf	11,4	;volatile
  5604                           
  5605                           ;init.c: 53:     INTCONbits.INTF = 0;
  5606     107B  108B               	bcf	11,1	;volatile
  5607                           
  5608                           ;init.c: 54:     PIE1bits.TMR1IE = 1;
  5609     107C  140C               	bsf	12,0	;volatile
  5610                           
  5611                           ;init.c: 55:     PIR1bits.TMR1IF = 0;
  5612     107D  1283               	bcf	3,5	;RP0=0, select bank0
  5613     107E  1303               	bcf	3,6	;RP1=0, select bank0
  5614     107F  100C               	bcf	12,0	;volatile
  5615                           
  5616                           ;init.c: 57:     INTCONbits.PEIE = 1;
  5617     1080  170B               	bsf	11,6	;volatile
  5618                           
  5619                           ;init.c: 58:     INTCONbits.GIE = 1;
  5620     1081  178B               	bsf	11,7	;volatile
  5621     1082                     l152:
  5622     1082  0008               	return
  5623     1083                     __end_of_interrupt_init:
  5624                           
  5625                           	psect	text11
  5626     1033                     __ptext11:	
  5627 ;; *************** function _init_osc *****************
  5628 ;; Defined at:
  5629 ;;		line 12 in file "init.c"
  5630 ;; Parameters:    Size  Location     Type
  5631 ;;		None
  5632 ;; Auto vars:     Size  Location     Type
  5633 ;;		None
  5634 ;; Return value:  Size  Location     Type
  5635 ;;                  1    wreg      void 
  5636 ;; Registers used:
  5637 ;;		wreg, status,2, status,0
  5638 ;; Tracked objects:
  5639 ;;		On entry : 0/0
  5640 ;;		On exit  : 0/0
  5641 ;;		Unchanged: 0/0
  5642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5643 ;;      Params:         0       0       0       0       0
  5644 ;;      Locals:         0       0       0       0       0
  5645 ;;      Temps:          0       0       0       0       0
  5646 ;;      Totals:         0       0       0       0       0
  5647 ;;Total ram usage:        0 bytes
  5648 ;; Hardware stack levels used: 1
  5649 ;; Hardware stack levels required when called: 3
  5650 ;; This function calls:
  5651 ;;		Nothing
  5652 ;; This function is called by:
  5653 ;;		_pic_init
  5654 ;; This function uses a non-reentrant model
  5655 ;;
  5656                           
  5657     1033                     _init_osc:	
  5658                           ;psect for function _init_osc
  5659                           
  5660     1033                     l2011:	
  5661                           ;incstack = 0
  5662                           ; Regs used in _init_osc: [wreg+status,2+status,0]
  5663                           
  5664                           
  5665                           ;init.c: 13:     OSCCONbits.SCS = 0;
  5666     1033  1683               	bsf	3,5	;RP0=1, select bank1
  5667     1034  1303               	bcf	3,6	;RP1=0, select bank1
  5668     1035  100F               	bcf	15,0	;volatile
  5669     1036                     l2013:
  5670                           
  5671                           ;init.c: 14:     OSCCONbits.IRCF = 0b111;
  5672     1036  3070               	movlw	112
  5673     1037  048F               	iorwf	15,f	;volatile
  5674     1038                     l2015:
  5675                           
  5676                           ;init.c: 15:     OSCCONbits.OSTS = 0b1;
  5677     1038  158F               	bsf	15,3	;volatile
  5678     1039                     l140:	
  5679                           ;init.c: 17:     while (OSCCONbits.HTS != 0b1);
  5680                           
  5681     1039  1D0F               	btfss	15,2	;volatile
  5682     103A  283C               	goto	u1281
  5683     103B  283D               	goto	u1280
  5684     103C                     u1281:
  5685     103C  2839               	goto	l140
  5686     103D                     u1280:
  5687     103D                     l143:
  5688     103D  0008               	return
  5689     103E                     __end_of_init_osc:
  5690                           
  5691                           	psect	text12
  5692     109A                     __ptext12:	
  5693 ;; *************** function _adc_init *****************
  5694 ;; Defined at:
  5695 ;;		line 64 in file "init.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;		None
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  1    wreg      void 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5709 ;;      Params:         0       0       0       0       0
  5710 ;;      Locals:         0       0       0       0       0
  5711 ;;      Temps:          0       0       0       0       0
  5712 ;;      Totals:         0       0       0       0       0
  5713 ;;Total ram usage:        0 bytes
  5714 ;; Hardware stack levels used: 1
  5715 ;; Hardware stack levels required when called: 3
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_pic_init
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723     109A                     _adc_init:	
  5724                           ;psect for function _adc_init
  5725                           
  5726     109A                     l2033:	
  5727                           ;incstack = 0
  5728                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  5729                           
  5730                           
  5731                           ;init.c: 65:     ADCON0bits.ADCS = 0b10;
  5732     109A  1283               	bcf	3,5	;RP0=0, select bank0
  5733     109B  1303               	bcf	3,6	;RP1=0, select bank0
  5734     109C  081F               	movf	31,w	;volatile
  5735     109D  393F               	andlw	-193
  5736     109E  3880               	iorlw	128
  5737     109F  009F               	movwf	31	;volatile
  5738     10A0                     l2035:
  5739                           
  5740                           ;init.c: 66:     ADCON1bits.VCFG0 = 0;
  5741     10A0  1683               	bsf	3,5	;RP0=1, select bank1
  5742     10A1  1303               	bcf	3,6	;RP1=0, select bank1
  5743     10A2  121F               	bcf	31,4	;volatile
  5744     10A3                     l2037:
  5745                           
  5746                           ;init.c: 67:     ADCON1bits.VCFG1 = 0;
  5747     10A3  129F               	bcf	31,5	;volatile
  5748                           
  5749                           ;init.c: 68:     ADCON0bits.CHS = 0b0111;
  5750     10A4  1283               	bcf	3,5	;RP0=0, select bank0
  5751     10A5  1303               	bcf	3,6	;RP1=0, select bank0
  5752     10A6  081F               	movf	31,w	;volatile
  5753     10A7  39C3               	andlw	-61
  5754     10A8  381C               	iorlw	28
  5755     10A9  009F               	movwf	31	;volatile
  5756     10AA                     l2039:
  5757                           
  5758                           ;init.c: 69:     ADCON1bits.ADFM = 1;
  5759     10AA  1683               	bsf	3,5	;RP0=1, select bank1
  5760     10AB  1303               	bcf	3,6	;RP1=0, select bank1
  5761     10AC  179F               	bsf	31,7	;volatile
  5762     10AD                     l2041:
  5763                           
  5764                           ;init.c: 70:     ADCON0bits.ADON = 1;
  5765     10AD  1283               	bcf	3,5	;RP0=0, select bank0
  5766     10AE  1303               	bcf	3,6	;RP1=0, select bank0
  5767     10AF  141F               	bsf	31,0	;volatile
  5768     10B0                     l158:
  5769     10B0  0008               	return
  5770     10B1                     __end_of_adc_init:
  5771                           
  5772                           	psect	text13
  5773     0E1B                     __ptext13:	
  5774 ;; *************** function _key_detection *****************
  5775 ;; Defined at:
  5776 ;;		line 29 in file "remote.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;  temp_code       4   73[BANK0 ] long 
  5781 ;;  check           4   69[BANK0 ] long 
  5782 ;; Return value:  Size  Location     Type
  5783 ;;                  1    wreg      void 
  5784 ;; Registers used:
  5785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5786 ;; Tracked objects:
  5787 ;;		On entry : 0/0
  5788 ;;		On exit  : 0/0
  5789 ;;		Unchanged: 0/0
  5790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5791 ;;      Params:         0       0       0       0       0
  5792 ;;      Locals:         0       8       0       0       0
  5793 ;;      Temps:          0       0       0       0       0
  5794 ;;      Totals:         0       8       0       0       0
  5795 ;;Total ram usage:        8 bytes
  5796 ;; Hardware stack levels used: 1
  5797 ;; Hardware stack levels required when called: 7
  5798 ;; This function calls:
  5799 ;;		_scherm_setup
  5800 ;; This function is called by:
  5801 ;;		_main
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805     0E1B                     _key_detection:	
  5806                           ;psect for function _key_detection
  5807                           
  5808     0E1B                     l2249:	
  5809                           ;incstack = 0
  5810                           ; Regs used in _key_detection: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5811                           
  5812                           
  5813                           ;remote.c: 30:     long check = final_code & 0b111000000000;
  5814     0E1B  3000               	movlw	0
  5815     0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  5816     0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  5817     0E1E  0545               	andwf	_final_code^(0+128),w	;volatile
  5818     0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  5819     0E20  1303               	bcf	3,6	;RP1=0, select bank0
  5820     0E21  00E5               	movwf	key_detection@check
  5821     0E22  300E               	movlw	14
  5822     0E23  1683               	bsf	3,5	;RP0=1, select bank1
  5823     0E24  1303               	bcf	3,6	;RP1=0, select bank1
  5824     0E25  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  5825     0E26  1283               	bcf	3,5	;RP0=0, select bank0
  5826     0E27  1303               	bcf	3,6	;RP1=0, select bank0
  5827     0E28  00E6               	movwf	key_detection@check+1
  5828     0E29  3000               	movlw	0
  5829     0E2A  1683               	bsf	3,5	;RP0=1, select bank1
  5830     0E2B  1303               	bcf	3,6	;RP1=0, select bank1
  5831     0E2C  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  5832     0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  5833     0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  5834     0E2F  00E7               	movwf	key_detection@check+2
  5835     0E30  3000               	movlw	0
  5836     0E31  1683               	bsf	3,5	;RP0=1, select bank1
  5837     0E32  1303               	bcf	3,6	;RP1=0, select bank1
  5838     0E33  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  5839     0E34  1283               	bcf	3,5	;RP0=0, select bank0
  5840     0E35  1303               	bcf	3,6	;RP1=0, select bank0
  5841     0E36  00E8               	movwf	key_detection@check+3
  5842     0E37                     l2251:
  5843                           
  5844                           ;remote.c: 31:     long temp_code;;remote.c: 32:     if (check == 0b010000000000) {
  5845     0E37  3004               	movlw	4
  5846     0E38  0666               	xorwf	key_detection@check+1,w
  5847     0E39  0465               	iorwf	key_detection@check,w
  5848     0E3A  0467               	iorwf	key_detection@check+2,w
  5849     0E3B  0468               	iorwf	key_detection@check+3,w
  5850     0E3C  1D03               	btfss	3,2
  5851     0E3D  2E3F               	goto	u1491
  5852     0E3E  2E40               	goto	u1490
  5853     0E3F                     u1491:
  5854     0E3F  2FE0               	goto	l2303
  5855     0E40                     u1490:
  5856     0E40                     l2253:
  5857                           
  5858                           ;remote.c: 33:         temp_code = (final_code & 0b010100100000);
  5859     0E40  3020               	movlw	32
  5860     0E41  1683               	bsf	3,5	;RP0=1, select bank1
  5861     0E42  1303               	bcf	3,6	;RP1=0, select bank1
  5862     0E43  0545               	andwf	_final_code^(0+128),w	;volatile
  5863     0E44  1283               	bcf	3,5	;RP0=0, select bank0
  5864     0E45  1303               	bcf	3,6	;RP1=0, select bank0
  5865     0E46  00E9               	movwf	key_detection@temp_code
  5866     0E47  3005               	movlw	5
  5867     0E48  1683               	bsf	3,5	;RP0=1, select bank1
  5868     0E49  1303               	bcf	3,6	;RP1=0, select bank1
  5869     0E4A  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  5870     0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  5871     0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  5872     0E4D  00EA               	movwf	key_detection@temp_code+1
  5873     0E4E  3000               	movlw	0
  5874     0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  5875     0E50  1303               	bcf	3,6	;RP1=0, select bank1
  5876     0E51  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  5877     0E52  1283               	bcf	3,5	;RP0=0, select bank0
  5878     0E53  1303               	bcf	3,6	;RP1=0, select bank0
  5879     0E54  00EB               	movwf	key_detection@temp_code+2
  5880     0E55  3000               	movlw	0
  5881     0E56  1683               	bsf	3,5	;RP0=1, select bank1
  5882     0E57  1303               	bcf	3,6	;RP1=0, select bank1
  5883     0E58  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  5884     0E59  1283               	bcf	3,5	;RP0=0, select bank0
  5885     0E5A  1303               	bcf	3,6	;RP1=0, select bank0
  5886     0E5B  00EC               	movwf	key_detection@temp_code+3
  5887     0E5C                     l2255:
  5888                           
  5889                           ;remote.c: 34:         if (temp_code == 0b010100100000) {
  5890     0E5C  3020               	movlw	32
  5891     0E5D  0669               	xorwf	key_detection@temp_code,w
  5892     0E5E  3005               	movlw	5
  5893     0E5F  1903               	skipnz
  5894     0E60  066A               	xorwf	key_detection@temp_code+1,w
  5895     0E61  046B               	iorwf	key_detection@temp_code+2,w
  5896     0E62  046C               	iorwf	key_detection@temp_code+3,w
  5897     0E63  1D03               	btfss	3,2
  5898     0E64  2E66               	goto	u1501
  5899     0E65  2E67               	goto	u1500
  5900     0E66                     u1501:
  5901     0E66  2E94               	goto	l2265
  5902     0E67                     u1500:
  5903     0E67                     l2257:
  5904                           
  5905                           ;remote.c: 37:             if (volume < 40) {
  5906     0E67  1283               	bcf	3,5	;RP0=0, select bank0
  5907     0E68  1303               	bcf	3,6	;RP1=0, select bank0
  5908     0E69  086E               	movf	_volume+1,w
  5909     0E6A  3A80               	xorlw	128
  5910     0E6B  00FF               	movwf	btemp+1
  5911     0E6C  3080               	movlw	128
  5912     0E6D  027F               	subwf	btemp+1,w
  5913     0E6E  1D03               	skipz
  5914     0E6F  2E72               	goto	u1515
  5915     0E70  3028               	movlw	40
  5916     0E71  026D               	subwf	_volume,w
  5917     0E72                     u1515:
  5918     0E72  1803               	skipnc
  5919     0E73  2E75               	goto	u1511
  5920     0E74  2E76               	goto	u1510
  5921     0E75                     u1511:
  5922     0E75  2E7B               	goto	l2261
  5923     0E76                     u1510:
  5924     0E76                     l2259:
  5925                           
  5926                           ;remote.c: 38:                 PORTCbits.RC0 = 0;
  5927     0E76  1283               	bcf	3,5	;RP0=0, select bank0
  5928     0E77  1303               	bcf	3,6	;RP1=0, select bank0
  5929     0E78  1007               	bcf	7,0	;volatile
  5930                           
  5931                           ;remote.c: 39:                 PORTCbits.RC1 = 1;
  5932     0E79  1487               	bsf	7,1	;volatile
  5933                           
  5934                           ;remote.c: 40:             } else if (volume >= 40) {
  5935     0E7A  2E8E               	goto	l315
  5936     0E7B                     l2261:
  5937     0E7B  1283               	bcf	3,5	;RP0=0, select bank0
  5938     0E7C  1303               	bcf	3,6	;RP1=0, select bank0
  5939     0E7D  086E               	movf	_volume+1,w
  5940     0E7E  3A80               	xorlw	128
  5941     0E7F  00FF               	movwf	btemp+1
  5942     0E80  3080               	movlw	128
  5943     0E81  027F               	subwf	btemp+1,w
  5944     0E82  1D03               	skipz
  5945     0E83  2E86               	goto	u1525
  5946     0E84  3028               	movlw	40
  5947     0E85  026D               	subwf	_volume,w
  5948     0E86                     u1525:
  5949     0E86  1C03               	skipc
  5950     0E87  2E89               	goto	u1521
  5951     0E88  2E8A               	goto	u1520
  5952     0E89                     u1521:
  5953     0E89  2E8E               	goto	l315
  5954     0E8A                     u1520:
  5955     0E8A                     l2263:
  5956                           
  5957                           ;remote.c: 41:                 PORTCbits.RC0 = 1;
  5958     0E8A  1283               	bcf	3,5	;RP0=0, select bank0
  5959     0E8B  1303               	bcf	3,6	;RP1=0, select bank0
  5960     0E8C  1407               	bsf	7,0	;volatile
  5961                           
  5962                           ;remote.c: 42:                 PORTCbits.RC1 = 1;
  5963     0E8D  1487               	bsf	7,1	;volatile
  5964     0E8E                     l315:
  5965                           
  5966                           ;remote.c: 44:             TMR1 = 23000;
  5967     0E8E  3059               	movlw	89
  5968     0E8F  1283               	bcf	3,5	;RP0=0, select bank0
  5969     0E90  1303               	bcf	3,6	;RP1=0, select bank0
  5970     0E91  008F               	movwf	15	;volatile
  5971     0E92  30D8               	movlw	216
  5972     0E93  008E               	movwf	14	;volatile
  5973     0E94                     l2265:
  5974                           
  5975                           ;remote.c: 47:         temp_code = (final_code & 0b010100010000);
  5976     0E94  3010               	movlw	16
  5977     0E95  1683               	bsf	3,5	;RP0=1, select bank1
  5978     0E96  1303               	bcf	3,6	;RP1=0, select bank1
  5979     0E97  0545               	andwf	_final_code^(0+128),w	;volatile
  5980     0E98  1283               	bcf	3,5	;RP0=0, select bank0
  5981     0E99  1303               	bcf	3,6	;RP1=0, select bank0
  5982     0E9A  00E9               	movwf	key_detection@temp_code
  5983     0E9B  3005               	movlw	5
  5984     0E9C  1683               	bsf	3,5	;RP0=1, select bank1
  5985     0E9D  1303               	bcf	3,6	;RP1=0, select bank1
  5986     0E9E  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  5987     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  5988     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  5989     0EA1  00EA               	movwf	key_detection@temp_code+1
  5990     0EA2  3000               	movlw	0
  5991     0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  5992     0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  5993     0EA5  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  5994     0EA6  1283               	bcf	3,5	;RP0=0, select bank0
  5995     0EA7  1303               	bcf	3,6	;RP1=0, select bank0
  5996     0EA8  00EB               	movwf	key_detection@temp_code+2
  5997     0EA9  3000               	movlw	0
  5998     0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  5999     0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  6000     0EAC  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6001     0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  6002     0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  6003     0EAF  00EC               	movwf	key_detection@temp_code+3
  6004     0EB0                     l2267:
  6005                           
  6006                           ;remote.c: 48:         if (temp_code == 0b010100010000) {
  6007     0EB0  3010               	movlw	16
  6008     0EB1  0669               	xorwf	key_detection@temp_code,w
  6009     0EB2  3005               	movlw	5
  6010     0EB3  1903               	skipnz
  6011     0EB4  066A               	xorwf	key_detection@temp_code+1,w
  6012     0EB5  046B               	iorwf	key_detection@temp_code+2,w
  6013     0EB6  046C               	iorwf	key_detection@temp_code+3,w
  6014     0EB7  1D03               	btfss	3,2
  6015     0EB8  2EBA               	goto	u1531
  6016     0EB9  2EBB               	goto	u1530
  6017     0EBA                     u1531:
  6018     0EBA  2EE8               	goto	l2277
  6019     0EBB                     u1530:
  6020     0EBB                     l2269:
  6021                           
  6022                           ;remote.c: 51:             if (volume > 0) {
  6023     0EBB  1283               	bcf	3,5	;RP0=0, select bank0
  6024     0EBC  1303               	bcf	3,6	;RP1=0, select bank0
  6025     0EBD  086E               	movf	_volume+1,w
  6026     0EBE  3A80               	xorlw	128
  6027     0EBF  00FF               	movwf	btemp+1
  6028     0EC0  3080               	movlw	128
  6029     0EC1  027F               	subwf	btemp+1,w
  6030     0EC2  1D03               	skipz
  6031     0EC3  2EC6               	goto	u1545
  6032     0EC4  3001               	movlw	1
  6033     0EC5  026D               	subwf	_volume,w
  6034     0EC6                     u1545:
  6035     0EC6  1C03               	skipc
  6036     0EC7  2EC9               	goto	u1541
  6037     0EC8  2ECA               	goto	u1540
  6038     0EC9                     u1541:
  6039     0EC9  2ECF               	goto	l2273
  6040     0ECA                     u1540:
  6041     0ECA                     l2271:
  6042                           
  6043                           ;remote.c: 52:                 PORTCbits.RC0 = 1;
  6044     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  6045     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  6046     0ECC  1407               	bsf	7,0	;volatile
  6047                           
  6048                           ;remote.c: 53:                 PORTCbits.RC1 = 0;
  6049     0ECD  1087               	bcf	7,1	;volatile
  6050                           
  6051                           ;remote.c: 54:             } else if (volume <= 0) {
  6052     0ECE  2EE2               	goto	l319
  6053     0ECF                     l2273:
  6054     0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  6055     0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  6056     0ED1  086E               	movf	_volume+1,w
  6057     0ED2  3A80               	xorlw	128
  6058     0ED3  00FF               	movwf	btemp+1
  6059     0ED4  3080               	movlw	128
  6060     0ED5  027F               	subwf	btemp+1,w
  6061     0ED6  1D03               	skipz
  6062     0ED7  2EDA               	goto	u1555
  6063     0ED8  3001               	movlw	1
  6064     0ED9  026D               	subwf	_volume,w
  6065     0EDA                     u1555:
  6066     0EDA  1803               	skipnc
  6067     0EDB  2EDD               	goto	u1551
  6068     0EDC  2EDE               	goto	u1550
  6069     0EDD                     u1551:
  6070     0EDD  2EE2               	goto	l319
  6071     0EDE                     u1550:
  6072     0EDE                     l2275:
  6073                           
  6074                           ;remote.c: 55:                 PORTCbits.RC0 = 1;
  6075     0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  6076     0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  6077     0EE0  1407               	bsf	7,0	;volatile
  6078                           
  6079                           ;remote.c: 56:                 PORTCbits.RC1 = 1;
  6080     0EE1  1487               	bsf	7,1	;volatile
  6081     0EE2                     l319:
  6082                           
  6083                           ;remote.c: 58:             TMR1 = 23000;
  6084     0EE2  3059               	movlw	89
  6085     0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  6086     0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  6087     0EE5  008F               	movwf	15	;volatile
  6088     0EE6  30D8               	movlw	216
  6089     0EE7  008E               	movwf	14	;volatile
  6090     0EE8                     l2277:
  6091                           
  6092                           ;remote.c: 61:         temp_code = (final_code & 0b010010010000);
  6093     0EE8  3090               	movlw	144
  6094     0EE9  1683               	bsf	3,5	;RP0=1, select bank1
  6095     0EEA  1303               	bcf	3,6	;RP1=0, select bank1
  6096     0EEB  0545               	andwf	_final_code^(0+128),w	;volatile
  6097     0EEC  1283               	bcf	3,5	;RP0=0, select bank0
  6098     0EED  1303               	bcf	3,6	;RP1=0, select bank0
  6099     0EEE  00E9               	movwf	key_detection@temp_code
  6100     0EEF  3004               	movlw	4
  6101     0EF0  1683               	bsf	3,5	;RP0=1, select bank1
  6102     0EF1  1303               	bcf	3,6	;RP1=0, select bank1
  6103     0EF2  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  6104     0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  6105     0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  6106     0EF5  00EA               	movwf	key_detection@temp_code+1
  6107     0EF6  3000               	movlw	0
  6108     0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  6109     0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  6110     0EF9  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  6111     0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  6112     0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  6113     0EFC  00EB               	movwf	key_detection@temp_code+2
  6114     0EFD  3000               	movlw	0
  6115     0EFE  1683               	bsf	3,5	;RP0=1, select bank1
  6116     0EFF  1303               	bcf	3,6	;RP1=0, select bank1
  6117     0F00  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6118     0F01  1283               	bcf	3,5	;RP0=0, select bank0
  6119     0F02  1303               	bcf	3,6	;RP1=0, select bank0
  6120     0F03  00EC               	movwf	key_detection@temp_code+3
  6121     0F04                     l2279:
  6122                           
  6123                           ;remote.c: 62:         if (temp_code == 0b010010010000) {
  6124     0F04  3090               	movlw	144
  6125     0F05  0669               	xorwf	key_detection@temp_code,w
  6126     0F06  3004               	movlw	4
  6127     0F07  1903               	skipnz
  6128     0F08  066A               	xorwf	key_detection@temp_code+1,w
  6129     0F09  046B               	iorwf	key_detection@temp_code+2,w
  6130     0F0A  046C               	iorwf	key_detection@temp_code+3,w
  6131     0F0B  1D03               	btfss	3,2
  6132     0F0C  2F0E               	goto	u1561
  6133     0F0D  2F0F               	goto	u1560
  6134     0F0E                     u1561:
  6135     0F0E  2F19               	goto	l321
  6136     0F0F                     u1560:
  6137     0F0F                     l2281:
  6138                           
  6139                           ;remote.c: 63:             input = 1;
  6140     0F0F  3001               	movlw	1
  6141     0F10  1683               	bsf	3,5	;RP0=1, select bank1
  6142     0F11  1303               	bcf	3,6	;RP1=0, select bank1
  6143     0F12  00C0               	movwf	_input^(0+128)
  6144     0F13  3000               	movlw	0
  6145     0F14  00C1               	movwf	(_input^(0+128)+1)
  6146                           
  6147                           ;remote.c: 64:             inputChanged = 1;
  6148     0F15  3001               	movlw	1
  6149     0F16  00BC               	movwf	_inputChanged^(0+128)
  6150     0F17  3000               	movlw	0
  6151     0F18  00BD               	movwf	(_inputChanged^(0+128)+1)
  6152     0F19                     l321:	
  6153                           ;remote.c: 65:         }
  6154                           
  6155                           
  6156                           ;remote.c: 67:         temp_code = final_code & 0b010100001000;
  6157     0F19  3008               	movlw	8
  6158     0F1A  1683               	bsf	3,5	;RP0=1, select bank1
  6159     0F1B  1303               	bcf	3,6	;RP1=0, select bank1
  6160     0F1C  0545               	andwf	_final_code^(0+128),w	;volatile
  6161     0F1D  1283               	bcf	3,5	;RP0=0, select bank0
  6162     0F1E  1303               	bcf	3,6	;RP1=0, select bank0
  6163     0F1F  00E9               	movwf	key_detection@temp_code
  6164     0F20  3005               	movlw	5
  6165     0F21  1683               	bsf	3,5	;RP0=1, select bank1
  6166     0F22  1303               	bcf	3,6	;RP1=0, select bank1
  6167     0F23  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  6168     0F24  1283               	bcf	3,5	;RP0=0, select bank0
  6169     0F25  1303               	bcf	3,6	;RP1=0, select bank0
  6170     0F26  00EA               	movwf	key_detection@temp_code+1
  6171     0F27  3000               	movlw	0
  6172     0F28  1683               	bsf	3,5	;RP0=1, select bank1
  6173     0F29  1303               	bcf	3,6	;RP1=0, select bank1
  6174     0F2A  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  6175     0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  6176     0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  6177     0F2D  00EB               	movwf	key_detection@temp_code+2
  6178     0F2E  3000               	movlw	0
  6179     0F2F  1683               	bsf	3,5	;RP0=1, select bank1
  6180     0F30  1303               	bcf	3,6	;RP1=0, select bank1
  6181     0F31  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6182     0F32  1283               	bcf	3,5	;RP0=0, select bank0
  6183     0F33  1303               	bcf	3,6	;RP1=0, select bank0
  6184     0F34  00EC               	movwf	key_detection@temp_code+3
  6185     0F35                     l2283:
  6186                           
  6187                           ;remote.c: 68:         if (temp_code == 0b010100001000) {
  6188     0F35  3008               	movlw	8
  6189     0F36  0669               	xorwf	key_detection@temp_code,w
  6190     0F37  3005               	movlw	5
  6191     0F38  1903               	skipnz
  6192     0F39  066A               	xorwf	key_detection@temp_code+1,w
  6193     0F3A  046B               	iorwf	key_detection@temp_code+2,w
  6194     0F3B  046C               	iorwf	key_detection@temp_code+3,w
  6195     0F3C  1D03               	btfss	3,2
  6196     0F3D  2F3F               	goto	u1571
  6197     0F3E  2F40               	goto	u1570
  6198     0F3F                     u1571:
  6199     0F3F  2F4A               	goto	l322
  6200     0F40                     u1570:
  6201     0F40                     l2285:
  6202                           
  6203                           ;remote.c: 69:             input = 2;
  6204     0F40  3002               	movlw	2
  6205     0F41  1683               	bsf	3,5	;RP0=1, select bank1
  6206     0F42  1303               	bcf	3,6	;RP1=0, select bank1
  6207     0F43  00C0               	movwf	_input^(0+128)
  6208     0F44  3000               	movlw	0
  6209     0F45  00C1               	movwf	(_input^(0+128)+1)
  6210                           
  6211                           ;remote.c: 70:             inputChanged = 1;
  6212     0F46  3001               	movlw	1
  6213     0F47  00BC               	movwf	_inputChanged^(0+128)
  6214     0F48  3000               	movlw	0
  6215     0F49  00BD               	movwf	(_inputChanged^(0+128)+1)
  6216     0F4A                     l322:	
  6217                           ;remote.c: 71:         }
  6218                           
  6219                           
  6220                           ;remote.c: 73:         temp_code = final_code & 0b010010100000;
  6221     0F4A  30A0               	movlw	160
  6222     0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  6223     0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  6224     0F4D  0545               	andwf	_final_code^(0+128),w	;volatile
  6225     0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  6226     0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  6227     0F50  00E9               	movwf	key_detection@temp_code
  6228     0F51  3004               	movlw	4
  6229     0F52  1683               	bsf	3,5	;RP0=1, select bank1
  6230     0F53  1303               	bcf	3,6	;RP1=0, select bank1
  6231     0F54  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  6232     0F55  1283               	bcf	3,5	;RP0=0, select bank0
  6233     0F56  1303               	bcf	3,6	;RP1=0, select bank0
  6234     0F57  00EA               	movwf	key_detection@temp_code+1
  6235     0F58  3000               	movlw	0
  6236     0F59  1683               	bsf	3,5	;RP0=1, select bank1
  6237     0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  6238     0F5B  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  6239     0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  6240     0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  6241     0F5E  00EB               	movwf	key_detection@temp_code+2
  6242     0F5F  3000               	movlw	0
  6243     0F60  1683               	bsf	3,5	;RP0=1, select bank1
  6244     0F61  1303               	bcf	3,6	;RP1=0, select bank1
  6245     0F62  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6246     0F63  1283               	bcf	3,5	;RP0=0, select bank0
  6247     0F64  1303               	bcf	3,6	;RP1=0, select bank0
  6248     0F65  00EC               	movwf	key_detection@temp_code+3
  6249     0F66                     l2287:
  6250                           
  6251                           ;remote.c: 74:         if (temp_code == 0b010010100000) {
  6252     0F66  30A0               	movlw	160
  6253     0F67  0669               	xorwf	key_detection@temp_code,w
  6254     0F68  3004               	movlw	4
  6255     0F69  1903               	skipnz
  6256     0F6A  066A               	xorwf	key_detection@temp_code+1,w
  6257     0F6B  046B               	iorwf	key_detection@temp_code+2,w
  6258     0F6C  046C               	iorwf	key_detection@temp_code+3,w
  6259     0F6D  1D03               	btfss	3,2
  6260     0F6E  2F70               	goto	u1581
  6261     0F6F  2F71               	goto	u1580
  6262     0F70                     u1581:
  6263     0F70  2F7B               	goto	l323
  6264     0F71                     u1580:
  6265     0F71                     l2289:
  6266                           
  6267                           ;remote.c: 75:             input = 3;
  6268     0F71  3003               	movlw	3
  6269     0F72  1683               	bsf	3,5	;RP0=1, select bank1
  6270     0F73  1303               	bcf	3,6	;RP1=0, select bank1
  6271     0F74  00C0               	movwf	_input^(0+128)
  6272     0F75  3000               	movlw	0
  6273     0F76  00C1               	movwf	(_input^(0+128)+1)
  6274                           
  6275                           ;remote.c: 76:             inputChanged = 1;
  6276     0F77  3001               	movlw	1
  6277     0F78  00BC               	movwf	_inputChanged^(0+128)
  6278     0F79  3000               	movlw	0
  6279     0F7A  00BD               	movwf	(_inputChanged^(0+128)+1)
  6280     0F7B                     l323:	
  6281                           ;remote.c: 77:         }
  6282                           
  6283                           
  6284                           ;remote.c: 79:         temp_code = final_code & 0b010010001000;
  6285     0F7B  3088               	movlw	136
  6286     0F7C  1683               	bsf	3,5	;RP0=1, select bank1
  6287     0F7D  1303               	bcf	3,6	;RP1=0, select bank1
  6288     0F7E  0545               	andwf	_final_code^(0+128),w	;volatile
  6289     0F7F  1283               	bcf	3,5	;RP0=0, select bank0
  6290     0F80  1303               	bcf	3,6	;RP1=0, select bank0
  6291     0F81  00E9               	movwf	key_detection@temp_code
  6292     0F82  3004               	movlw	4
  6293     0F83  1683               	bsf	3,5	;RP0=1, select bank1
  6294     0F84  1303               	bcf	3,6	;RP1=0, select bank1
  6295     0F85  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  6296     0F86  1283               	bcf	3,5	;RP0=0, select bank0
  6297     0F87  1303               	bcf	3,6	;RP1=0, select bank0
  6298     0F88  00EA               	movwf	key_detection@temp_code+1
  6299     0F89  3000               	movlw	0
  6300     0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  6301     0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  6302     0F8C  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  6303     0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6304     0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  6305     0F8F  00EB               	movwf	key_detection@temp_code+2
  6306     0F90  3000               	movlw	0
  6307     0F91  1683               	bsf	3,5	;RP0=1, select bank1
  6308     0F92  1303               	bcf	3,6	;RP1=0, select bank1
  6309     0F93  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6310     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  6311     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  6312     0F96  00EC               	movwf	key_detection@temp_code+3
  6313     0F97                     l2291:
  6314                           
  6315                           ;remote.c: 80:         if (temp_code == 0b010010001000) {
  6316     0F97  3088               	movlw	136
  6317     0F98  0669               	xorwf	key_detection@temp_code,w
  6318     0F99  3004               	movlw	4
  6319     0F9A  1903               	skipnz
  6320     0F9B  066A               	xorwf	key_detection@temp_code+1,w
  6321     0F9C  046B               	iorwf	key_detection@temp_code+2,w
  6322     0F9D  046C               	iorwf	key_detection@temp_code+3,w
  6323     0F9E  1D03               	btfss	3,2
  6324     0F9F  2FA1               	goto	u1591
  6325     0FA0  2FA2               	goto	u1590
  6326     0FA1                     u1591:
  6327     0FA1  2FB1               	goto	l2297
  6328     0FA2                     u1590:
  6329     0FA2                     l2293:
  6330                           
  6331                           ;remote.c: 81:             input = 4;
  6332     0FA2  3004               	movlw	4
  6333     0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  6334     0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  6335     0FA5  00C0               	movwf	_input^(0+128)
  6336     0FA6  3000               	movlw	0
  6337     0FA7  00C1               	movwf	(_input^(0+128)+1)
  6338                           
  6339                           ;remote.c: 82:             inputChanged = 1;
  6340     0FA8  3001               	movlw	1
  6341     0FA9  00BC               	movwf	_inputChanged^(0+128)
  6342     0FAA  3000               	movlw	0
  6343     0FAB  00BD               	movwf	(_inputChanged^(0+128)+1)
  6344     0FAC                     l2295:
  6345                           
  6346                           ;remote.c: 83:             scherm_setup();
  6347     0FAC  120A  158A  237F  120A  158A  	fcall	_scherm_setup
  6348     0FB1                     l2297:
  6349                           
  6350                           ;remote.c: 86:         temp_code = final_code & 0b010010000100;
  6351     0FB1  3084               	movlw	132
  6352     0FB2  1683               	bsf	3,5	;RP0=1, select bank1
  6353     0FB3  1303               	bcf	3,6	;RP1=0, select bank1
  6354     0FB4  0545               	andwf	_final_code^(0+128),w	;volatile
  6355     0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  6356     0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  6357     0FB7  00E9               	movwf	key_detection@temp_code
  6358     0FB8  3004               	movlw	4
  6359     0FB9  1683               	bsf	3,5	;RP0=1, select bank1
  6360     0FBA  1303               	bcf	3,6	;RP1=0, select bank1
  6361     0FBB  0546               	andwf	(_final_code+1)^(0+128),w	;volatile
  6362     0FBC  1283               	bcf	3,5	;RP0=0, select bank0
  6363     0FBD  1303               	bcf	3,6	;RP1=0, select bank0
  6364     0FBE  00EA               	movwf	key_detection@temp_code+1
  6365     0FBF  3000               	movlw	0
  6366     0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  6367     0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  6368     0FC2  0547               	andwf	(_final_code+2)^(0+128),w	;volatile
  6369     0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  6370     0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  6371     0FC5  00EB               	movwf	key_detection@temp_code+2
  6372     0FC6  3000               	movlw	0
  6373     0FC7  1683               	bsf	3,5	;RP0=1, select bank1
  6374     0FC8  1303               	bcf	3,6	;RP1=0, select bank1
  6375     0FC9  0548               	andwf	(_final_code+3)^(0+128),w	;volatile
  6376     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  6377     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  6378     0FCC  00EC               	movwf	key_detection@temp_code+3
  6379     0FCD                     l2299:
  6380                           
  6381                           ;remote.c: 87:         if (temp_code == 0b010010000100) {
  6382     0FCD  3084               	movlw	132
  6383     0FCE  0669               	xorwf	key_detection@temp_code,w
  6384     0FCF  3004               	movlw	4
  6385     0FD0  1903               	skipnz
  6386     0FD1  066A               	xorwf	key_detection@temp_code+1,w
  6387     0FD2  046B               	iorwf	key_detection@temp_code+2,w
  6388     0FD3  046C               	iorwf	key_detection@temp_code+3,w
  6389     0FD4  1D03               	btfss	3,2
  6390     0FD5  2FD7               	goto	u1601
  6391     0FD6  2FD8               	goto	u1600
  6392     0FD7                     u1601:
  6393     0FD7  2FE0               	goto	l2303
  6394     0FD8                     u1600:
  6395     0FD8                     l2301:
  6396                           
  6397                           ;remote.c: 88:             num_of_lang++;
  6398     0FD8  3001               	movlw	1
  6399     0FD9  1683               	bsf	3,5	;RP0=1, select bank1
  6400     0FDA  1303               	bcf	3,6	;RP1=0, select bank1
  6401     0FDB  07CF               	addwf	_num_of_lang^(0+128),f
  6402     0FDC  1803               	skipnc
  6403     0FDD  0AD0               	incf	(_num_of_lang+1)^(0+128),f
  6404     0FDE  3000               	movlw	0
  6405     0FDF  07D0               	addwf	(_num_of_lang+1)^(0+128),f
  6406     0FE0                     l2303:
  6407                           
  6408                           ;remote.c: 92:     if (num_of_lang > 6) {
  6409     0FE0  1683               	bsf	3,5	;RP0=1, select bank1
  6410     0FE1  1303               	bcf	3,6	;RP1=0, select bank1
  6411     0FE2  0850               	movf	(_num_of_lang+1)^(0+128),w
  6412     0FE3  3A80               	xorlw	128
  6413     0FE4  00FF               	movwf	btemp+1
  6414     0FE5  3080               	movlw	128
  6415     0FE6  027F               	subwf	btemp+1,w
  6416     0FE7  1D03               	skipz
  6417     0FE8  2FEB               	goto	u1615
  6418     0FE9  3007               	movlw	7
  6419     0FEA  024F               	subwf	_num_of_lang^(0+128),w
  6420     0FEB                     u1615:
  6421     0FEB  1C03               	skipc
  6422     0FEC  2FEE               	goto	u1611
  6423     0FED  2FEF               	goto	u1610
  6424     0FEE                     u1611:
  6425     0FEE  2FF3               	goto	l2307
  6426     0FEF                     u1610:
  6427     0FEF                     l2305:
  6428                           
  6429                           ;remote.c: 93:         num_of_lang = 0;
  6430     0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  6431     0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  6432     0FF1  01CF               	clrf	_num_of_lang^(0+128)
  6433     0FF2  01D0               	clrf	(_num_of_lang+1)^(0+128)
  6434     0FF3                     l2307:
  6435                           
  6436                           ;remote.c: 95:     final_code = 0;
  6437     0FF3  3000               	movlw	0
  6438     0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  6439     0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  6440     0FF6  00C8               	movwf	(_final_code+3)^(0+128)	;volatile
  6441     0FF7  3000               	movlw	0
  6442     0FF8  00C7               	movwf	(_final_code+2)^(0+128)	;volatile
  6443     0FF9  3000               	movlw	0
  6444     0FFA  00C6               	movwf	(_final_code+1)^(0+128)	;volatile
  6445     0FFB  3000               	movlw	0
  6446     0FFC  00C5               	movwf	_final_code^(0+128)	;volatile
  6447     0FFD                     l2309:
  6448                           
  6449                           ;remote.c: 96:     remote_counter = 0;
  6450     0FFD  01CB               	clrf	_remote_counter^(0+128)	;volatile
  6451     0FFE  01CC               	clrf	(_remote_counter+1)^(0+128)	;volatile
  6452     0FFF                     l327:
  6453     0FFF  0008               	return
  6454     1000                     __end_of_key_detection:
  6455                           
  6456                           	psect	text14
  6457     0B7F                     __ptext14:	
  6458 ;; *************** function _scherm_setup *****************
  6459 ;; Defined at:
  6460 ;;		line 70 in file "scherm.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  screen1         8   61[BANK0 ] unsigned char [8]
  6465 ;;  screen2         8   53[BANK0 ] unsigned char [8]
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6475 ;;      Params:         0       0       0       0       0
  6476 ;;      Locals:         0      16       0       0       0
  6477 ;;      Temps:          0       4       0       0       0
  6478 ;;      Totals:         0      20       0       0       0
  6479 ;;Total ram usage:       20 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 6
  6482 ;; This function calls:
  6483 ;;		_text_to_buffer
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;;		_key_detection
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490     0B7F                     _scherm_setup:	
  6491                           ;psect for function _scherm_setup
  6492                           
  6493     0B7F                     l2043:	
  6494                           ;incstack = 0
  6495                           ; Regs used in _scherm_setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6496                           
  6497                           
  6498                           ;scherm.c: 71:     char screen2[8] = "INPUT:0 ";
  6499     0B7F  3055               	movlw	scherm_setup@screen2& (0+255)
  6500     0B80  0084               	movwf	4
  6501     0B81  30A8               	movlw	low scherm_setup@F1470
  6502     0B82  1283               	bcf	3,5	;RP0=0, select bank0
  6503     0B83  1303               	bcf	3,6	;RP1=0, select bank0
  6504     0B84  00D1               	movwf	??_scherm_setup
  6505     0B85  0804               	movf	4,w
  6506     0B86  00D2               	movwf	??_scherm_setup+1
  6507     0B87  3008               	movlw	8
  6508     0B88  00D3               	movwf	??_scherm_setup+2
  6509     0B89                     u1290:
  6510     0B89  0851               	movf	??_scherm_setup,w
  6511     0B8A  0084               	movwf	4
  6512     0B8B  1383               	bcf	3,7	;select IRP bank1
  6513     0B8C  0800               	movf	0,w
  6514     0B8D  00D4               	movwf	??_scherm_setup+3
  6515     0B8E  0AD1               	incf	??_scherm_setup,f
  6516     0B8F  0852               	movf	??_scherm_setup+1,w
  6517     0B90  0084               	movwf	4
  6518     0B91  0854               	movf	??_scherm_setup+3,w
  6519     0B92  0080               	movwf	0
  6520     0B93  0AD2               	incf	??_scherm_setup+1,f
  6521     0B94  0BD3               	decfsz	??_scherm_setup+2,f
  6522     0B95  2B89               	goto	u1290
  6523     0B96                     l2045:
  6524                           
  6525                           ;scherm.c: 72:     text_to_buffer(SCREEN_2, screen2);
  6526     0B96  3055               	movlw	(low (scherm_setup@screen2| 0))& (0+255)
  6527     0B97  00CC               	movwf	text_to_buffer@newtext
  6528     0B98  3002               	movlw	2
  6529     0B99  160A  118A  213D  120A  158A  	fcall	_text_to_buffer
  6530     0B9E                     l2047:
  6531                           
  6532                           ;scherm.c: 73:     char screen1[8] = "VOL:0   ";
  6533     0B9E  305D               	movlw	scherm_setup@screen1& (0+255)
  6534     0B9F  0084               	movwf	4
  6535     0BA0  30A0               	movlw	low scherm_setup@F1472
  6536     0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  6537     0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  6538     0BA3  00D1               	movwf	??_scherm_setup
  6539     0BA4  0804               	movf	4,w
  6540     0BA5  00D2               	movwf	??_scherm_setup+1
  6541     0BA6  3008               	movlw	8
  6542     0BA7  00D3               	movwf	??_scherm_setup+2
  6543     0BA8                     u1300:
  6544     0BA8  0851               	movf	??_scherm_setup,w
  6545     0BA9  0084               	movwf	4
  6546     0BAA  1383               	bcf	3,7	;select IRP bank1
  6547     0BAB  0800               	movf	0,w
  6548     0BAC  00D4               	movwf	??_scherm_setup+3
  6549     0BAD  0AD1               	incf	??_scherm_setup,f
  6550     0BAE  0852               	movf	??_scherm_setup+1,w
  6551     0BAF  0084               	movwf	4
  6552     0BB0  0854               	movf	??_scherm_setup+3,w
  6553     0BB1  0080               	movwf	0
  6554     0BB2  0AD2               	incf	??_scherm_setup+1,f
  6555     0BB3  0BD3               	decfsz	??_scherm_setup+2,f
  6556     0BB4  2BA8               	goto	u1300
  6557                           
  6558                           ;scherm.c: 74:     text_to_buffer(SCREEN_1, screen1);
  6559     0BB5  305D               	movlw	(low (scherm_setup@screen1| 0))& (0+255)
  6560     0BB6  00CC               	movwf	text_to_buffer@newtext
  6561     0BB7  3001               	movlw	1
  6562     0BB8  160A  118A  213D  120A  158A  	fcall	_text_to_buffer
  6563     0BBD                     l440:
  6564     0BBD  0008               	return
  6565     0BBE                     __end_of_scherm_setup:
  6566                           
  6567                           	psect	text15
  6568     113D                     __ptext15:	
  6569 ;; *************** function _text_to_buffer *****************
  6570 ;; Defined at:
  6571 ;;		line 172 in file "scherm.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  scherm          1    wreg     enum E1435
  6574 ;;  newtext         1   44[BANK0 ] PTR unsigned char 
  6575 ;;		 -> scherm_setup@screen1(8), scherm_setup@screen2(8), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  scherm          1   46[BANK0 ] enum E1435
  6578 ;;  i               2   47[BANK0 ] int 
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6588 ;;      Params:         0       1       0       0       0
  6589 ;;      Locals:         0       3       0       0       0
  6590 ;;      Temps:          0       1       0       0       0
  6591 ;;      Totals:         0       5       0       0       0
  6592 ;;Total ram usage:        5 bytes
  6593 ;; Hardware stack levels used: 1
  6594 ;; Hardware stack levels required when called: 5
  6595 ;; This function calls:
  6596 ;;		_load_buffer
  6597 ;; This function is called by:
  6598 ;;		_scherm_setup
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           
  6602     113D                     _text_to_buffer:	
  6603                           ;psect for function _text_to_buffer
  6604                           
  6605                           
  6606                           ;incstack = 0
  6607                           ; Regs used in _text_to_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6608                           ;text_to_buffer@scherm stored from wreg
  6609     113D  1283               	bcf	3,5	;RP0=0, select bank0
  6610     113E  1303               	bcf	3,6	;RP1=0, select bank0
  6611     113F  00CE               	movwf	text_to_buffer@scherm
  6612     1140                     l1999:
  6613                           
  6614                           ;scherm.c: 173:     for (int i = 0; i < 8; i++) {
  6615     1140  01CF               	clrf	text_to_buffer@i
  6616     1141  01D0               	clrf	text_to_buffer@i+1
  6617     1142                     l2005:
  6618                           
  6619                           ;scherm.c: 174:         load_buffer(num_of_lang, newtext[i], i, scherm);
  6620     1142  1683               	bsf	3,5	;RP0=1, select bank1
  6621     1143  1303               	bcf	3,6	;RP1=0, select bank1
  6622     1144  0850               	movf	(_num_of_lang+1)^(0+128),w
  6623     1145  1283               	bcf	3,5	;RP0=0, select bank0
  6624     1146  1303               	bcf	3,6	;RP1=0, select bank0
  6625     1147  00A7               	movwf	load_buffer@lang+1
  6626     1148  1683               	bsf	3,5	;RP0=1, select bank1
  6627     1149  1303               	bcf	3,6	;RP1=0, select bank1
  6628     114A  084F               	movf	_num_of_lang^(0+128),w
  6629     114B  1283               	bcf	3,5	;RP0=0, select bank0
  6630     114C  1303               	bcf	3,6	;RP1=0, select bank0
  6631     114D  00A6               	movwf	load_buffer@lang
  6632     114E  084F               	movf	text_to_buffer@i,w
  6633     114F  074C               	addwf	text_to_buffer@newtext,w
  6634     1150  00CD               	movwf	??_text_to_buffer
  6635     1151  084D               	movf	??_text_to_buffer,w
  6636     1152  0084               	movwf	4
  6637     1153  1383               	bcf	3,7	;select IRP bank0
  6638     1154  0800               	movf	0,w
  6639     1155  00A8               	movwf	load_buffer@character
  6640     1156  0850               	movf	text_to_buffer@i+1,w
  6641     1157  00AA               	movwf	load_buffer@position+1
  6642     1158  084F               	movf	text_to_buffer@i,w
  6643     1159  00A9               	movwf	load_buffer@position
  6644     115A  084E               	movf	text_to_buffer@scherm,w
  6645     115B  00AB               	movwf	load_buffer@scherm
  6646     115C  160A  118A  2298  160A  118A  	fcall	_load_buffer
  6647     1161                     l2007:
  6648                           
  6649                           ;scherm.c: 175:     }
  6650     1161  3001               	movlw	1
  6651     1162  1283               	bcf	3,5	;RP0=0, select bank0
  6652     1163  1303               	bcf	3,6	;RP1=0, select bank0
  6653     1164  07CF               	addwf	text_to_buffer@i,f
  6654     1165  1803               	skipnc
  6655     1166  0AD0               	incf	text_to_buffer@i+1,f
  6656     1167  3000               	movlw	0
  6657     1168  07D0               	addwf	text_to_buffer@i+1,f
  6658     1169                     l2009:
  6659     1169  0850               	movf	text_to_buffer@i+1,w
  6660     116A  3A80               	xorlw	128
  6661     116B  00FF               	movwf	btemp+1
  6662     116C  3080               	movlw	128
  6663     116D  027F               	subwf	btemp+1,w
  6664     116E  1D03               	skipz
  6665     116F  2972               	goto	u1275
  6666     1170  3008               	movlw	8
  6667     1171  024F               	subwf	text_to_buffer@i,w
  6668     1172                     u1275:
  6669     1172  1C03               	skipc
  6670     1173  2975               	goto	u1271
  6671     1174  2976               	goto	u1270
  6672     1175                     u1271:
  6673     1175  2942               	goto	l2005
  6674     1176                     u1270:
  6675     1176                     l516:
  6676     1176  0008               	return
  6677     1177                     __end_of_text_to_buffer:
  6678                           
  6679                           	psect	text16
  6680     10D0                     __ptext16:	
  6681 ;; *************** function _input_conversion *****************
  6682 ;; Defined at:
  6683 ;;		line 38 in file "rotary.c"
  6684 ;; Parameters:    Size  Location     Type
  6685 ;;		None
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;  inputNew        1   44[BANK0 ] unsigned char 
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6697 ;;      Params:         0       0       0       0       0
  6698 ;;      Locals:         0       1       0       0       0
  6699 ;;      Temps:          0       0       0       0       0
  6700 ;;      Totals:         0       1       0       0       0
  6701 ;;Total ram usage:        1 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 5
  6704 ;; This function calls:
  6705 ;;		_load_buffer
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711     10D0                     _input_conversion:	
  6712                           ;psect for function _input_conversion
  6713                           
  6714     10D0                     l2311:	
  6715                           ;incstack = 0
  6716                           ; Regs used in _input_conversion: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6717                           
  6718     10D0  1683               	bsf	3,5	;RP0=1, select bank1
  6719     10D1  1303               	bcf	3,6	;RP1=0, select bank1
  6720     10D2  0840               	movf	_input^(0+128),w
  6721     10D3  3E30               	addlw	48
  6722     10D4  1283               	bcf	3,5	;RP0=0, select bank0
  6723     10D5  1303               	bcf	3,6	;RP1=0, select bank0
  6724     10D6  00CC               	movwf	input_conversion@inputNew
  6725     10D7                     l2313:
  6726                           
  6727                           ;rotary.c: 41:     load_buffer(num_of_lang, inputNew, 6, SCREEN_2);
  6728     10D7  1683               	bsf	3,5	;RP0=1, select bank1
  6729     10D8  1303               	bcf	3,6	;RP1=0, select bank1
  6730     10D9  0850               	movf	(_num_of_lang+1)^(0+128),w
  6731     10DA  1283               	bcf	3,5	;RP0=0, select bank0
  6732     10DB  1303               	bcf	3,6	;RP1=0, select bank0
  6733     10DC  00A7               	movwf	load_buffer@lang+1
  6734     10DD  1683               	bsf	3,5	;RP0=1, select bank1
  6735     10DE  1303               	bcf	3,6	;RP1=0, select bank1
  6736     10DF  084F               	movf	_num_of_lang^(0+128),w
  6737     10E0  1283               	bcf	3,5	;RP0=0, select bank0
  6738     10E1  1303               	bcf	3,6	;RP1=0, select bank0
  6739     10E2  00A6               	movwf	load_buffer@lang
  6740     10E3  084C               	movf	input_conversion@inputNew,w
  6741     10E4  00A8               	movwf	load_buffer@character
  6742     10E5  3006               	movlw	6
  6743     10E6  00A9               	movwf	load_buffer@position
  6744     10E7  3000               	movlw	0
  6745     10E8  00AA               	movwf	load_buffer@position+1
  6746     10E9  3002               	movlw	2
  6747     10EA  00AB               	movwf	load_buffer@scherm
  6748     10EB  160A  118A  2298  160A  118A  	fcall	_load_buffer
  6749     10F0                     l385:
  6750     10F0  0008               	return
  6751     10F1                     __end_of_input_conversion:
  6752                           
  6753                           	psect	text17
  6754     1298                     __ptext17:	
  6755 ;; *************** function _load_buffer *****************
  6756 ;; Defined at:
  6757 ;;		line 104 in file "scherm.c"
  6758 ;; Parameters:    Size  Location     Type
  6759 ;;  lang            2    6[BANK0 ] int 
  6760 ;;  character       1    8[BANK0 ] unsigned char 
  6761 ;;  position        2    9[BANK0 ] int 
  6762 ;;  scherm          1   11[BANK0 ] enum E1435
  6763 ;; Auto vars:     Size  Location     Type
  6764 ;;  i               2   42[BANK0 ] int 
  6765 ;;  i               2   34[BANK0 ] int 
  6766 ;;  i               2   32[BANK0 ] int 
  6767 ;;  i               2   40[BANK0 ] int 
  6768 ;;  i               2   30[BANK0 ] int 
  6769 ;;  i               2   28[BANK0 ] int 
  6770 ;;  i               2   38[BANK0 ] int 
  6771 ;;  i               2   26[BANK0 ] int 
  6772 ;;  i               2   24[BANK0 ] int 
  6773 ;;  i               2   36[BANK0 ] int 
  6774 ;;  i               2   22[BANK0 ] int 
  6775 ;;  i               2   20[BANK0 ] int 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6785 ;;      Params:         0       6       0       0       0
  6786 ;;      Locals:         0      24       0       0       0
  6787 ;;      Temps:          0       8       0       0       0
  6788 ;;      Totals:         0      38       0       0       0
  6789 ;;Total ram usage:       38 bytes
  6790 ;; Hardware stack levels used: 1
  6791 ;; Hardware stack levels required when called: 4
  6792 ;; This function calls:
  6793 ;;		___bmul
  6794 ;;		___wmul
  6795 ;; This function is called by:
  6796 ;;		_volume_conversion
  6797 ;;		_input_conversion
  6798 ;;		_text_to_buffer
  6799 ;;		_text_to_buffer_vol
  6800 ;;		_text_to_buffer_input
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804     1298                     _load_buffer:	
  6805                           ;psect for function _load_buffer
  6806                           
  6807     1298                     l1823:	
  6808                           ;incstack = 0
  6809                           ; Regs used in _load_buffer: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6810                           
  6811                           
  6812                           ;scherm.c: 105:     if (lang == 0) {
  6813     1298  1283               	bcf	3,5	;RP0=0, select bank0
  6814     1299  1303               	bcf	3,6	;RP1=0, select bank0
  6815     129A  0826               	movf	load_buffer@lang,w
  6816     129B  0427               	iorwf	load_buffer@lang+1,w
  6817     129C  1D03               	btfss	3,2
  6818     129D  2A9F               	goto	u991
  6819     129E  2AA0               	goto	u990
  6820     129F                     u991:
  6821     129F  2BF2               	goto	l1867
  6822     12A0                     u990:
  6823     12A0                     l1825:
  6824                           
  6825                           ;scherm.c: 106:         if (scherm == SCREEN_1) {
  6826     12A0  032B               	decf	load_buffer@scherm,w
  6827     12A1  1D03               	btfss	3,2
  6828     12A2  2AA4               	goto	u1001
  6829     12A3  2AA5               	goto	u1000
  6830     12A4                     u1001:
  6831     12A4  2AFC               	goto	l1839
  6832     12A5                     u1000:
  6833     12A5                     l1827:
  6834                           
  6835                           ;scherm.c: 107:             for (int i = 0; i < 5; i++) {
  6836     12A5  01B4               	clrf	load_buffer@i
  6837     12A6  01B5               	clrf	load_buffer@i+1
  6838     12A7                     l1833:
  6839                           
  6840                           ;scherm.c: 108:                 scherm1_buffer[position * 5 + i] = ascii[character][i];
  6841     12A7  1283               	bcf	3,5	;RP0=0, select bank0
  6842     12A8  1303               	bcf	3,6	;RP1=0, select bank0
  6843     12A9  0828               	movf	load_buffer@character,w
  6844     12AA  00AC               	movwf	??_load_buffer
  6845     12AB  01AD               	clrf	??_load_buffer+1
  6846     12AC  082C               	movf	??_load_buffer,w
  6847     12AD  00A0               	movwf	___wmul@multiplier
  6848     12AE  082D               	movf	??_load_buffer+1,w
  6849     12AF  00A1               	movwf	___wmul@multiplier+1
  6850     12B0  3005               	movlw	5
  6851     12B1  00A2               	movwf	___wmul@multiplicand
  6852     12B2  3000               	movlw	0
  6853     12B3  00A3               	movwf	___wmul@multiplicand+1
  6854     12B4  160A  118A  2116  160A  118A  	fcall	___wmul
  6855     12B9  3092               	movlw	low (_ascii| (0+32768))
  6856     12BA  1283               	bcf	3,5	;RP0=0, select bank0
  6857     12BB  1303               	bcf	3,6	;RP1=0, select bank0
  6858     12BC  00AE               	movwf	??_load_buffer+2
  6859     12BD  3088               	movlw	high (_ascii| (0+32768))
  6860     12BE  00AF               	movwf	??_load_buffer+3
  6861     12BF  0820               	movf	?___wmul,w
  6862     12C0  072E               	addwf	??_load_buffer+2,w
  6863     12C1  00B0               	movwf	??_load_buffer+4
  6864     12C2  0821               	movf	?___wmul+1,w
  6865     12C3  1803               	skipnc
  6866     12C4  0A21               	incf	?___wmul+1,w
  6867     12C5  072F               	addwf	??_load_buffer+3,w
  6868     12C6  00B1               	movwf	??_load_buffer+5
  6869     12C7  0834               	movf	load_buffer@i,w
  6870     12C8  0730               	addwf	??_load_buffer+4,w
  6871     12C9  0084               	movwf	4
  6872     12CA  0835               	movf	load_buffer@i+1,w
  6873     12CB  1803               	skipnc
  6874     12CC  0A35               	incf	load_buffer@i+1,w
  6875     12CD  0731               	addwf	??_load_buffer+5,w
  6876     12CE  00FF               	movwf	btemp+1
  6877     12CF  120A  118A  2100  160A  118A  	fcall	stringtab
  6878     12D4  00B2               	movwf	??_load_buffer+6
  6879     12D5  3005               	movlw	5
  6880     12D6  00A0               	movwf	___bmul@multiplicand
  6881     12D7  0829               	movf	load_buffer@position,w
  6882     12D8  160A  118A  2083  160A  118A  	fcall	___bmul
  6883     12DD  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  6884     12DE  1283               	bcf	3,5	;RP0=0, select bank0
  6885     12DF  1303               	bcf	3,6	;RP1=0, select bank0
  6886     12E0  0734               	addwf	load_buffer@i,w
  6887     12E1  00B3               	movwf	??_load_buffer+7
  6888     12E2  0833               	movf	??_load_buffer+7,w
  6889     12E3  0084               	movwf	4
  6890     12E4  0832               	movf	??_load_buffer+6,w
  6891     12E5  1783               	bsf	3,7	;select IRP bank3
  6892     12E6  0080               	movwf	0
  6893     12E7                     l1835:
  6894                           
  6895                           ;scherm.c: 109:             }
  6896     12E7  3001               	movlw	1
  6897     12E8  07B4               	addwf	load_buffer@i,f
  6898     12E9  1803               	skipnc
  6899     12EA  0AB5               	incf	load_buffer@i+1,f
  6900     12EB  3000               	movlw	0
  6901     12EC  07B5               	addwf	load_buffer@i+1,f
  6902     12ED                     l1837:
  6903     12ED  0835               	movf	load_buffer@i+1,w
  6904     12EE  3A80               	xorlw	128
  6905     12EF  00FF               	movwf	btemp+1
  6906     12F0  3080               	movlw	128
  6907     12F1  027F               	subwf	btemp+1,w
  6908     12F2  1D03               	skipz
  6909     12F3  2AF6               	goto	u1015
  6910     12F4  3005               	movlw	5
  6911     12F5  0234               	subwf	load_buffer@i,w
  6912     12F6                     u1015:
  6913     12F6  1C03               	skipc
  6914     12F7  2AF9               	goto	u1011
  6915     12F8  2AFA               	goto	u1010
  6916     12F9                     u1011:
  6917     12F9  2AA7               	goto	l1833
  6918     12FA                     u1010:
  6919     12FA  2FFF               	goto	l511
  6920     12FB                     l463:
  6921                           
  6922                           ;scherm.c: 110:         } else if (scherm == SCREEN_2) {
  6923     12FB  2FFF               	goto	l511
  6924     12FC                     l1839:
  6925     12FC  3002               	movlw	2
  6926     12FD  062B               	xorwf	load_buffer@scherm,w
  6927     12FE  1D03               	btfss	3,2
  6928     12FF  2B01               	goto	u1021
  6929     1300  2B02               	goto	u1020
  6930     1301                     u1021:
  6931     1301  2B58               	goto	l1853
  6932     1302                     u1020:
  6933     1302                     l1841:
  6934                           
  6935                           ;scherm.c: 111:             for (int i = 0; i < 5; i++) {
  6936     1302  01B6               	clrf	load_buffer@i_981
  6937     1303  01B7               	clrf	load_buffer@i_981+1
  6938     1304                     l1847:
  6939                           
  6940                           ;scherm.c: 112:                 scherm2_buffer[position * 5 + i] = ascii[character][i];
  6941     1304  1283               	bcf	3,5	;RP0=0, select bank0
  6942     1305  1303               	bcf	3,6	;RP1=0, select bank0
  6943     1306  0828               	movf	load_buffer@character,w
  6944     1307  00AC               	movwf	??_load_buffer
  6945     1308  01AD               	clrf	??_load_buffer+1
  6946     1309  082C               	movf	??_load_buffer,w
  6947     130A  00A0               	movwf	___wmul@multiplier
  6948     130B  082D               	movf	??_load_buffer+1,w
  6949     130C  00A1               	movwf	___wmul@multiplier+1
  6950     130D  3005               	movlw	5
  6951     130E  00A2               	movwf	___wmul@multiplicand
  6952     130F  3000               	movlw	0
  6953     1310  00A3               	movwf	___wmul@multiplicand+1
  6954     1311  160A  118A  2116  160A  118A  	fcall	___wmul
  6955     1316  3092               	movlw	low (_ascii| (0+32768))
  6956     1317  1283               	bcf	3,5	;RP0=0, select bank0
  6957     1318  1303               	bcf	3,6	;RP1=0, select bank0
  6958     1319  00AE               	movwf	??_load_buffer+2
  6959     131A  3088               	movlw	high (_ascii| (0+32768))
  6960     131B  00AF               	movwf	??_load_buffer+3
  6961     131C  0820               	movf	?___wmul,w
  6962     131D  072E               	addwf	??_load_buffer+2,w
  6963     131E  00B0               	movwf	??_load_buffer+4
  6964     131F  0821               	movf	?___wmul+1,w
  6965     1320  1803               	skipnc
  6966     1321  0A21               	incf	?___wmul+1,w
  6967     1322  072F               	addwf	??_load_buffer+3,w
  6968     1323  00B1               	movwf	??_load_buffer+5
  6969     1324  0836               	movf	load_buffer@i_981,w
  6970     1325  0730               	addwf	??_load_buffer+4,w
  6971     1326  0084               	movwf	4
  6972     1327  0837               	movf	load_buffer@i_981+1,w
  6973     1328  1803               	skipnc
  6974     1329  0A37               	incf	load_buffer@i_981+1,w
  6975     132A  0731               	addwf	??_load_buffer+5,w
  6976     132B  00FF               	movwf	btemp+1
  6977     132C  120A  118A  2100  160A  118A  	fcall	stringtab
  6978     1331  00B2               	movwf	??_load_buffer+6
  6979     1332  3005               	movlw	5
  6980     1333  00A0               	movwf	___bmul@multiplicand
  6981     1334  0829               	movf	load_buffer@position,w
  6982     1335  160A  118A  2083  160A  118A  	fcall	___bmul
  6983     133A  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  6984     133B  1283               	bcf	3,5	;RP0=0, select bank0
  6985     133C  1303               	bcf	3,6	;RP1=0, select bank0
  6986     133D  0736               	addwf	load_buffer@i_981,w
  6987     133E  00B3               	movwf	??_load_buffer+7
  6988     133F  0833               	movf	??_load_buffer+7,w
  6989     1340  0084               	movwf	4
  6990     1341  0832               	movf	??_load_buffer+6,w
  6991     1342  1783               	bsf	3,7	;select IRP bank3
  6992     1343  0080               	movwf	0
  6993     1344                     l1849:
  6994                           
  6995                           ;scherm.c: 113:             }
  6996     1344  3001               	movlw	1
  6997     1345  07B6               	addwf	load_buffer@i_981,f
  6998     1346  1803               	skipnc
  6999     1347  0AB7               	incf	load_buffer@i_981+1,f
  7000     1348  3000               	movlw	0
  7001     1349  07B7               	addwf	load_buffer@i_981+1,f
  7002     134A                     l1851:
  7003     134A  0837               	movf	load_buffer@i_981+1,w
  7004     134B  3A80               	xorlw	128
  7005     134C  00FF               	movwf	btemp+1
  7006     134D  3080               	movlw	128
  7007     134E  027F               	subwf	btemp+1,w
  7008     134F  1D03               	skipz
  7009     1350  2B53               	goto	u1035
  7010     1351  3005               	movlw	5
  7011     1352  0236               	subwf	load_buffer@i_981,w
  7012     1353                     u1035:
  7013     1353  1C03               	skipc
  7014     1354  2B56               	goto	u1031
  7015     1355  2B57               	goto	u1030
  7016     1356                     u1031:
  7017     1356  2B04               	goto	l1847
  7018     1357                     u1030:
  7019     1357  2FFF               	goto	l511
  7020     1358                     l1853:
  7021     1358  3003               	movlw	3
  7022     1359  062B               	xorwf	load_buffer@scherm,w
  7023     135A  1D03               	btfss	3,2
  7024     135B  2B5D               	goto	u1041
  7025     135C  2B5E               	goto	u1040
  7026     135D                     u1041:
  7027     135D  2AFB               	goto	l463
  7028     135E                     u1040:
  7029     135E                     l1855:
  7030                           
  7031                           ;scherm.c: 115:             for (int i = 0; i < 5; i++) {
  7032     135E  01C4               	clrf	load_buffer@i_982
  7033     135F  01C5               	clrf	load_buffer@i_982+1
  7034     1360                     l1861:
  7035                           
  7036                           ;scherm.c: 116:                 scherm1_buffer[position * 5 + i] = ascii[character][i];
  7037     1360  1283               	bcf	3,5	;RP0=0, select bank0
  7038     1361  1303               	bcf	3,6	;RP1=0, select bank0
  7039     1362  0828               	movf	load_buffer@character,w
  7040     1363  00AC               	movwf	??_load_buffer
  7041     1364  01AD               	clrf	??_load_buffer+1
  7042     1365  082C               	movf	??_load_buffer,w
  7043     1366  00A0               	movwf	___wmul@multiplier
  7044     1367  082D               	movf	??_load_buffer+1,w
  7045     1368  00A1               	movwf	___wmul@multiplier+1
  7046     1369  3005               	movlw	5
  7047     136A  00A2               	movwf	___wmul@multiplicand
  7048     136B  3000               	movlw	0
  7049     136C  00A3               	movwf	___wmul@multiplicand+1
  7050     136D  160A  118A  2116  160A  118A  	fcall	___wmul
  7051     1372  3092               	movlw	low (_ascii| (0+32768))
  7052     1373  1283               	bcf	3,5	;RP0=0, select bank0
  7053     1374  1303               	bcf	3,6	;RP1=0, select bank0
  7054     1375  00AE               	movwf	??_load_buffer+2
  7055     1376  3088               	movlw	high (_ascii| (0+32768))
  7056     1377  00AF               	movwf	??_load_buffer+3
  7057     1378  0820               	movf	?___wmul,w
  7058     1379  072E               	addwf	??_load_buffer+2,w
  7059     137A  00B0               	movwf	??_load_buffer+4
  7060     137B  0821               	movf	?___wmul+1,w
  7061     137C  1803               	skipnc
  7062     137D  0A21               	incf	?___wmul+1,w
  7063     137E  072F               	addwf	??_load_buffer+3,w
  7064     137F  00B1               	movwf	??_load_buffer+5
  7065     1380  0844               	movf	load_buffer@i_982,w
  7066     1381  0730               	addwf	??_load_buffer+4,w
  7067     1382  0084               	movwf	4
  7068     1383  0845               	movf	load_buffer@i_982+1,w
  7069     1384  1803               	skipnc
  7070     1385  0A45               	incf	load_buffer@i_982+1,w
  7071     1386  0731               	addwf	??_load_buffer+5,w
  7072     1387  00FF               	movwf	btemp+1
  7073     1388  120A  118A  2100  160A  118A  	fcall	stringtab
  7074     138D  00B2               	movwf	??_load_buffer+6
  7075     138E  3005               	movlw	5
  7076     138F  00A0               	movwf	___bmul@multiplicand
  7077     1390  0829               	movf	load_buffer@position,w
  7078     1391  160A  118A  2083  160A  118A  	fcall	___bmul
  7079     1396  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7080     1397  1283               	bcf	3,5	;RP0=0, select bank0
  7081     1398  1303               	bcf	3,6	;RP1=0, select bank0
  7082     1399  0744               	addwf	load_buffer@i_982,w
  7083     139A  00B3               	movwf	??_load_buffer+7
  7084     139B  0833               	movf	??_load_buffer+7,w
  7085     139C  0084               	movwf	4
  7086     139D  0832               	movf	??_load_buffer+6,w
  7087     139E  1783               	bsf	3,7	;select IRP bank3
  7088     139F  0080               	movwf	0
  7089                           
  7090                           ;scherm.c: 117:                 scherm2_buffer[position * 5 + i] = ascii[character][i];
  7091     13A0  0828               	movf	load_buffer@character,w
  7092     13A1  00AC               	movwf	??_load_buffer
  7093     13A2  01AD               	clrf	??_load_buffer+1
  7094     13A3  082C               	movf	??_load_buffer,w
  7095     13A4  00A0               	movwf	___wmul@multiplier
  7096     13A5  082D               	movf	??_load_buffer+1,w
  7097     13A6  00A1               	movwf	___wmul@multiplier+1
  7098     13A7  3005               	movlw	5
  7099     13A8  00A2               	movwf	___wmul@multiplicand
  7100     13A9  3000               	movlw	0
  7101     13AA  00A3               	movwf	___wmul@multiplicand+1
  7102     13AB  160A  118A  2116  160A  118A  	fcall	___wmul
  7103     13B0  3092               	movlw	low (_ascii| (0+32768))
  7104     13B1  1283               	bcf	3,5	;RP0=0, select bank0
  7105     13B2  1303               	bcf	3,6	;RP1=0, select bank0
  7106     13B3  00AE               	movwf	??_load_buffer+2
  7107     13B4  3088               	movlw	high (_ascii| (0+32768))
  7108     13B5  00AF               	movwf	??_load_buffer+3
  7109     13B6  0820               	movf	?___wmul,w
  7110     13B7  072E               	addwf	??_load_buffer+2,w
  7111     13B8  00B0               	movwf	??_load_buffer+4
  7112     13B9  0821               	movf	?___wmul+1,w
  7113     13BA  1803               	skipnc
  7114     13BB  0A21               	incf	?___wmul+1,w
  7115     13BC  072F               	addwf	??_load_buffer+3,w
  7116     13BD  00B1               	movwf	??_load_buffer+5
  7117     13BE  0844               	movf	load_buffer@i_982,w
  7118     13BF  0730               	addwf	??_load_buffer+4,w
  7119     13C0  0084               	movwf	4
  7120     13C1  0845               	movf	load_buffer@i_982+1,w
  7121     13C2  1803               	skipnc
  7122     13C3  0A45               	incf	load_buffer@i_982+1,w
  7123     13C4  0731               	addwf	??_load_buffer+5,w
  7124     13C5  00FF               	movwf	btemp+1
  7125     13C6  120A  118A  2100  160A  118A  	fcall	stringtab
  7126     13CB  00B2               	movwf	??_load_buffer+6
  7127     13CC  3005               	movlw	5
  7128     13CD  00A0               	movwf	___bmul@multiplicand
  7129     13CE  0829               	movf	load_buffer@position,w
  7130     13CF  160A  118A  2083  160A  118A  	fcall	___bmul
  7131     13D4  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7132     13D5  1283               	bcf	3,5	;RP0=0, select bank0
  7133     13D6  1303               	bcf	3,6	;RP1=0, select bank0
  7134     13D7  0744               	addwf	load_buffer@i_982,w
  7135     13D8  00B3               	movwf	??_load_buffer+7
  7136     13D9  0833               	movf	??_load_buffer+7,w
  7137     13DA  0084               	movwf	4
  7138     13DB  0832               	movf	??_load_buffer+6,w
  7139     13DC  1783               	bsf	3,7	;select IRP bank3
  7140     13DD  0080               	movwf	0
  7141     13DE                     l1863:
  7142                           
  7143                           ;scherm.c: 118:             }
  7144     13DE  3001               	movlw	1
  7145     13DF  07C4               	addwf	load_buffer@i_982,f
  7146     13E0  1803               	skipnc
  7147     13E1  0AC5               	incf	load_buffer@i_982+1,f
  7148     13E2  3000               	movlw	0
  7149     13E3  07C5               	addwf	load_buffer@i_982+1,f
  7150     13E4                     l1865:
  7151     13E4  0845               	movf	load_buffer@i_982+1,w
  7152     13E5  3A80               	xorlw	128
  7153     13E6  00FF               	movwf	btemp+1
  7154     13E7  3080               	movlw	128
  7155     13E8  027F               	subwf	btemp+1,w
  7156     13E9  1D03               	skipz
  7157     13EA  2BED               	goto	u1055
  7158     13EB  3005               	movlw	5
  7159     13EC  0244               	subwf	load_buffer@i_982,w
  7160     13ED                     u1055:
  7161     13ED  1C03               	skipc
  7162     13EE  2BF0               	goto	u1051
  7163     13EF  2BF1               	goto	u1050
  7164     13F0                     u1051:
  7165     13F0  2B60               	goto	l1861
  7166     13F1                     u1050:
  7167     13F1  2FFF               	goto	l511
  7168     13F2                     l1867:
  7169     13F2  3002               	movlw	2
  7170     13F3  0626               	xorwf	load_buffer@lang,w
  7171     13F4  0427               	iorwf	load_buffer@lang+1,w
  7172     13F5  1D03               	btfss	3,2
  7173     13F6  2BF8               	goto	u1061
  7174     13F7  2BF9               	goto	u1060
  7175     13F8                     u1061:
  7176     13F8  2D4A               	goto	l1911
  7177     13F9                     u1060:
  7178     13F9                     l1869:
  7179                           
  7180                           ;scherm.c: 122:         if (scherm == SCREEN_1) {
  7181     13F9  032B               	decf	load_buffer@scherm,w
  7182     13FA  1D03               	btfss	3,2
  7183     13FB  2BFD               	goto	u1071
  7184     13FC  2BFE               	goto	u1070
  7185     13FD                     u1071:
  7186     13FD  2C54               	goto	l1883
  7187     13FE                     u1070:
  7188     13FE                     l1871:
  7189                           
  7190                           ;scherm.c: 123:             for (int i = 0; i < 5; i++) {
  7191     13FE  01B8               	clrf	load_buffer@i_983
  7192     13FF  01B9               	clrf	load_buffer@i_983+1
  7193     1400                     l1877:
  7194                           
  7195                           ;scherm.c: 124:                 scherm1_buffer[position * 5 + i] = arabic[character][i];
  7196     1400  1283               	bcf	3,5	;RP0=0, select bank0
  7197     1401  1303               	bcf	3,6	;RP1=0, select bank0
  7198     1402  0828               	movf	load_buffer@character,w
  7199     1403  00AC               	movwf	??_load_buffer
  7200     1404  01AD               	clrf	??_load_buffer+1
  7201     1405  082C               	movf	??_load_buffer,w
  7202     1406  00A0               	movwf	___wmul@multiplier
  7203     1407  082D               	movf	??_load_buffer+1,w
  7204     1408  00A1               	movwf	___wmul@multiplier+1
  7205     1409  3005               	movlw	5
  7206     140A  00A2               	movwf	___wmul@multiplicand
  7207     140B  3000               	movlw	0
  7208     140C  00A3               	movwf	___wmul@multiplicand+1
  7209     140D  160A  118A  2116  160A  118A  	fcall	___wmul
  7210     1412  3012               	movlw	low (_arabic| (0+32768))
  7211     1413  1283               	bcf	3,5	;RP0=0, select bank0
  7212     1414  1303               	bcf	3,6	;RP1=0, select bank0
  7213     1415  00AE               	movwf	??_load_buffer+2
  7214     1416  3086               	movlw	high (_arabic| (0+32768))
  7215     1417  00AF               	movwf	??_load_buffer+3
  7216     1418  0820               	movf	?___wmul,w
  7217     1419  072E               	addwf	??_load_buffer+2,w
  7218     141A  00B0               	movwf	??_load_buffer+4
  7219     141B  0821               	movf	?___wmul+1,w
  7220     141C  1803               	skipnc
  7221     141D  0A21               	incf	?___wmul+1,w
  7222     141E  072F               	addwf	??_load_buffer+3,w
  7223     141F  00B1               	movwf	??_load_buffer+5
  7224     1420  0838               	movf	load_buffer@i_983,w
  7225     1421  0730               	addwf	??_load_buffer+4,w
  7226     1422  0084               	movwf	4
  7227     1423  0839               	movf	load_buffer@i_983+1,w
  7228     1424  1803               	skipnc
  7229     1425  0A39               	incf	load_buffer@i_983+1,w
  7230     1426  0731               	addwf	??_load_buffer+5,w
  7231     1427  00FF               	movwf	btemp+1
  7232     1428  120A  118A  2100  160A  118A  	fcall	stringtab
  7233     142D  00B2               	movwf	??_load_buffer+6
  7234     142E  3005               	movlw	5
  7235     142F  00A0               	movwf	___bmul@multiplicand
  7236     1430  0829               	movf	load_buffer@position,w
  7237     1431  160A  118A  2083  160A  118A  	fcall	___bmul
  7238     1436  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7239     1437  1283               	bcf	3,5	;RP0=0, select bank0
  7240     1438  1303               	bcf	3,6	;RP1=0, select bank0
  7241     1439  0738               	addwf	load_buffer@i_983,w
  7242     143A  00B3               	movwf	??_load_buffer+7
  7243     143B  0833               	movf	??_load_buffer+7,w
  7244     143C  0084               	movwf	4
  7245     143D  0832               	movf	??_load_buffer+6,w
  7246     143E  1783               	bsf	3,7	;select IRP bank3
  7247     143F  0080               	movwf	0
  7248     1440                     l1879:
  7249                           
  7250                           ;scherm.c: 125:             }
  7251     1440  3001               	movlw	1
  7252     1441  07B8               	addwf	load_buffer@i_983,f
  7253     1442  1803               	skipnc
  7254     1443  0AB9               	incf	load_buffer@i_983+1,f
  7255     1444  3000               	movlw	0
  7256     1445  07B9               	addwf	load_buffer@i_983+1,f
  7257     1446                     l1881:
  7258     1446  0839               	movf	load_buffer@i_983+1,w
  7259     1447  3A80               	xorlw	128
  7260     1448  00FF               	movwf	btemp+1
  7261     1449  3080               	movlw	128
  7262     144A  027F               	subwf	btemp+1,w
  7263     144B  1D03               	skipz
  7264     144C  2C4F               	goto	u1085
  7265     144D  3005               	movlw	5
  7266     144E  0238               	subwf	load_buffer@i_983,w
  7267     144F                     u1085:
  7268     144F  1C03               	skipc
  7269     1450  2C52               	goto	u1081
  7270     1451  2C53               	goto	u1080
  7271     1452                     u1081:
  7272     1452  2C00               	goto	l1877
  7273     1453                     u1080:
  7274     1453  2FFF               	goto	l511
  7275     1454                     l1883:
  7276     1454  3002               	movlw	2
  7277     1455  062B               	xorwf	load_buffer@scherm,w
  7278     1456  1D03               	btfss	3,2
  7279     1457  2C59               	goto	u1091
  7280     1458  2C5A               	goto	u1090
  7281     1459                     u1091:
  7282     1459  2CB0               	goto	l1897
  7283     145A                     u1090:
  7284     145A                     l1885:
  7285                           
  7286                           ;scherm.c: 127:             for (int i = 0; i < 5; i++) {
  7287     145A  01BA               	clrf	load_buffer@i_984
  7288     145B  01BB               	clrf	load_buffer@i_984+1
  7289     145C                     l1891:
  7290                           
  7291                           ;scherm.c: 128:                 scherm2_buffer[position * 5 + i] = arabic[character][i];
  7292     145C  1283               	bcf	3,5	;RP0=0, select bank0
  7293     145D  1303               	bcf	3,6	;RP1=0, select bank0
  7294     145E  0828               	movf	load_buffer@character,w
  7295     145F  00AC               	movwf	??_load_buffer
  7296     1460  01AD               	clrf	??_load_buffer+1
  7297     1461  082C               	movf	??_load_buffer,w
  7298     1462  00A0               	movwf	___wmul@multiplier
  7299     1463  082D               	movf	??_load_buffer+1,w
  7300     1464  00A1               	movwf	___wmul@multiplier+1
  7301     1465  3005               	movlw	5
  7302     1466  00A2               	movwf	___wmul@multiplicand
  7303     1467  3000               	movlw	0
  7304     1468  00A3               	movwf	___wmul@multiplicand+1
  7305     1469  160A  118A  2116  160A  118A  	fcall	___wmul
  7306     146E  3012               	movlw	low (_arabic| (0+32768))
  7307     146F  1283               	bcf	3,5	;RP0=0, select bank0
  7308     1470  1303               	bcf	3,6	;RP1=0, select bank0
  7309     1471  00AE               	movwf	??_load_buffer+2
  7310     1472  3086               	movlw	high (_arabic| (0+32768))
  7311     1473  00AF               	movwf	??_load_buffer+3
  7312     1474  0820               	movf	?___wmul,w
  7313     1475  072E               	addwf	??_load_buffer+2,w
  7314     1476  00B0               	movwf	??_load_buffer+4
  7315     1477  0821               	movf	?___wmul+1,w
  7316     1478  1803               	skipnc
  7317     1479  0A21               	incf	?___wmul+1,w
  7318     147A  072F               	addwf	??_load_buffer+3,w
  7319     147B  00B1               	movwf	??_load_buffer+5
  7320     147C  083A               	movf	load_buffer@i_984,w
  7321     147D  0730               	addwf	??_load_buffer+4,w
  7322     147E  0084               	movwf	4
  7323     147F  083B               	movf	load_buffer@i_984+1,w
  7324     1480  1803               	skipnc
  7325     1481  0A3B               	incf	load_buffer@i_984+1,w
  7326     1482  0731               	addwf	??_load_buffer+5,w
  7327     1483  00FF               	movwf	btemp+1
  7328     1484  120A  118A  2100  160A  118A  	fcall	stringtab
  7329     1489  00B2               	movwf	??_load_buffer+6
  7330     148A  3005               	movlw	5
  7331     148B  00A0               	movwf	___bmul@multiplicand
  7332     148C  0829               	movf	load_buffer@position,w
  7333     148D  160A  118A  2083  160A  118A  	fcall	___bmul
  7334     1492  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7335     1493  1283               	bcf	3,5	;RP0=0, select bank0
  7336     1494  1303               	bcf	3,6	;RP1=0, select bank0
  7337     1495  073A               	addwf	load_buffer@i_984,w
  7338     1496  00B3               	movwf	??_load_buffer+7
  7339     1497  0833               	movf	??_load_buffer+7,w
  7340     1498  0084               	movwf	4
  7341     1499  0832               	movf	??_load_buffer+6,w
  7342     149A  1783               	bsf	3,7	;select IRP bank3
  7343     149B  0080               	movwf	0
  7344     149C                     l1893:
  7345                           
  7346                           ;scherm.c: 129:             }
  7347     149C  3001               	movlw	1
  7348     149D  07BA               	addwf	load_buffer@i_984,f
  7349     149E  1803               	skipnc
  7350     149F  0ABB               	incf	load_buffer@i_984+1,f
  7351     14A0  3000               	movlw	0
  7352     14A1  07BB               	addwf	load_buffer@i_984+1,f
  7353     14A2                     l1895:
  7354     14A2  083B               	movf	load_buffer@i_984+1,w
  7355     14A3  3A80               	xorlw	128
  7356     14A4  00FF               	movwf	btemp+1
  7357     14A5  3080               	movlw	128
  7358     14A6  027F               	subwf	btemp+1,w
  7359     14A7  1D03               	skipz
  7360     14A8  2CAB               	goto	u1105
  7361     14A9  3005               	movlw	5
  7362     14AA  023A               	subwf	load_buffer@i_984,w
  7363     14AB                     u1105:
  7364     14AB  1C03               	skipc
  7365     14AC  2CAE               	goto	u1101
  7366     14AD  2CAF               	goto	u1100
  7367     14AE                     u1101:
  7368     14AE  2C5C               	goto	l1891
  7369     14AF                     u1100:
  7370     14AF  2FFF               	goto	l511
  7371     14B0                     l1897:
  7372     14B0  3003               	movlw	3
  7373     14B1  062B               	xorwf	load_buffer@scherm,w
  7374     14B2  1D03               	btfss	3,2
  7375     14B3  2CB5               	goto	u1111
  7376     14B4  2CB6               	goto	u1110
  7377     14B5                     u1111:
  7378     14B5  2AFB               	goto	l463
  7379     14B6                     u1110:
  7380     14B6                     l1899:
  7381                           
  7382                           ;scherm.c: 131:             for (int i = 0; i < 5; i++) {
  7383     14B6  01C6               	clrf	load_buffer@i_985
  7384     14B7  01C7               	clrf	load_buffer@i_985+1
  7385     14B8                     l1905:
  7386                           
  7387                           ;scherm.c: 132:                 scherm1_buffer[position * 5 + i] = arabic[character][i];
  7388     14B8  1283               	bcf	3,5	;RP0=0, select bank0
  7389     14B9  1303               	bcf	3,6	;RP1=0, select bank0
  7390     14BA  0828               	movf	load_buffer@character,w
  7391     14BB  00AC               	movwf	??_load_buffer
  7392     14BC  01AD               	clrf	??_load_buffer+1
  7393     14BD  082C               	movf	??_load_buffer,w
  7394     14BE  00A0               	movwf	___wmul@multiplier
  7395     14BF  082D               	movf	??_load_buffer+1,w
  7396     14C0  00A1               	movwf	___wmul@multiplier+1
  7397     14C1  3005               	movlw	5
  7398     14C2  00A2               	movwf	___wmul@multiplicand
  7399     14C3  3000               	movlw	0
  7400     14C4  00A3               	movwf	___wmul@multiplicand+1
  7401     14C5  160A  118A  2116  160A  118A  	fcall	___wmul
  7402     14CA  3012               	movlw	low (_arabic| (0+32768))
  7403     14CB  1283               	bcf	3,5	;RP0=0, select bank0
  7404     14CC  1303               	bcf	3,6	;RP1=0, select bank0
  7405     14CD  00AE               	movwf	??_load_buffer+2
  7406     14CE  3086               	movlw	high (_arabic| (0+32768))
  7407     14CF  00AF               	movwf	??_load_buffer+3
  7408     14D0  0820               	movf	?___wmul,w
  7409     14D1  072E               	addwf	??_load_buffer+2,w
  7410     14D2  00B0               	movwf	??_load_buffer+4
  7411     14D3  0821               	movf	?___wmul+1,w
  7412     14D4  1803               	skipnc
  7413     14D5  0A21               	incf	?___wmul+1,w
  7414     14D6  072F               	addwf	??_load_buffer+3,w
  7415     14D7  00B1               	movwf	??_load_buffer+5
  7416     14D8  0846               	movf	load_buffer@i_985,w
  7417     14D9  0730               	addwf	??_load_buffer+4,w
  7418     14DA  0084               	movwf	4
  7419     14DB  0847               	movf	load_buffer@i_985+1,w
  7420     14DC  1803               	skipnc
  7421     14DD  0A47               	incf	load_buffer@i_985+1,w
  7422     14DE  0731               	addwf	??_load_buffer+5,w
  7423     14DF  00FF               	movwf	btemp+1
  7424     14E0  120A  118A  2100  160A  118A  	fcall	stringtab
  7425     14E5  00B2               	movwf	??_load_buffer+6
  7426     14E6  3005               	movlw	5
  7427     14E7  00A0               	movwf	___bmul@multiplicand
  7428     14E8  0829               	movf	load_buffer@position,w
  7429     14E9  160A  118A  2083  160A  118A  	fcall	___bmul
  7430     14EE  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7431     14EF  1283               	bcf	3,5	;RP0=0, select bank0
  7432     14F0  1303               	bcf	3,6	;RP1=0, select bank0
  7433     14F1  0746               	addwf	load_buffer@i_985,w
  7434     14F2  00B3               	movwf	??_load_buffer+7
  7435     14F3  0833               	movf	??_load_buffer+7,w
  7436     14F4  0084               	movwf	4
  7437     14F5  0832               	movf	??_load_buffer+6,w
  7438     14F6  1783               	bsf	3,7	;select IRP bank3
  7439     14F7  0080               	movwf	0
  7440                           
  7441                           ;scherm.c: 133:                 scherm2_buffer[position * 5 + i] = arabic[character][i];
  7442     14F8  0828               	movf	load_buffer@character,w
  7443     14F9  00AC               	movwf	??_load_buffer
  7444     14FA  01AD               	clrf	??_load_buffer+1
  7445     14FB  082C               	movf	??_load_buffer,w
  7446     14FC  00A0               	movwf	___wmul@multiplier
  7447     14FD  082D               	movf	??_load_buffer+1,w
  7448     14FE  00A1               	movwf	___wmul@multiplier+1
  7449     14FF  3005               	movlw	5
  7450     1500  00A2               	movwf	___wmul@multiplicand
  7451     1501  3000               	movlw	0
  7452     1502  00A3               	movwf	___wmul@multiplicand+1
  7453     1503  160A  118A  2116  160A  118A  	fcall	___wmul
  7454     1508  3012               	movlw	low (_arabic| (0+32768))
  7455     1509  1283               	bcf	3,5	;RP0=0, select bank0
  7456     150A  1303               	bcf	3,6	;RP1=0, select bank0
  7457     150B  00AE               	movwf	??_load_buffer+2
  7458     150C  3086               	movlw	high (_arabic| (0+32768))
  7459     150D  00AF               	movwf	??_load_buffer+3
  7460     150E  0820               	movf	?___wmul,w
  7461     150F  072E               	addwf	??_load_buffer+2,w
  7462     1510  00B0               	movwf	??_load_buffer+4
  7463     1511  0821               	movf	?___wmul+1,w
  7464     1512  1803               	skipnc
  7465     1513  0A21               	incf	?___wmul+1,w
  7466     1514  072F               	addwf	??_load_buffer+3,w
  7467     1515  00B1               	movwf	??_load_buffer+5
  7468     1516  0846               	movf	load_buffer@i_985,w
  7469     1517  0730               	addwf	??_load_buffer+4,w
  7470     1518  0084               	movwf	4
  7471     1519  0847               	movf	load_buffer@i_985+1,w
  7472     151A  1803               	skipnc
  7473     151B  0A47               	incf	load_buffer@i_985+1,w
  7474     151C  0731               	addwf	??_load_buffer+5,w
  7475     151D  00FF               	movwf	btemp+1
  7476     151E  120A  118A  2100  160A  118A  	fcall	stringtab
  7477     1523  00B2               	movwf	??_load_buffer+6
  7478     1524  3005               	movlw	5
  7479     1525  00A0               	movwf	___bmul@multiplicand
  7480     1526  0829               	movf	load_buffer@position,w
  7481     1527  160A  118A  2083  160A  118A  	fcall	___bmul
  7482     152C  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7483     152D  1283               	bcf	3,5	;RP0=0, select bank0
  7484     152E  1303               	bcf	3,6	;RP1=0, select bank0
  7485     152F  0746               	addwf	load_buffer@i_985,w
  7486     1530  00B3               	movwf	??_load_buffer+7
  7487     1531  0833               	movf	??_load_buffer+7,w
  7488     1532  0084               	movwf	4
  7489     1533  0832               	movf	??_load_buffer+6,w
  7490     1534  1783               	bsf	3,7	;select IRP bank3
  7491     1535  0080               	movwf	0
  7492     1536                     l1907:
  7493                           
  7494                           ;scherm.c: 134:             }
  7495     1536  3001               	movlw	1
  7496     1537  07C6               	addwf	load_buffer@i_985,f
  7497     1538  1803               	skipnc
  7498     1539  0AC7               	incf	load_buffer@i_985+1,f
  7499     153A  3000               	movlw	0
  7500     153B  07C7               	addwf	load_buffer@i_985+1,f
  7501     153C                     l1909:
  7502     153C  0847               	movf	load_buffer@i_985+1,w
  7503     153D  3A80               	xorlw	128
  7504     153E  00FF               	movwf	btemp+1
  7505     153F  3080               	movlw	128
  7506     1540  027F               	subwf	btemp+1,w
  7507     1541  1D03               	skipz
  7508     1542  2D45               	goto	u1125
  7509     1543  3005               	movlw	5
  7510     1544  0246               	subwf	load_buffer@i_985,w
  7511     1545                     u1125:
  7512     1545  1C03               	skipc
  7513     1546  2D48               	goto	u1121
  7514     1547  2D49               	goto	u1120
  7515     1548                     u1121:
  7516     1548  2CB8               	goto	l1905
  7517     1549                     u1120:
  7518     1549  2FFF               	goto	l511
  7519     154A                     l1911:
  7520     154A  3004               	movlw	4
  7521     154B  0626               	xorwf	load_buffer@lang,w
  7522     154C  0427               	iorwf	load_buffer@lang+1,w
  7523     154D  1D03               	btfss	3,2
  7524     154E  2D50               	goto	u1131
  7525     154F  2D51               	goto	u1130
  7526     1550                     u1131:
  7527     1550  2EA4               	goto	l1955
  7528     1551                     u1130:
  7529     1551                     l1913:
  7530                           
  7531                           ;scherm.c: 138:         if (scherm == SCREEN_1) {
  7532     1551  032B               	decf	load_buffer@scherm,w
  7533     1552  1D03               	btfss	3,2
  7534     1553  2D55               	goto	u1141
  7535     1554  2D56               	goto	u1140
  7536     1555                     u1141:
  7537     1555  2DAC               	goto	l1927
  7538     1556                     u1140:
  7539     1556                     l1915:
  7540                           
  7541                           ;scherm.c: 139:             for (int i = 0; i < 5; i++) {
  7542     1556  01BC               	clrf	load_buffer@i_986
  7543     1557  01BD               	clrf	load_buffer@i_986+1
  7544     1558                     l1921:
  7545                           
  7546                           ;scherm.c: 140:                 scherm1_buffer[position * 5 + i] = hebrew[character][i];
  7547     1558  1283               	bcf	3,5	;RP0=0, select bank0
  7548     1559  1303               	bcf	3,6	;RP1=0, select bank0
  7549     155A  0828               	movf	load_buffer@character,w
  7550     155B  00AC               	movwf	??_load_buffer
  7551     155C  01AD               	clrf	??_load_buffer+1
  7552     155D  082C               	movf	??_load_buffer,w
  7553     155E  00A0               	movwf	___wmul@multiplier
  7554     155F  082D               	movf	??_load_buffer+1,w
  7555     1560  00A1               	movwf	___wmul@multiplier+1
  7556     1561  3005               	movlw	5
  7557     1562  00A2               	movwf	___wmul@multiplicand
  7558     1563  3000               	movlw	0
  7559     1564  00A3               	movwf	___wmul@multiplicand+1
  7560     1565  160A  118A  2116  160A  118A  	fcall	___wmul
  7561     156A  3092               	movlw	low (_hebrew| (0+32768))
  7562     156B  1283               	bcf	3,5	;RP0=0, select bank0
  7563     156C  1303               	bcf	3,6	;RP1=0, select bank0
  7564     156D  00AE               	movwf	??_load_buffer+2
  7565     156E  3083               	movlw	high (_hebrew| (0+32768))
  7566     156F  00AF               	movwf	??_load_buffer+3
  7567     1570  0820               	movf	?___wmul,w
  7568     1571  072E               	addwf	??_load_buffer+2,w
  7569     1572  00B0               	movwf	??_load_buffer+4
  7570     1573  0821               	movf	?___wmul+1,w
  7571     1574  1803               	skipnc
  7572     1575  0A21               	incf	?___wmul+1,w
  7573     1576  072F               	addwf	??_load_buffer+3,w
  7574     1577  00B1               	movwf	??_load_buffer+5
  7575     1578  083C               	movf	load_buffer@i_986,w
  7576     1579  0730               	addwf	??_load_buffer+4,w
  7577     157A  0084               	movwf	4
  7578     157B  083D               	movf	load_buffer@i_986+1,w
  7579     157C  1803               	skipnc
  7580     157D  0A3D               	incf	load_buffer@i_986+1,w
  7581     157E  0731               	addwf	??_load_buffer+5,w
  7582     157F  00FF               	movwf	btemp+1
  7583     1580  120A  118A  2100  160A  118A  	fcall	stringtab
  7584     1585  00B2               	movwf	??_load_buffer+6
  7585     1586  3005               	movlw	5
  7586     1587  00A0               	movwf	___bmul@multiplicand
  7587     1588  0829               	movf	load_buffer@position,w
  7588     1589  160A  118A  2083  160A  118A  	fcall	___bmul
  7589     158E  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7590     158F  1283               	bcf	3,5	;RP0=0, select bank0
  7591     1590  1303               	bcf	3,6	;RP1=0, select bank0
  7592     1591  073C               	addwf	load_buffer@i_986,w
  7593     1592  00B3               	movwf	??_load_buffer+7
  7594     1593  0833               	movf	??_load_buffer+7,w
  7595     1594  0084               	movwf	4
  7596     1595  0832               	movf	??_load_buffer+6,w
  7597     1596  1783               	bsf	3,7	;select IRP bank3
  7598     1597  0080               	movwf	0
  7599     1598                     l1923:
  7600                           
  7601                           ;scherm.c: 141:             }
  7602     1598  3001               	movlw	1
  7603     1599  07BC               	addwf	load_buffer@i_986,f
  7604     159A  1803               	skipnc
  7605     159B  0ABD               	incf	load_buffer@i_986+1,f
  7606     159C  3000               	movlw	0
  7607     159D  07BD               	addwf	load_buffer@i_986+1,f
  7608     159E                     l1925:
  7609     159E  083D               	movf	load_buffer@i_986+1,w
  7610     159F  3A80               	xorlw	128
  7611     15A0  00FF               	movwf	btemp+1
  7612     15A1  3080               	movlw	128
  7613     15A2  027F               	subwf	btemp+1,w
  7614     15A3  1D03               	skipz
  7615     15A4  2DA7               	goto	u1155
  7616     15A5  3005               	movlw	5
  7617     15A6  023C               	subwf	load_buffer@i_986,w
  7618     15A7                     u1155:
  7619     15A7  1C03               	skipc
  7620     15A8  2DAA               	goto	u1151
  7621     15A9  2DAB               	goto	u1150
  7622     15AA                     u1151:
  7623     15AA  2D58               	goto	l1921
  7624     15AB                     u1150:
  7625     15AB  2FFF               	goto	l511
  7626     15AC                     l1927:
  7627     15AC  3002               	movlw	2
  7628     15AD  062B               	xorwf	load_buffer@scherm,w
  7629     15AE  1D03               	btfss	3,2
  7630     15AF  2DB1               	goto	u1161
  7631     15B0  2DB2               	goto	u1160
  7632     15B1                     u1161:
  7633     15B1  2E09               	goto	l1941
  7634     15B2                     u1160:
  7635     15B2                     l1929:
  7636                           
  7637                           ;scherm.c: 143:             for (int i = 0; i < 5; i++) {
  7638     15B2  01BE               	clrf	load_buffer@i_987
  7639     15B3  01BF               	clrf	load_buffer@i_987+1
  7640     15B4                     l1931:
  7641     15B4  083F               	movf	load_buffer@i_987+1,w
  7642     15B5  3A80               	xorlw	128
  7643     15B6  00FF               	movwf	btemp+1
  7644     15B7  3080               	movlw	128
  7645     15B8  027F               	subwf	btemp+1,w
  7646     15B9  1D03               	skipz
  7647     15BA  2DBD               	goto	u1175
  7648     15BB  3005               	movlw	5
  7649     15BC  023E               	subwf	load_buffer@i_987,w
  7650     15BD                     u1175:
  7651     15BD  1C03               	skipc
  7652     15BE  2DC0               	goto	u1171
  7653     15BF  2DC1               	goto	u1170
  7654     15C0                     u1171:
  7655     15C0  2DC2               	goto	l1935
  7656     15C1                     u1170:
  7657     15C1  2FFF               	goto	l511
  7658     15C2                     l1935:
  7659                           
  7660                           ;scherm.c: 144:                 scherm2_buffer[position * 5 + i] = hebrew[character][i];
  7661     15C2  1283               	bcf	3,5	;RP0=0, select bank0
  7662     15C3  1303               	bcf	3,6	;RP1=0, select bank0
  7663     15C4  0828               	movf	load_buffer@character,w
  7664     15C5  00AC               	movwf	??_load_buffer
  7665     15C6  01AD               	clrf	??_load_buffer+1
  7666     15C7  082C               	movf	??_load_buffer,w
  7667     15C8  00A0               	movwf	___wmul@multiplier
  7668     15C9  082D               	movf	??_load_buffer+1,w
  7669     15CA  00A1               	movwf	___wmul@multiplier+1
  7670     15CB  3005               	movlw	5
  7671     15CC  00A2               	movwf	___wmul@multiplicand
  7672     15CD  3000               	movlw	0
  7673     15CE  00A3               	movwf	___wmul@multiplicand+1
  7674     15CF  160A  118A  2116  160A  118A  	fcall	___wmul
  7675     15D4  3092               	movlw	low (_hebrew| (0+32768))
  7676     15D5  1283               	bcf	3,5	;RP0=0, select bank0
  7677     15D6  1303               	bcf	3,6	;RP1=0, select bank0
  7678     15D7  00AE               	movwf	??_load_buffer+2
  7679     15D8  3083               	movlw	high (_hebrew| (0+32768))
  7680     15D9  00AF               	movwf	??_load_buffer+3
  7681     15DA  0820               	movf	?___wmul,w
  7682     15DB  072E               	addwf	??_load_buffer+2,w
  7683     15DC  00B0               	movwf	??_load_buffer+4
  7684     15DD  0821               	movf	?___wmul+1,w
  7685     15DE  1803               	skipnc
  7686     15DF  0A21               	incf	?___wmul+1,w
  7687     15E0  072F               	addwf	??_load_buffer+3,w
  7688     15E1  00B1               	movwf	??_load_buffer+5
  7689     15E2  083E               	movf	load_buffer@i_987,w
  7690     15E3  0730               	addwf	??_load_buffer+4,w
  7691     15E4  0084               	movwf	4
  7692     15E5  083F               	movf	load_buffer@i_987+1,w
  7693     15E6  1803               	skipnc
  7694     15E7  0A3F               	incf	load_buffer@i_987+1,w
  7695     15E8  0731               	addwf	??_load_buffer+5,w
  7696     15E9  00FF               	movwf	btemp+1
  7697     15EA  120A  118A  2100  160A  118A  	fcall	stringtab
  7698     15EF  00B2               	movwf	??_load_buffer+6
  7699     15F0  3005               	movlw	5
  7700     15F1  00A0               	movwf	___bmul@multiplicand
  7701     15F2  0829               	movf	load_buffer@position,w
  7702     15F3  160A  118A  2083  160A  118A  	fcall	___bmul
  7703     15F8  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7704     15F9  1283               	bcf	3,5	;RP0=0, select bank0
  7705     15FA  1303               	bcf	3,6	;RP1=0, select bank0
  7706     15FB  073E               	addwf	load_buffer@i_987,w
  7707     15FC  00B3               	movwf	??_load_buffer+7
  7708     15FD  0833               	movf	??_load_buffer+7,w
  7709     15FE  0084               	movwf	4
  7710     15FF  0832               	movf	??_load_buffer+6,w
  7711     1600  1783               	bsf	3,7	;select IRP bank3
  7712     1601  0080               	movwf	0
  7713     1602                     l1937:
  7714                           
  7715                           ;scherm.c: 145:             }
  7716     1602  3001               	movlw	1
  7717     1603  07BE               	addwf	load_buffer@i_987,f
  7718     1604  1803               	skipnc
  7719     1605  0ABF               	incf	load_buffer@i_987+1,f
  7720     1606  3000               	movlw	0
  7721     1607  07BF               	addwf	load_buffer@i_987+1,f
  7722     1608  2DB4               	goto	l1931
  7723     1609                     l1941:
  7724     1609  3003               	movlw	3
  7725     160A  062B               	xorwf	load_buffer@scherm,w
  7726     160B  1D03               	btfss	3,2
  7727     160C  2E0E               	goto	u1181
  7728     160D  2E0F               	goto	u1180
  7729     160E                     u1181:
  7730     160E  2AFB               	goto	l463
  7731     160F                     u1180:
  7732     160F                     l1943:
  7733                           
  7734                           ;scherm.c: 147:             for (int i = 0; i < 5; i++) {
  7735     160F  01C8               	clrf	load_buffer@i_988
  7736     1610  01C9               	clrf	load_buffer@i_988+1
  7737     1611                     l1945:
  7738     1611  0849               	movf	load_buffer@i_988+1,w
  7739     1612  3A80               	xorlw	128
  7740     1613  00FF               	movwf	btemp+1
  7741     1614  3080               	movlw	128
  7742     1615  027F               	subwf	btemp+1,w
  7743     1616  1D03               	skipz
  7744     1617  2E1A               	goto	u1195
  7745     1618  3005               	movlw	5
  7746     1619  0248               	subwf	load_buffer@i_988,w
  7747     161A                     u1195:
  7748     161A  1C03               	skipc
  7749     161B  2E1D               	goto	u1191
  7750     161C  2E1E               	goto	u1190
  7751     161D                     u1191:
  7752     161D  2E1F               	goto	l1949
  7753     161E                     u1190:
  7754     161E  2FFF               	goto	l511
  7755     161F                     l1949:
  7756                           
  7757                           ;scherm.c: 148:                 scherm1_buffer[position * 5 + i] = hebrew[character][i];
  7758     161F  1283               	bcf	3,5	;RP0=0, select bank0
  7759     1620  1303               	bcf	3,6	;RP1=0, select bank0
  7760     1621  0828               	movf	load_buffer@character,w
  7761     1622  00AC               	movwf	??_load_buffer
  7762     1623  01AD               	clrf	??_load_buffer+1
  7763     1624  082C               	movf	??_load_buffer,w
  7764     1625  00A0               	movwf	___wmul@multiplier
  7765     1626  082D               	movf	??_load_buffer+1,w
  7766     1627  00A1               	movwf	___wmul@multiplier+1
  7767     1628  3005               	movlw	5
  7768     1629  00A2               	movwf	___wmul@multiplicand
  7769     162A  3000               	movlw	0
  7770     162B  00A3               	movwf	___wmul@multiplicand+1
  7771     162C  160A  118A  2116  160A  118A  	fcall	___wmul
  7772     1631  3092               	movlw	low (_hebrew| (0+32768))
  7773     1632  1283               	bcf	3,5	;RP0=0, select bank0
  7774     1633  1303               	bcf	3,6	;RP1=0, select bank0
  7775     1634  00AE               	movwf	??_load_buffer+2
  7776     1635  3083               	movlw	high (_hebrew| (0+32768))
  7777     1636  00AF               	movwf	??_load_buffer+3
  7778     1637  0820               	movf	?___wmul,w
  7779     1638  072E               	addwf	??_load_buffer+2,w
  7780     1639  00B0               	movwf	??_load_buffer+4
  7781     163A  0821               	movf	?___wmul+1,w
  7782     163B  1803               	skipnc
  7783     163C  0A21               	incf	?___wmul+1,w
  7784     163D  072F               	addwf	??_load_buffer+3,w
  7785     163E  00B1               	movwf	??_load_buffer+5
  7786     163F  0848               	movf	load_buffer@i_988,w
  7787     1640  0730               	addwf	??_load_buffer+4,w
  7788     1641  0084               	movwf	4
  7789     1642  0849               	movf	load_buffer@i_988+1,w
  7790     1643  1803               	skipnc
  7791     1644  0A49               	incf	load_buffer@i_988+1,w
  7792     1645  0731               	addwf	??_load_buffer+5,w
  7793     1646  00FF               	movwf	btemp+1
  7794     1647  120A  118A  2100  160A  118A  	fcall	stringtab
  7795     164C  00B2               	movwf	??_load_buffer+6
  7796     164D  3005               	movlw	5
  7797     164E  00A0               	movwf	___bmul@multiplicand
  7798     164F  0829               	movf	load_buffer@position,w
  7799     1650  160A  118A  2083  160A  118A  	fcall	___bmul
  7800     1655  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7801     1656  1283               	bcf	3,5	;RP0=0, select bank0
  7802     1657  1303               	bcf	3,6	;RP1=0, select bank0
  7803     1658  0748               	addwf	load_buffer@i_988,w
  7804     1659  00B3               	movwf	??_load_buffer+7
  7805     165A  0833               	movf	??_load_buffer+7,w
  7806     165B  0084               	movwf	4
  7807     165C  0832               	movf	??_load_buffer+6,w
  7808     165D  1783               	bsf	3,7	;select IRP bank3
  7809     165E  0080               	movwf	0
  7810                           
  7811                           ;scherm.c: 149:                 scherm2_buffer[position * 5 + i] = hebrew[character][i];
  7812     165F  0828               	movf	load_buffer@character,w
  7813     1660  00AC               	movwf	??_load_buffer
  7814     1661  01AD               	clrf	??_load_buffer+1
  7815     1662  082C               	movf	??_load_buffer,w
  7816     1663  00A0               	movwf	___wmul@multiplier
  7817     1664  082D               	movf	??_load_buffer+1,w
  7818     1665  00A1               	movwf	___wmul@multiplier+1
  7819     1666  3005               	movlw	5
  7820     1667  00A2               	movwf	___wmul@multiplicand
  7821     1668  3000               	movlw	0
  7822     1669  00A3               	movwf	___wmul@multiplicand+1
  7823     166A  160A  118A  2116  160A  118A  	fcall	___wmul
  7824     166F  3092               	movlw	low (_hebrew| (0+32768))
  7825     1670  1283               	bcf	3,5	;RP0=0, select bank0
  7826     1671  1303               	bcf	3,6	;RP1=0, select bank0
  7827     1672  00AE               	movwf	??_load_buffer+2
  7828     1673  3083               	movlw	high (_hebrew| (0+32768))
  7829     1674  00AF               	movwf	??_load_buffer+3
  7830     1675  0820               	movf	?___wmul,w
  7831     1676  072E               	addwf	??_load_buffer+2,w
  7832     1677  00B0               	movwf	??_load_buffer+4
  7833     1678  0821               	movf	?___wmul+1,w
  7834     1679  1803               	skipnc
  7835     167A  0A21               	incf	?___wmul+1,w
  7836     167B  072F               	addwf	??_load_buffer+3,w
  7837     167C  00B1               	movwf	??_load_buffer+5
  7838     167D  0848               	movf	load_buffer@i_988,w
  7839     167E  0730               	addwf	??_load_buffer+4,w
  7840     167F  0084               	movwf	4
  7841     1680  0849               	movf	load_buffer@i_988+1,w
  7842     1681  1803               	skipnc
  7843     1682  0A49               	incf	load_buffer@i_988+1,w
  7844     1683  0731               	addwf	??_load_buffer+5,w
  7845     1684  00FF               	movwf	btemp+1
  7846     1685  120A  118A  2100  160A  118A  	fcall	stringtab
  7847     168A  00B2               	movwf	??_load_buffer+6
  7848     168B  3005               	movlw	5
  7849     168C  00A0               	movwf	___bmul@multiplicand
  7850     168D  0829               	movf	load_buffer@position,w
  7851     168E  160A  118A  2083  160A  118A  	fcall	___bmul
  7852     1693  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  7853     1694  1283               	bcf	3,5	;RP0=0, select bank0
  7854     1695  1303               	bcf	3,6	;RP1=0, select bank0
  7855     1696  0748               	addwf	load_buffer@i_988,w
  7856     1697  00B3               	movwf	??_load_buffer+7
  7857     1698  0833               	movf	??_load_buffer+7,w
  7858     1699  0084               	movwf	4
  7859     169A  0832               	movf	??_load_buffer+6,w
  7860     169B  1783               	bsf	3,7	;select IRP bank3
  7861     169C  0080               	movwf	0
  7862     169D                     l1951:
  7863                           
  7864                           ;scherm.c: 150:             }
  7865     169D  3001               	movlw	1
  7866     169E  07C8               	addwf	load_buffer@i_988,f
  7867     169F  1803               	skipnc
  7868     16A0  0AC9               	incf	load_buffer@i_988+1,f
  7869     16A1  3000               	movlw	0
  7870     16A2  07C9               	addwf	load_buffer@i_988+1,f
  7871     16A3  2E11               	goto	l1945
  7872     16A4                     l1955:
  7873     16A4  3006               	movlw	6
  7874     16A5  0626               	xorwf	load_buffer@lang,w
  7875     16A6  0427               	iorwf	load_buffer@lang+1,w
  7876     16A7  1D03               	btfss	3,2
  7877     16A8  2EAA               	goto	u1201
  7878     16A9  2EAB               	goto	u1200
  7879     16AA                     u1201:
  7880     16AA  2FFF               	goto	l511
  7881     16AB                     u1200:
  7882     16AB                     l1957:
  7883                           
  7884                           ;scherm.c: 154:         if (scherm == SCREEN_1) {
  7885     16AB  032B               	decf	load_buffer@scherm,w
  7886     16AC  1D03               	btfss	3,2
  7887     16AD  2EAF               	goto	u1211
  7888     16AE  2EB0               	goto	u1210
  7889     16AF                     u1211:
  7890     16AF  2F07               	goto	l1971
  7891     16B0                     u1210:
  7892     16B0                     l1959:
  7893                           
  7894                           ;scherm.c: 155:             for (int i = 0; i < 5; i++) {
  7895     16B0  01C0               	clrf	load_buffer@i_989
  7896     16B1  01C1               	clrf	load_buffer@i_989+1
  7897     16B2                     l1961:
  7898     16B2  0841               	movf	load_buffer@i_989+1,w
  7899     16B3  3A80               	xorlw	128
  7900     16B4  00FF               	movwf	btemp+1
  7901     16B5  3080               	movlw	128
  7902     16B6  027F               	subwf	btemp+1,w
  7903     16B7  1D03               	skipz
  7904     16B8  2EBB               	goto	u1225
  7905     16B9  3005               	movlw	5
  7906     16BA  0240               	subwf	load_buffer@i_989,w
  7907     16BB                     u1225:
  7908     16BB  1C03               	skipc
  7909     16BC  2EBE               	goto	u1221
  7910     16BD  2EBF               	goto	u1220
  7911     16BE                     u1221:
  7912     16BE  2EC0               	goto	l1965
  7913     16BF                     u1220:
  7914     16BF  2FFF               	goto	l511
  7915     16C0                     l1965:
  7916                           
  7917                           ;scherm.c: 156:                 scherm1_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  7918     16C0  1283               	bcf	3,5	;RP0=0, select bank0
  7919     16C1  1303               	bcf	3,6	;RP1=0, select bank0
  7920     16C2  0828               	movf	load_buffer@character,w
  7921     16C3  00AC               	movwf	??_load_buffer
  7922     16C4  01AD               	clrf	??_load_buffer+1
  7923     16C5  082C               	movf	??_load_buffer,w
  7924     16C6  00A0               	movwf	___wmul@multiplier
  7925     16C7  082D               	movf	??_load_buffer+1,w
  7926     16C8  00A1               	movwf	___wmul@multiplier+1
  7927     16C9  3005               	movlw	5
  7928     16CA  00A2               	movwf	___wmul@multiplicand
  7929     16CB  3000               	movlw	0
  7930     16CC  00A3               	movwf	___wmul@multiplicand+1
  7931     16CD  160A  118A  2116  160A  118A  	fcall	___wmul
  7932     16D2  3012               	movlw	low (_aurebech| (0+32768))
  7933     16D3  1283               	bcf	3,5	;RP0=0, select bank0
  7934     16D4  1303               	bcf	3,6	;RP1=0, select bank0
  7935     16D5  00AE               	movwf	??_load_buffer+2
  7936     16D6  3081               	movlw	high (_aurebech| (0+32768))
  7937     16D7  00AF               	movwf	??_load_buffer+3
  7938     16D8  0820               	movf	?___wmul,w
  7939     16D9  072E               	addwf	??_load_buffer+2,w
  7940     16DA  00B0               	movwf	??_load_buffer+4
  7941     16DB  0821               	movf	?___wmul+1,w
  7942     16DC  1803               	skipnc
  7943     16DD  0A21               	incf	?___wmul+1,w
  7944     16DE  072F               	addwf	??_load_buffer+3,w
  7945     16DF  00B1               	movwf	??_load_buffer+5
  7946     16E0  0840               	movf	load_buffer@i_989,w
  7947     16E1  0730               	addwf	??_load_buffer+4,w
  7948     16E2  0084               	movwf	4
  7949     16E3  0841               	movf	load_buffer@i_989+1,w
  7950     16E4  1803               	skipnc
  7951     16E5  0A41               	incf	load_buffer@i_989+1,w
  7952     16E6  0731               	addwf	??_load_buffer+5,w
  7953     16E7  00FF               	movwf	btemp+1
  7954     16E8  120A  118A  2100  160A  118A  	fcall	stringtab
  7955     16ED  00B2               	movwf	??_load_buffer+6
  7956     16EE  3005               	movlw	5
  7957     16EF  00A0               	movwf	___bmul@multiplicand
  7958     16F0  0829               	movf	load_buffer@position,w
  7959     16F1  160A  118A  2083  160A  118A  	fcall	___bmul
  7960     16F6  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  7961     16F7  1283               	bcf	3,5	;RP0=0, select bank0
  7962     16F8  1303               	bcf	3,6	;RP1=0, select bank0
  7963     16F9  0740               	addwf	load_buffer@i_989,w
  7964     16FA  00B3               	movwf	??_load_buffer+7
  7965     16FB  0833               	movf	??_load_buffer+7,w
  7966     16FC  0084               	movwf	4
  7967     16FD  0832               	movf	??_load_buffer+6,w
  7968     16FE  1783               	bsf	3,7	;select IRP bank3
  7969     16FF  0080               	movwf	0
  7970     1700                     l1967:
  7971                           
  7972                           ;scherm.c: 157:             }
  7973     1700  3001               	movlw	1
  7974     1701  07C0               	addwf	load_buffer@i_989,f
  7975     1702  1803               	skipnc
  7976     1703  0AC1               	incf	load_buffer@i_989+1,f
  7977     1704  3000               	movlw	0
  7978     1705  07C1               	addwf	load_buffer@i_989+1,f
  7979     1706  2EB2               	goto	l1961
  7980     1707                     l1971:
  7981     1707  3002               	movlw	2
  7982     1708  062B               	xorwf	load_buffer@scherm,w
  7983     1709  1D03               	btfss	3,2
  7984     170A  2F0C               	goto	u1231
  7985     170B  2F0D               	goto	u1230
  7986     170C                     u1231:
  7987     170C  2F64               	goto	l1985
  7988     170D                     u1230:
  7989     170D                     l1973:
  7990                           
  7991                           ;scherm.c: 159:             for (int i = 0; i < 5; i++) {
  7992     170D  01C2               	clrf	load_buffer@i_990
  7993     170E  01C3               	clrf	load_buffer@i_990+1
  7994     170F                     l1975:
  7995     170F  0843               	movf	load_buffer@i_990+1,w
  7996     1710  3A80               	xorlw	128
  7997     1711  00FF               	movwf	btemp+1
  7998     1712  3080               	movlw	128
  7999     1713  027F               	subwf	btemp+1,w
  8000     1714  1D03               	skipz
  8001     1715  2F18               	goto	u1245
  8002     1716  3005               	movlw	5
  8003     1717  0242               	subwf	load_buffer@i_990,w
  8004     1718                     u1245:
  8005     1718  1C03               	skipc
  8006     1719  2F1B               	goto	u1241
  8007     171A  2F1C               	goto	u1240
  8008     171B                     u1241:
  8009     171B  2F1D               	goto	l1979
  8010     171C                     u1240:
  8011     171C  2FFF               	goto	l511
  8012     171D                     l1979:
  8013                           
  8014                           ;scherm.c: 160:                 scherm2_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8015     171D  1283               	bcf	3,5	;RP0=0, select bank0
  8016     171E  1303               	bcf	3,6	;RP1=0, select bank0
  8017     171F  0828               	movf	load_buffer@character,w
  8018     1720  00AC               	movwf	??_load_buffer
  8019     1721  01AD               	clrf	??_load_buffer+1
  8020     1722  082C               	movf	??_load_buffer,w
  8021     1723  00A0               	movwf	___wmul@multiplier
  8022     1724  082D               	movf	??_load_buffer+1,w
  8023     1725  00A1               	movwf	___wmul@multiplier+1
  8024     1726  3005               	movlw	5
  8025     1727  00A2               	movwf	___wmul@multiplicand
  8026     1728  3000               	movlw	0
  8027     1729  00A3               	movwf	___wmul@multiplicand+1
  8028     172A  160A  118A  2116  160A  118A  	fcall	___wmul
  8029     172F  3012               	movlw	low (_aurebech| (0+32768))
  8030     1730  1283               	bcf	3,5	;RP0=0, select bank0
  8031     1731  1303               	bcf	3,6	;RP1=0, select bank0
  8032     1732  00AE               	movwf	??_load_buffer+2
  8033     1733  3081               	movlw	high (_aurebech| (0+32768))
  8034     1734  00AF               	movwf	??_load_buffer+3
  8035     1735  0820               	movf	?___wmul,w
  8036     1736  072E               	addwf	??_load_buffer+2,w
  8037     1737  00B0               	movwf	??_load_buffer+4
  8038     1738  0821               	movf	?___wmul+1,w
  8039     1739  1803               	skipnc
  8040     173A  0A21               	incf	?___wmul+1,w
  8041     173B  072F               	addwf	??_load_buffer+3,w
  8042     173C  00B1               	movwf	??_load_buffer+5
  8043     173D  0842               	movf	load_buffer@i_990,w
  8044     173E  0730               	addwf	??_load_buffer+4,w
  8045     173F  0084               	movwf	4
  8046     1740  0843               	movf	load_buffer@i_990+1,w
  8047     1741  1803               	skipnc
  8048     1742  0A43               	incf	load_buffer@i_990+1,w
  8049     1743  0731               	addwf	??_load_buffer+5,w
  8050     1744  00FF               	movwf	btemp+1
  8051     1745  120A  118A  2100  160A  118A  	fcall	stringtab
  8052     174A  00B2               	movwf	??_load_buffer+6
  8053     174B  3005               	movlw	5
  8054     174C  00A0               	movwf	___bmul@multiplicand
  8055     174D  0829               	movf	load_buffer@position,w
  8056     174E  160A  118A  2083  160A  118A  	fcall	___bmul
  8057     1753  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  8058     1754  1283               	bcf	3,5	;RP0=0, select bank0
  8059     1755  1303               	bcf	3,6	;RP1=0, select bank0
  8060     1756  0742               	addwf	load_buffer@i_990,w
  8061     1757  00B3               	movwf	??_load_buffer+7
  8062     1758  0833               	movf	??_load_buffer+7,w
  8063     1759  0084               	movwf	4
  8064     175A  0832               	movf	??_load_buffer+6,w
  8065     175B  1783               	bsf	3,7	;select IRP bank3
  8066     175C  0080               	movwf	0
  8067     175D                     l1981:
  8068                           
  8069                           ;scherm.c: 161:             }
  8070     175D  3001               	movlw	1
  8071     175E  07C2               	addwf	load_buffer@i_990,f
  8072     175F  1803               	skipnc
  8073     1760  0AC3               	incf	load_buffer@i_990+1,f
  8074     1761  3000               	movlw	0
  8075     1762  07C3               	addwf	load_buffer@i_990+1,f
  8076     1763  2F0F               	goto	l1975
  8077     1764                     l1985:
  8078     1764  3003               	movlw	3
  8079     1765  062B               	xorwf	load_buffer@scherm,w
  8080     1766  1D03               	btfss	3,2
  8081     1767  2F69               	goto	u1251
  8082     1768  2F6A               	goto	u1250
  8083     1769                     u1251:
  8084     1769  2AFB               	goto	l463
  8085     176A                     u1250:
  8086     176A                     l1987:
  8087                           
  8088                           ;scherm.c: 163:             for (int i = 0; i < 5; i++) {
  8089     176A  01CA               	clrf	load_buffer@i_991
  8090     176B  01CB               	clrf	load_buffer@i_991+1
  8091     176C                     l1989:
  8092     176C  084B               	movf	load_buffer@i_991+1,w
  8093     176D  3A80               	xorlw	128
  8094     176E  00FF               	movwf	btemp+1
  8095     176F  3080               	movlw	128
  8096     1770  027F               	subwf	btemp+1,w
  8097     1771  1D03               	skipz
  8098     1772  2F75               	goto	u1265
  8099     1773  3005               	movlw	5
  8100     1774  024A               	subwf	load_buffer@i_991,w
  8101     1775                     u1265:
  8102     1775  1C03               	skipc
  8103     1776  2F78               	goto	u1261
  8104     1777  2F79               	goto	u1260
  8105     1778                     u1261:
  8106     1778  2F7A               	goto	l1993
  8107     1779                     u1260:
  8108     1779  2FFF               	goto	l511
  8109     177A                     l1993:
  8110                           
  8111                           ;scherm.c: 164:                 scherm1_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8112     177A  1283               	bcf	3,5	;RP0=0, select bank0
  8113     177B  1303               	bcf	3,6	;RP1=0, select bank0
  8114     177C  0828               	movf	load_buffer@character,w
  8115     177D  00AC               	movwf	??_load_buffer
  8116     177E  01AD               	clrf	??_load_buffer+1
  8117     177F  082C               	movf	??_load_buffer,w
  8118     1780  00A0               	movwf	___wmul@multiplier
  8119     1781  082D               	movf	??_load_buffer+1,w
  8120     1782  00A1               	movwf	___wmul@multiplier+1
  8121     1783  3005               	movlw	5
  8122     1784  00A2               	movwf	___wmul@multiplicand
  8123     1785  3000               	movlw	0
  8124     1786  00A3               	movwf	___wmul@multiplicand+1
  8125     1787  160A  118A  2116  160A  118A  	fcall	___wmul
  8126     178C  3012               	movlw	low (_aurebech| (0+32768))
  8127     178D  1283               	bcf	3,5	;RP0=0, select bank0
  8128     178E  1303               	bcf	3,6	;RP1=0, select bank0
  8129     178F  00AE               	movwf	??_load_buffer+2
  8130     1790  3081               	movlw	high (_aurebech| (0+32768))
  8131     1791  00AF               	movwf	??_load_buffer+3
  8132     1792  0820               	movf	?___wmul,w
  8133     1793  072E               	addwf	??_load_buffer+2,w
  8134     1794  00B0               	movwf	??_load_buffer+4
  8135     1795  0821               	movf	?___wmul+1,w
  8136     1796  1803               	skipnc
  8137     1797  0A21               	incf	?___wmul+1,w
  8138     1798  072F               	addwf	??_load_buffer+3,w
  8139     1799  00B1               	movwf	??_load_buffer+5
  8140     179A  084A               	movf	load_buffer@i_991,w
  8141     179B  0730               	addwf	??_load_buffer+4,w
  8142     179C  0084               	movwf	4
  8143     179D  084B               	movf	load_buffer@i_991+1,w
  8144     179E  1803               	skipnc
  8145     179F  0A4B               	incf	load_buffer@i_991+1,w
  8146     17A0  0731               	addwf	??_load_buffer+5,w
  8147     17A1  00FF               	movwf	btemp+1
  8148     17A2  120A  118A  2100  160A  118A  	fcall	stringtab
  8149     17A7  00B2               	movwf	??_load_buffer+6
  8150     17A8  3005               	movlw	5
  8151     17A9  00A0               	movwf	___bmul@multiplicand
  8152     17AA  0829               	movf	load_buffer@position,w
  8153     17AB  160A  118A  2083  160A  118A  	fcall	___bmul
  8154     17B0  3EB8               	addlw	(low (_scherm1_buffer| (0+256)))& (0+255)
  8155     17B1  1283               	bcf	3,5	;RP0=0, select bank0
  8156     17B2  1303               	bcf	3,6	;RP1=0, select bank0
  8157     17B3  074A               	addwf	load_buffer@i_991,w
  8158     17B4  00B3               	movwf	??_load_buffer+7
  8159     17B5  0833               	movf	??_load_buffer+7,w
  8160     17B6  0084               	movwf	4
  8161     17B7  0832               	movf	??_load_buffer+6,w
  8162     17B8  1783               	bsf	3,7	;select IRP bank3
  8163     17B9  0080               	movwf	0
  8164                           
  8165                           ;scherm.c: 165:                 scherm2_buffer[position * 5 + i] = aurebech[character][i
      +                          ];
  8166     17BA  0828               	movf	load_buffer@character,w
  8167     17BB  00AC               	movwf	??_load_buffer
  8168     17BC  01AD               	clrf	??_load_buffer+1
  8169     17BD  082C               	movf	??_load_buffer,w
  8170     17BE  00A0               	movwf	___wmul@multiplier
  8171     17BF  082D               	movf	??_load_buffer+1,w
  8172     17C0  00A1               	movwf	___wmul@multiplier+1
  8173     17C1  3005               	movlw	5
  8174     17C2  00A2               	movwf	___wmul@multiplicand
  8175     17C3  3000               	movlw	0
  8176     17C4  00A3               	movwf	___wmul@multiplicand+1
  8177     17C5  160A  118A  2116  160A  118A  	fcall	___wmul
  8178     17CA  3012               	movlw	low (_aurebech| (0+32768))
  8179     17CB  1283               	bcf	3,5	;RP0=0, select bank0
  8180     17CC  1303               	bcf	3,6	;RP1=0, select bank0
  8181     17CD  00AE               	movwf	??_load_buffer+2
  8182     17CE  3081               	movlw	high (_aurebech| (0+32768))
  8183     17CF  00AF               	movwf	??_load_buffer+3
  8184     17D0  0820               	movf	?___wmul,w
  8185     17D1  072E               	addwf	??_load_buffer+2,w
  8186     17D2  00B0               	movwf	??_load_buffer+4
  8187     17D3  0821               	movf	?___wmul+1,w
  8188     17D4  1803               	skipnc
  8189     17D5  0A21               	incf	?___wmul+1,w
  8190     17D6  072F               	addwf	??_load_buffer+3,w
  8191     17D7  00B1               	movwf	??_load_buffer+5
  8192     17D8  084A               	movf	load_buffer@i_991,w
  8193     17D9  0730               	addwf	??_load_buffer+4,w
  8194     17DA  0084               	movwf	4
  8195     17DB  084B               	movf	load_buffer@i_991+1,w
  8196     17DC  1803               	skipnc
  8197     17DD  0A4B               	incf	load_buffer@i_991+1,w
  8198     17DE  0731               	addwf	??_load_buffer+5,w
  8199     17DF  00FF               	movwf	btemp+1
  8200     17E0  120A  118A  2100  160A  118A  	fcall	stringtab
  8201     17E5  00B2               	movwf	??_load_buffer+6
  8202     17E6  3005               	movlw	5
  8203     17E7  00A0               	movwf	___bmul@multiplicand
  8204     17E8  0829               	movf	load_buffer@position,w
  8205     17E9  160A  118A  2083  160A  118A  	fcall	___bmul
  8206     17EE  3E90               	addlw	(low (_scherm2_buffer| (0+256)))& (0+255)
  8207     17EF  1283               	bcf	3,5	;RP0=0, select bank0
  8208     17F0  1303               	bcf	3,6	;RP1=0, select bank0
  8209     17F1  074A               	addwf	load_buffer@i_991,w
  8210     17F2  00B3               	movwf	??_load_buffer+7
  8211     17F3  0833               	movf	??_load_buffer+7,w
  8212     17F4  0084               	movwf	4
  8213     17F5  0832               	movf	??_load_buffer+6,w
  8214     17F6  1783               	bsf	3,7	;select IRP bank3
  8215     17F7  0080               	movwf	0
  8216     17F8                     l1995:
  8217                           
  8218                           ;scherm.c: 166:             }
  8219     17F8  3001               	movlw	1
  8220     17F9  07CA               	addwf	load_buffer@i_991,f
  8221     17FA  1803               	skipnc
  8222     17FB  0ACB               	incf	load_buffer@i_991+1,f
  8223     17FC  3000               	movlw	0
  8224     17FD  07CB               	addwf	load_buffer@i_991+1,f
  8225     17FE  2F6C               	goto	l1989
  8226     17FF                     l511:
  8227     17FF  0008               	return
  8228     1800                     __end_of_load_buffer:
  8229                           
  8230                           	psect	text18
  8231     1116                     __ptext18:	
  8232 ;; *************** function ___wmul *****************
  8233 ;; Defined at:
  8234 ;;		line 15 in file "D:\cx8\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  multiplier      2    0[BANK0 ] unsigned int 
  8237 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  8238 ;; Auto vars:     Size  Location     Type
  8239 ;;  product         2    4[BANK0 ] unsigned int 
  8240 ;; Return value:  Size  Location     Type
  8241 ;;                  2    0[BANK0 ] unsigned int 
  8242 ;; Registers used:
  8243 ;;		wreg, status,2, status,0
  8244 ;; Tracked objects:
  8245 ;;		On entry : 0/0
  8246 ;;		On exit  : 0/0
  8247 ;;		Unchanged: 0/0
  8248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8249 ;;      Params:         0       4       0       0       0
  8250 ;;      Locals:         0       2       0       0       0
  8251 ;;      Temps:          0       0       0       0       0
  8252 ;;      Totals:         0       6       0       0       0
  8253 ;;Total ram usage:        6 bytes
  8254 ;; Hardware stack levels used: 1
  8255 ;; Hardware stack levels required when called: 3
  8256 ;; This function calls:
  8257 ;;		Nothing
  8258 ;; This function is called by:
  8259 ;;		_load_buffer
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263     1116                     ___wmul:	
  8264                           ;psect for function ___wmul
  8265                           
  8266     1116                     l1793:	
  8267                           ;incstack = 0
  8268                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  8269                           
  8270     1116  1283               	bcf	3,5	;RP0=0, select bank0
  8271     1117  1303               	bcf	3,6	;RP1=0, select bank0
  8272     1118  01A4               	clrf	___wmul@product
  8273     1119  01A5               	clrf	___wmul@product+1
  8274     111A                     l1795:
  8275     111A  1C20               	btfss	___wmul@multiplier,0
  8276     111B  291D               	goto	u931
  8277     111C  291E               	goto	u930
  8278     111D                     u931:
  8279     111D  2924               	goto	l631
  8280     111E                     u930:
  8281     111E                     l1797:
  8282     111E  0822               	movf	___wmul@multiplicand,w
  8283     111F  07A4               	addwf	___wmul@product,f
  8284     1120  1803               	skipnc
  8285     1121  0AA5               	incf	___wmul@product+1,f
  8286     1122  0823               	movf	___wmul@multiplicand+1,w
  8287     1123  07A5               	addwf	___wmul@product+1,f
  8288     1124                     l631:
  8289     1124  3001               	movlw	1
  8290     1125                     u945:
  8291     1125  1003               	clrc
  8292     1126  0DA2               	rlf	___wmul@multiplicand,f
  8293     1127  0DA3               	rlf	___wmul@multiplicand+1,f
  8294     1128  3EFF               	addlw	-1
  8295     1129  1D03               	skipz
  8296     112A  2925               	goto	u945
  8297     112B                     l1799:
  8298     112B  3001               	movlw	1
  8299     112C                     u955:
  8300     112C  1003               	clrc
  8301     112D  0CA1               	rrf	___wmul@multiplier+1,f
  8302     112E  0CA0               	rrf	___wmul@multiplier,f
  8303     112F  3EFF               	addlw	-1
  8304     1130  1D03               	skipz
  8305     1131  292C               	goto	u955
  8306     1132                     l1801:
  8307     1132  0820               	movf	___wmul@multiplier,w
  8308     1133  0421               	iorwf	___wmul@multiplier+1,w
  8309     1134  1D03               	btfss	3,2
  8310     1135  2937               	goto	u961
  8311     1136  2938               	goto	u960
  8312     1137                     u961:
  8313     1137  291A               	goto	l1795
  8314     1138                     u960:
  8315     1138                     l1803:
  8316     1138  0825               	movf	___wmul@product+1,w
  8317     1139  00A1               	movwf	?___wmul+1
  8318     113A  0824               	movf	___wmul@product,w
  8319     113B  00A0               	movwf	?___wmul
  8320     113C                     l633:
  8321     113C  0008               	return
  8322     113D                     __end_of___wmul:
  8323                           
  8324                           	psect	text19
  8325     1083                     __ptext19:	
  8326 ;; *************** function ___bmul *****************
  8327 ;; Defined at:
  8328 ;;		line 4 in file "D:\cx8\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8.c"
  8329 ;; Parameters:    Size  Location     Type
  8330 ;;  multiplier      1    wreg     unsigned char 
  8331 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  multiplier      1    2[BANK0 ] unsigned char 
  8334 ;;  product         1    1[BANK0 ] unsigned char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  1    wreg      unsigned char 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0, btemp+1
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8344 ;;      Params:         0       1       0       0       0
  8345 ;;      Locals:         0       2       0       0       0
  8346 ;;      Temps:          0       0       0       0       0
  8347 ;;      Totals:         0       3       0       0       0
  8348 ;;Total ram usage:        3 bytes
  8349 ;; Hardware stack levels used: 1
  8350 ;; Hardware stack levels required when called: 3
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_load_buffer
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358     1083                     ___bmul:	
  8359                           ;psect for function ___bmul
  8360                           
  8361                           
  8362                           ;incstack = 0
  8363                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  8364                           ;___bmul@multiplier stored from wreg
  8365     1083  1283               	bcf	3,5	;RP0=0, select bank0
  8366     1084  1303               	bcf	3,6	;RP1=0, select bank0
  8367     1085  00A2               	movwf	___bmul@multiplier
  8368     1086                     l1807:
  8369     1086  01A1               	clrf	___bmul@product
  8370     1087                     l1809:
  8371     1087  1C22               	btfss	___bmul@multiplier,0
  8372     1088  288A               	goto	u971
  8373     1089  288B               	goto	u970
  8374     108A                     u971:
  8375     108A  288F               	goto	l1813
  8376     108B                     u970:
  8377     108B                     l1811:
  8378     108B  0820               	movf	___bmul@multiplicand,w
  8379     108C  00FF               	movwf	btemp+1
  8380     108D  087F               	movf	btemp+1,w
  8381     108E  07A1               	addwf	___bmul@product,f
  8382     108F                     l1813:
  8383     108F  1003               	clrc
  8384     1090  0DA0               	rlf	___bmul@multiplicand,f
  8385     1091                     l1815:
  8386     1091  1003               	clrc
  8387     1092  0CA2               	rrf	___bmul@multiplier,f
  8388     1093                     l1817:
  8389     1093  0822               	movf	___bmul@multiplier,w
  8390     1094  1D03               	btfss	3,2
  8391     1095  2897               	goto	u981
  8392     1096  2898               	goto	u980
  8393     1097                     u981:
  8394     1097  2887               	goto	l1809
  8395     1098                     u980:
  8396     1098                     l1819:
  8397     1098  0821               	movf	___bmul@product,w
  8398     1099                     l657:
  8399     1099  0008               	return
  8400     109A                     __end_of___bmul:
  8401                           
  8402                           	psect	text20
  8403     00C9                     __ptext20:	
  8404 ;; *************** function _ISR *****************
  8405 ;; Defined at:
  8406 ;;		line 37 in file "main.c"
  8407 ;; Parameters:    Size  Location     Type
  8408 ;;		None
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;                  1    wreg      void 
  8413 ;; Registers used:
  8414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8420 ;;      Params:         0       0       0       0       0
  8421 ;;      Locals:         0       0       0       0       0
  8422 ;;      Temps:          4       0       0       0       0
  8423 ;;      Totals:         4       0       0       0       0
  8424 ;;Total ram usage:        4 bytes
  8425 ;; Hardware stack levels used: 1
  8426 ;; Hardware stack levels required when called: 2
  8427 ;; This function calls:
  8428 ;;		_adcHandeling
  8429 ;;		_remote_edge_handeling
  8430 ;;		_remote_timer_handeling
  8431 ;;		_rotaryHandeling
  8432 ;; This function is called by:
  8433 ;;		Interrupt level 1
  8434 ;; This function uses a non-reentrant model
  8435 ;;
  8436                           
  8437     00C9                     _ISR:	
  8438                           ;psect for function _ISR
  8439                           
  8440     00C9                     i1l2451:
  8441                           
  8442                           ;main.c: 38:     if (INTCONbits.INTF == 1) {
  8443     00C9  1C8B               	btfss	11,1	;volatile
  8444     00CA  28CC               	goto	u179_21
  8445     00CB  28CD               	goto	u179_20
  8446     00CC                     u179_21:
  8447     00CC  28D2               	goto	i1l2455
  8448     00CD                     u179_20:
  8449     00CD                     i1l2453:
  8450                           
  8451                           ;main.c: 39:         remote_edge_handeling();
  8452     00CD  160A  118A  204B  120A  118A  	fcall	_remote_edge_handeling
  8453     00D2                     i1l2455:
  8454                           
  8455                           ;main.c: 42:     if (PIR1bits.TMR1IF == 1) {
  8456     00D2  1283               	bcf	3,5	;RP0=0, select bank0
  8457     00D3  1303               	bcf	3,6	;RP1=0, select bank0
  8458     00D4  1C0C               	btfss	12,0	;volatile
  8459     00D5  28D7               	goto	u180_21
  8460     00D6  28D8               	goto	u180_20
  8461     00D7                     u180_21:
  8462     00D7  28DD               	goto	i1l2459
  8463     00D8                     u180_20:
  8464     00D8                     i1l2457:
  8465                           
  8466                           ;main.c: 43:         remote_timer_handeling();
  8467     00D8  160A  118A  2177  120A  118A  	fcall	_remote_timer_handeling
  8468     00DD                     i1l2459:
  8469                           
  8470                           ;main.c: 46:     if(PIR1bits.ADIF == 1){
  8471     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  8472     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  8473     00DF  1F0C               	btfss	12,6	;volatile
  8474     00E0  28E2               	goto	u181_21
  8475     00E1  28E3               	goto	u181_20
  8476     00E2                     u181_21:
  8477     00E2  28E8               	goto	i1l2463
  8478     00E3                     u181_20:
  8479     00E3                     i1l2461:
  8480                           
  8481                           ;main.c: 47:         adcHandeling();
  8482     00E3  120A  158A  24B6  120A  118A  	fcall	_adcHandeling
  8483     00E8                     i1l2463:
  8484                           
  8485                           ;main.c: 50:     if(INTCONbits.RBIF==1){
  8486     00E8  1C0B               	btfss	11,0	;volatile
  8487     00E9  28EB               	goto	u182_21
  8488     00EA  28EC               	goto	u182_20
  8489     00EB                     u182_21:
  8490     00EB  28F1               	goto	i1l252
  8491     00EC                     u182_20:
  8492     00EC                     i1l2465:
  8493                           
  8494                           ;main.c: 51:         rotaryHandeling();
  8495     00EC  120A  158A  23BE  120A  118A  	fcall	_rotaryHandeling
  8496     00F1                     i1l252:
  8497     00F1  087C               	movf	??_ISR+3,w
  8498     00F2  00FF               	movwf	btemp+1
  8499     00F3  087B               	movf	??_ISR+2,w
  8500     00F4  008A               	movwf	10
  8501     00F5  087A               	movf	??_ISR+1,w
  8502     00F6  0084               	movwf	4
  8503     00F7  0E79               	swapf	??_ISR,w
  8504     00F8  0083               	movwf	3
  8505     00F9  0EFE               	swapf	btemp,f
  8506     00FA  0E7E               	swapf	btemp,w
  8507     00FB  0009               	retfie
  8508     00FC                     __end_of_ISR:
  8509                           
  8510                           	psect	intentry
  8511     0004                     __pintentry:	
  8512                           ;incstack = 0
  8513                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8514                           
  8515     0004                     interrupt_function:
  8516     007E                     saved_w	set	btemp
  8517     0004  00FE               	movwf	btemp
  8518     0005  0E03               	swapf	3,w
  8519     0006  00F9               	movwf	??_ISR
  8520     0007  0804               	movf	4,w
  8521     0008  00FA               	movwf	??_ISR+1
  8522     0009  080A               	movf	10,w
  8523     000A  00FB               	movwf	??_ISR+2
  8524     000B  087F               	movf	btemp+1,w
  8525     000C  00FC               	movwf	??_ISR+3
  8526     000D  120A  118A  28C9   	ljmp	_ISR
  8527                           
  8528                           	psect	text21
  8529     0BBE                     __ptext21:	
  8530 ;; *************** function _rotaryHandeling *****************
  8531 ;; Defined at:
  8532 ;;		line 4 in file "rotary.c"
  8533 ;; Parameters:    Size  Location     Type
  8534 ;;		None
  8535 ;; Auto vars:     Size  Location     Type
  8536 ;;		None
  8537 ;; Return value:  Size  Location     Type
  8538 ;;                  1    wreg      void 
  8539 ;; Registers used:
  8540 ;;		wreg, status,2, status,0
  8541 ;; Tracked objects:
  8542 ;;		On entry : 0/0
  8543 ;;		On exit  : 0/0
  8544 ;;		Unchanged: 0/0
  8545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8546 ;;      Params:         0       0       0       0       0
  8547 ;;      Locals:         0       0       0       0       0
  8548 ;;      Temps:          3       0       0       0       0
  8549 ;;      Totals:         3       0       0       0       0
  8550 ;;Total ram usage:        3 bytes
  8551 ;; Hardware stack levels used: 1
  8552 ;; This function calls:
  8553 ;;		Nothing
  8554 ;; This function is called by:
  8555 ;;		_ISR
  8556 ;; This function uses a non-reentrant model
  8557 ;;
  8558                           
  8559     0BBE                     _rotaryHandeling:	
  8560                           ;psect for function _rotaryHandeling
  8561                           
  8562     0BBE                     i1l2383:	
  8563                           ;incstack = 0
  8564                           ; Regs used in _rotaryHandeling: [wreg+status,2+status,0]
  8565                           
  8566                           
  8567                           ;rotary.c: 5:     _delay((unsigned long)((1)*(500000/4000.0)));
  8568     0BBE  3029               	movlw	41
  8569     0BBF  00F0               	movwf	??_rotaryHandeling
  8570     0BC0                     u191_27:
  8571     0BC0  0BF0               	decfsz	??_rotaryHandeling,f
  8572     0BC1  2BC0               	goto	u191_27
  8573     0BC2  0000               	nop
  8574     0BC3                     i1l2385:
  8575                           
  8576                           ;rotary.c: 6:     state = (unsigned char) (PORTBbits.RB5 << 1 | PORTBbits.RB4);
  8577     0BC3  1283               	bcf	3,5	;RP0=0, select bank0
  8578     0BC4  1303               	bcf	3,6	;RP1=0, select bank0
  8579     0BC5  0E06               	swapf	6,w	;volatile
  8580     0BC6  3901               	andlw	1
  8581     0BC7  00F0               	movwf	??_rotaryHandeling
  8582     0BC8  0E06               	swapf	6,w	;volatile
  8583     0BC9  00F1               	movwf	??_rotaryHandeling+1
  8584     0BCA  0C71               	rrf	??_rotaryHandeling+1,w
  8585     0BCB  3901               	andlw	1
  8586     0BCC  00F2               	movwf	??_rotaryHandeling+2
  8587     0BCD  0772               	addwf	??_rotaryHandeling+2,w
  8588     0BCE  0470               	iorwf	??_rotaryHandeling,w
  8589     0BCF  00FD               	movwf	_state
  8590     0BD0                     i1l2387:
  8591                           
  8592                           ;rotary.c: 8:     if (oldstate != state) {
  8593     0BD0  086F               	movf	_oldstate,w
  8594     0BD1  067D               	xorwf	_state,w
  8595     0BD2  1903               	skipnz
  8596     0BD3  2BD5               	goto	u169_21
  8597     0BD4  2BD6               	goto	u169_20
  8598     0BD5                     u169_21:
  8599     0BD5  2C2F               	goto	i1l372
  8600     0BD6                     u169_20:
  8601     0BD6                     i1l2389:
  8602                           
  8603                           ;rotary.c: 9:         if (state == 0x1) {
  8604     0BD6  037D               	decf	_state,w
  8605     0BD7  1D03               	btfss	3,2
  8606     0BD8  2BDA               	goto	u170_21
  8607     0BD9  2BDB               	goto	u170_20
  8608     0BDA                     u170_21:
  8609     0BDA  2C03               	goto	i1l2403
  8610     0BDB                     u170_20:
  8611     0BDB                     i1l2391:
  8612                           
  8613                           ;rotary.c: 10:             miniCount--;
  8614     0BDB  30FF               	movlw	255
  8615     0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  8616     0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  8617     0BDE  07BE               	addwf	_miniCount^(0+128),f
  8618     0BDF  1803               	skipnc
  8619     0BE0  0ABF               	incf	(_miniCount+1)^(0+128),f
  8620     0BE1  30FF               	movlw	255
  8621     0BE2  07BF               	addwf	(_miniCount+1)^(0+128),f
  8622     0BE3                     i1l2393:
  8623                           
  8624                           ;rotary.c: 11:             if (miniCount == 0) {
  8625     0BE3  083E               	movf	_miniCount^(0+128),w
  8626     0BE4  043F               	iorwf	(_miniCount+1)^(0+128),w
  8627     0BE5  1D03               	btfss	3,2
  8628     0BE6  2BE8               	goto	u171_21
  8629     0BE7  2BE9               	goto	u171_20
  8630     0BE8                     u171_21:
  8631     0BE8  2C2F               	goto	i1l372
  8632     0BE9                     u171_20:
  8633     0BE9                     i1l2395:
  8634                           
  8635                           ;rotary.c: 12:                 miniCount = 2;
  8636     0BE9  3002               	movlw	2
  8637     0BEA  00BE               	movwf	_miniCount^(0+128)
  8638     0BEB  3000               	movlw	0
  8639     0BEC  00BF               	movwf	(_miniCount^(0+128)+1)
  8640     0BED                     i1l2397:
  8641                           
  8642                           ;rotary.c: 13:                 if (input != 1) {
  8643     0BED  0340               	decf	_input^(0+128),w
  8644     0BEE  0441               	iorwf	(_input+1)^(0+128),w
  8645     0BEF  1903               	btfsc	3,2
  8646     0BF0  2BF2               	goto	u172_21
  8647     0BF1  2BF3               	goto	u172_20
  8648     0BF2                     u172_21:
  8649     0BF2  2BFA               	goto	i1l2401
  8650     0BF3                     u172_20:
  8651     0BF3                     i1l2399:
  8652                           
  8653                           ;rotary.c: 14:                     input--;
  8654     0BF3  30FF               	movlw	255
  8655     0BF4  07C0               	addwf	_input^(0+128),f
  8656     0BF5  1803               	skipnc
  8657     0BF6  0AC1               	incf	(_input+1)^(0+128),f
  8658     0BF7  30FF               	movlw	255
  8659     0BF8  07C1               	addwf	(_input+1)^(0+128),f
  8660                           
  8661                           ;rotary.c: 15:                 } else {
  8662     0BF9  2BFE               	goto	i1l376
  8663     0BFA                     i1l2401:
  8664                           
  8665                           ;rotary.c: 16:                     input = 4;
  8666     0BFA  3004               	movlw	4
  8667     0BFB  00C0               	movwf	_input^(0+128)
  8668     0BFC  3000               	movlw	0
  8669     0BFD  00C1               	movwf	(_input^(0+128)+1)
  8670     0BFE                     i1l376:	
  8671                           ;rotary.c: 17:                 }
  8672                           
  8673                           
  8674                           ;rotary.c: 18:                 inputChanged = 1;
  8675     0BFE  3001               	movlw	1
  8676     0BFF  00BC               	movwf	_inputChanged^(0+128)
  8677     0C00  3000               	movlw	0
  8678     0C01  00BD               	movwf	(_inputChanged^(0+128)+1)
  8679     0C02  2C2F               	goto	i1l372
  8680     0C03                     i1l2403:
  8681     0C03  3002               	movlw	2
  8682     0C04  067D               	xorwf	_state,w
  8683     0C05  1D03               	btfss	3,2
  8684     0C06  2C08               	goto	u173_21
  8685     0C07  2C09               	goto	u173_20
  8686     0C08                     u173_21:
  8687     0C08  2C2F               	goto	i1l372
  8688     0C09                     u173_20:
  8689     0C09                     i1l2405:
  8690                           
  8691                           ;rotary.c: 21:             miniCount++;
  8692     0C09  3001               	movlw	1
  8693     0C0A  1683               	bsf	3,5	;RP0=1, select bank1
  8694     0C0B  1303               	bcf	3,6	;RP1=0, select bank1
  8695     0C0C  07BE               	addwf	_miniCount^(0+128),f
  8696     0C0D  1803               	skipnc
  8697     0C0E  0ABF               	incf	(_miniCount+1)^(0+128),f
  8698     0C0F  3000               	movlw	0
  8699     0C10  07BF               	addwf	(_miniCount+1)^(0+128),f
  8700     0C11                     i1l2407:
  8701                           
  8702                           ;rotary.c: 22:             if (miniCount == (2 * 2)) {
  8703     0C11  3004               	movlw	4
  8704     0C12  063E               	xorwf	_miniCount^(0+128),w
  8705     0C13  043F               	iorwf	(_miniCount+1)^(0+128),w
  8706     0C14  1D03               	btfss	3,2
  8707     0C15  2C17               	goto	u174_21
  8708     0C16  2C18               	goto	u174_20
  8709     0C17                     u174_21:
  8710     0C17  2C2F               	goto	i1l372
  8711     0C18                     u174_20:
  8712     0C18                     i1l2409:
  8713                           
  8714                           ;rotary.c: 23:                 miniCount = 2;
  8715     0C18  3002               	movlw	2
  8716     0C19  00BE               	movwf	_miniCount^(0+128)
  8717     0C1A  3000               	movlw	0
  8718     0C1B  00BF               	movwf	(_miniCount^(0+128)+1)
  8719     0C1C                     i1l2411:
  8720                           
  8721                           ;rotary.c: 24:                 if (input != 4) {
  8722     0C1C  3004               	movlw	4
  8723     0C1D  0640               	xorwf	_input^(0+128),w
  8724     0C1E  0441               	iorwf	(_input+1)^(0+128),w
  8725     0C1F  1903               	btfsc	3,2
  8726     0C20  2C22               	goto	u175_21
  8727     0C21  2C23               	goto	u175_20
  8728     0C22                     u175_21:
  8729     0C22  2C2A               	goto	i1l2415
  8730     0C23                     u175_20:
  8731     0C23                     i1l2413:
  8732                           
  8733                           ;rotary.c: 25:                     input++;
  8734     0C23  3001               	movlw	1
  8735     0C24  07C0               	addwf	_input^(0+128),f
  8736     0C25  1803               	skipnc
  8737     0C26  0AC1               	incf	(_input+1)^(0+128),f
  8738     0C27  3000               	movlw	0
  8739     0C28  07C1               	addwf	(_input+1)^(0+128),f
  8740                           
  8741                           ;rotary.c: 26:                 } else {
  8742     0C29  2BFE               	goto	i1l376
  8743     0C2A                     i1l2415:
  8744                           
  8745                           ;rotary.c: 27:                     input = 1;
  8746     0C2A  3001               	movlw	1
  8747     0C2B  00C0               	movwf	_input^(0+128)
  8748     0C2C  3000               	movlw	0
  8749     0C2D  00C1               	movwf	(_input^(0+128)+1)
  8750     0C2E  2BFE               	goto	i1l376
  8751     0C2F                     i1l372:	
  8752                           ;rotary.c: 32:     }
  8753                           
  8754                           
  8755                           ;rotary.c: 33:     oldstate = state;
  8756     0C2F  087D               	movf	_state,w
  8757     0C30  1283               	bcf	3,5	;RP0=0, select bank0
  8758     0C31  00EF               	movwf	_oldstate
  8759                           
  8760                           ;rotary.c: 34:     PORTB = PORTB;
  8761     0C32  0806               	movf	6,w	;volatile
  8762     0C33  0086               	movwf	6	;volatile
  8763     0C34                     i1l2417:
  8764                           
  8765                           ;rotary.c: 35:     INTCONbits.RBIF = 0;
  8766     0C34  100B               	bcf	11,0	;volatile
  8767     0C35                     i1l382:
  8768     0C35  0008               	return
  8769     0C36                     __end_of_rotaryHandeling:
  8770                           
  8771                           	psect	text22
  8772     1177                     __ptext22:	
  8773 ;; *************** function _remote_timer_handeling *****************
  8774 ;; Defined at:
  8775 ;;		line 10 in file "remote.c"
  8776 ;; Parameters:    Size  Location     Type
  8777 ;;		None
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      void 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8789 ;;      Params:         0       0       0       0       0
  8790 ;;      Locals:         0       0       0       0       0
  8791 ;;      Temps:          4       0       0       0       0
  8792 ;;      Totals:         4       0       0       0       0
  8793 ;;Total ram usage:        4 bytes
  8794 ;; Hardware stack levels used: 1
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_ISR
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802     1177                     _remote_timer_handeling:	
  8803                           ;psect for function _remote_timer_handeling
  8804                           
  8805     1177                     i1l2361:	
  8806                           ;incstack = 0
  8807                           ; Regs used in _remote_timer_handeling: [wreg+status,2+status,0]
  8808                           
  8809                           
  8810                           ;remote.c: 11:     if (timeraan == 1) {
  8811     1177  1683               	bsf	3,5	;RP0=1, select bank1
  8812     1178  1303               	bcf	3,6	;RP1=0, select bank1
  8813     1179  034D               	decf	_timeraan^(0+128),w
  8814     117A  044E               	iorwf	(_timeraan+1)^(0+128),w
  8815     117B  1D03               	btfss	3,2
  8816     117C  297E               	goto	u166_21
  8817     117D  297F               	goto	u166_20
  8818     117E                     u166_21:
  8819     117E  29BF               	goto	i1l2371
  8820     117F                     u166_20:
  8821     117F                     i1l2363:
  8822                           
  8823                           ;remote.c: 12:         final_code = final_code << 1;
  8824     117F  0845               	movf	_final_code^(0+128),w	;volatile
  8825     1180  00F0               	movwf	??_remote_timer_handeling
  8826     1181  0846               	movf	(_final_code+1)^(0+128),w	;volatile
  8827     1182  00F1               	movwf	??_remote_timer_handeling+1
  8828     1183  0847               	movf	(_final_code+2)^(0+128),w	;volatile
  8829     1184  00F2               	movwf	??_remote_timer_handeling+2
  8830     1185  0848               	movf	(_final_code+3)^(0+128),w	;volatile
  8831     1186  00F3               	movwf	??_remote_timer_handeling+3
  8832     1187  3001               	movlw	1
  8833     1188                     u167_25:
  8834     1188  1003               	clrc
  8835     1189  0DF0               	rlf	??_remote_timer_handeling,f
  8836     118A  0DF1               	rlf	??_remote_timer_handeling+1,f
  8837     118B  0DF2               	rlf	??_remote_timer_handeling+2,f
  8838     118C  0DF3               	rlf	??_remote_timer_handeling+3,f
  8839     118D                     u167_20:
  8840     118D  3EFF               	addlw	-1
  8841     118E  1D03               	skipz
  8842     118F  2988               	goto	u167_25
  8843     1190  0873               	movf	??_remote_timer_handeling+3,w
  8844     1191  00C8               	movwf	(_final_code+3)^(0+128)	;volatile
  8845     1192  0872               	movf	??_remote_timer_handeling+2,w
  8846     1193  00C7               	movwf	(_final_code+2)^(0+128)	;volatile
  8847     1194  0871               	movf	??_remote_timer_handeling+1,w
  8848     1195  00C6               	movwf	(_final_code+1)^(0+128)	;volatile
  8849     1196  0870               	movf	??_remote_timer_handeling,w
  8850     1197  00C5               	movwf	_final_code^(0+128)	;volatile
  8851     1198                     i1l2365:
  8852                           
  8853                           ;remote.c: 14:         if (PORTBbits.RB0 == 0) {
  8854     1198  1283               	bcf	3,5	;RP0=0, select bank0
  8855     1199  1303               	bcf	3,6	;RP1=0, select bank0
  8856     119A  1806               	btfsc	6,0	;volatile
  8857     119B  299D               	goto	u168_21
  8858     119C  299E               	goto	u168_20
  8859     119D                     u168_21:
  8860     119D  29B4               	goto	i1l307
  8861     119E                     u168_20:
  8862     119E                     i1l2367:
  8863                           
  8864                           ;remote.c: 15:             final_code = final_code | 0b0000000000000001;
  8865     119E  3001               	movlw	1
  8866     119F  1683               	bsf	3,5	;RP0=1, select bank1
  8867     11A0  1303               	bcf	3,6	;RP1=0, select bank1
  8868     11A1  0445               	iorwf	_final_code^(0+128),w	;volatile
  8869     11A2  00F0               	movwf	??_remote_timer_handeling
  8870     11A3  3000               	movlw	0
  8871     11A4  0446               	iorwf	(_final_code+1)^(0+128),w	;volatile
  8872     11A5  00F1               	movwf	??_remote_timer_handeling+1
  8873     11A6  3000               	movlw	0
  8874     11A7  0447               	iorwf	(_final_code+2)^(0+128),w	;volatile
  8875     11A8  00F2               	movwf	??_remote_timer_handeling+2
  8876     11A9  3000               	movlw	0
  8877     11AA  0448               	iorwf	(_final_code+3)^(0+128),w	;volatile
  8878     11AB  00F3               	movwf	??_remote_timer_handeling+3
  8879     11AC  0873               	movf	??_remote_timer_handeling+3,w
  8880     11AD  00C8               	movwf	(_final_code+3)^(0+128)	;volatile
  8881     11AE  0872               	movf	??_remote_timer_handeling+2,w
  8882     11AF  00C7               	movwf	(_final_code+2)^(0+128)	;volatile
  8883     11B0  0871               	movf	??_remote_timer_handeling+1,w
  8884     11B1  00C6               	movwf	(_final_code+1)^(0+128)	;volatile
  8885     11B2  0870               	movf	??_remote_timer_handeling,w
  8886     11B3  00C5               	movwf	_final_code^(0+128)	;volatile
  8887     11B4                     i1l307:	
  8888                           ;remote.c: 16:         }
  8889                           
  8890                           
  8891                           ;remote.c: 17:         remote_counter++;
  8892     11B4  3001               	movlw	1
  8893     11B5  1683               	bsf	3,5	;RP0=1, select bank1
  8894     11B6  1303               	bcf	3,6	;RP1=0, select bank1
  8895     11B7  07CB               	addwf	_remote_counter^(0+128),f	;volatile
  8896     11B8  1803               	skipnc
  8897     11B9  0ACC               	incf	(_remote_counter+1)^(0+128),f	;volatile
  8898     11BA  3000               	movlw	0
  8899     11BB  07CC               	addwf	(_remote_counter+1)^(0+128),f	;volatile
  8900     11BC                     i1l2369:
  8901                           
  8902                           ;remote.c: 18:         timeraan = 0;
  8903     11BC  01CD               	clrf	_timeraan^(0+128)
  8904     11BD  01CE               	clrf	(_timeraan+1)^(0+128)
  8905                           
  8906                           ;remote.c: 19:     } else {
  8907     11BE  29CE               	goto	i1l2381
  8908     11BF                     i1l2371:
  8909                           
  8910                           ;remote.c: 20:         remote_counter = 0;
  8911     11BF  01CB               	clrf	_remote_counter^(0+128)	;volatile
  8912     11C0  01CC               	clrf	(_remote_counter+1)^(0+128)	;volatile
  8913     11C1                     i1l2373:
  8914                           
  8915                           ;remote.c: 21:         final_code = 0;
  8916     11C1  3000               	movlw	0
  8917     11C2  00C8               	movwf	(_final_code+3)^(0+128)	;volatile
  8918     11C3  3000               	movlw	0
  8919     11C4  00C7               	movwf	(_final_code+2)^(0+128)	;volatile
  8920     11C5  3000               	movlw	0
  8921     11C6  00C6               	movwf	(_final_code+1)^(0+128)	;volatile
  8922     11C7  3000               	movlw	0
  8923     11C8  00C5               	movwf	_final_code^(0+128)	;volatile
  8924     11C9                     i1l2375:
  8925                           
  8926                           ;remote.c: 22:         T1CONbits.TMR1ON = 0;
  8927     11C9  1283               	bcf	3,5	;RP0=0, select bank0
  8928     11CA  1303               	bcf	3,6	;RP1=0, select bank0
  8929     11CB  1010               	bcf	16,0	;volatile
  8930     11CC                     i1l2377:
  8931                           
  8932                           ;remote.c: 23:         PORTCbits.RC0 = 1;
  8933     11CC  1407               	bsf	7,0	;volatile
  8934     11CD                     i1l2379:
  8935                           
  8936                           ;remote.c: 24:         PORTCbits.RC1 = 1;
  8937     11CD  1487               	bsf	7,1	;volatile
  8938     11CE                     i1l2381:
  8939                           
  8940                           ;remote.c: 26:     PIR1bits.TMR1IF = 0;
  8941     11CE  1283               	bcf	3,5	;RP0=0, select bank0
  8942     11CF  100C               	bcf	12,0	;volatile
  8943     11D0                     i1l309:
  8944     11D0  0008               	return
  8945     11D1                     __end_of_remote_timer_handeling:
  8946                           
  8947                           	psect	text23
  8948     104B                     __ptext23:	
  8949 ;; *************** function _remote_edge_handeling *****************
  8950 ;; Defined at:
  8951 ;;		line 3 in file "remote.c"
  8952 ;; Parameters:    Size  Location     Type
  8953 ;;		None
  8954 ;; Auto vars:     Size  Location     Type
  8955 ;;		None
  8956 ;; Return value:  Size  Location     Type
  8957 ;;                  1    wreg      void 
  8958 ;; Registers used:
  8959 ;;		wreg
  8960 ;; Tracked objects:
  8961 ;;		On entry : 0/0
  8962 ;;		On exit  : 0/0
  8963 ;;		Unchanged: 0/0
  8964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8965 ;;      Params:         0       0       0       0       0
  8966 ;;      Locals:         0       0       0       0       0
  8967 ;;      Temps:          0       0       0       0       0
  8968 ;;      Totals:         0       0       0       0       0
  8969 ;;Total ram usage:        0 bytes
  8970 ;; Hardware stack levels used: 1
  8971 ;; This function calls:
  8972 ;;		Nothing
  8973 ;; This function is called by:
  8974 ;;		_ISR
  8975 ;; This function uses a non-reentrant model
  8976 ;;
  8977                           
  8978     104B                     _remote_edge_handeling:	
  8979                           ;psect for function _remote_edge_handeling
  8980                           
  8981     104B                     i1l2355:	
  8982                           ;incstack = 0
  8983                           ; Regs used in _remote_edge_handeling: [wreg]
  8984                           
  8985                           
  8986                           ;remote.c: 4:     TMR1 = 65136;
  8987     104B  30FE               	movlw	254
  8988     104C  1283               	bcf	3,5	;RP0=0, select bank0
  8989     104D  1303               	bcf	3,6	;RP1=0, select bank0
  8990     104E  008F               	movwf	15	;volatile
  8991     104F  3070               	movlw	112
  8992     1050  008E               	movwf	14	;volatile
  8993                           
  8994                           ;remote.c: 5:     T1CONbits.TMR1ON = 1;
  8995     1051  1410               	bsf	16,0	;volatile
  8996     1052                     i1l2357:
  8997                           
  8998                           ;remote.c: 6:     timeraan = 1;
  8999     1052  3001               	movlw	1
  9000     1053  1683               	bsf	3,5	;RP0=1, select bank1
  9001     1054  1303               	bcf	3,6	;RP1=0, select bank1
  9002     1055  00CD               	movwf	_timeraan^(0+128)
  9003     1056  3000               	movlw	0
  9004     1057  00CE               	movwf	(_timeraan^(0+128)+1)
  9005     1058                     i1l2359:
  9006                           
  9007                           ;remote.c: 7:     INTCONbits.INTF = 0;
  9008     1058  108B               	bcf	11,1	;volatile
  9009     1059                     i1l303:
  9010     1059  0008               	return
  9011     105A                     __end_of_remote_edge_handeling:
  9012                           
  9013                           	psect	text24
  9014     0CB6                     __ptext24:	
  9015 ;; *************** function _adcHandeling *****************
  9016 ;; Defined at:
  9017 ;;		line 3 in file "adc.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;		None
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  adcValue        2    7[COMMON] int 
  9022 ;;  lowerValue      2    5[COMMON] int 
  9023 ;;  upperValue      2    3[COMMON] int 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9033 ;;      Params:         0       0       0       0       0
  9034 ;;      Locals:         6       0       0       0       0
  9035 ;;      Temps:          3       0       0       0       0
  9036 ;;      Totals:         9       0       0       0       0
  9037 ;;Total ram usage:        9 bytes
  9038 ;; Hardware stack levels used: 2
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_ISR
  9043 ;; This function uses a non-reentrant model
  9044 ;;
  9045                           
  9046     0CB6                     _adcHandeling:	
  9047                           ;psect for function _adcHandeling
  9048                           
  9049     0CB6                     i1l2051:	
  9050                           ;incstack = 0
  9051 ;; using string table level
  9052                           ; Regs used in _adcHandeling: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  9053                           
  9054                           
  9055                           ;adc.c: 4:     int adcValue = ADRESH << 8 | ADRESL;
  9056     0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  9057     0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  9058     0CB8  081E               	movf	30,w	;volatile
  9059     0CB9  00F8               	movwf	adcHandeling@adcValue+1
  9060     0CBA  1683               	bsf	3,5	;RP0=1, select bank1
  9061     0CBB  1303               	bcf	3,6	;RP1=0, select bank1
  9062     0CBC  081E               	movf	30,w	;volatile
  9063     0CBD  00F7               	movwf	adcHandeling@adcValue
  9064     0CBE                     i1l2053:
  9065                           
  9066                           ;adc.c: 5:     int upperValue = adcBounds[volume + 1] + 20;
  9067     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  9068     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  9069     0CC0  086D               	movf	_volume,w
  9070     0CC1  00F0               	movwf	??_adcHandeling
  9071     0CC2  0770               	addwf	??_adcHandeling,w
  9072     0CC3  3E14               	addlw	low ((_adcBounds| (0+32768)+2))
  9073     0CC4  0084               	movwf	4
  9074     0CC5  308B               	movlw	high ((_adcBounds| (0+32768)+2))
  9075     0CC6  1803               	skipnc
  9076     0CC7  3E01               	addlw	1
  9077     0CC8  00FF               	movwf	btemp+1
  9078     0CC9  120A  118A  2100  120A  158A  	fcall	stringtab
  9079     0CCE  00F1               	movwf	??_adcHandeling+1
  9080     0CCF  120A  118A  2100  120A  158A  	fcall	stringtab
  9081     0CD4  00F2               	movwf	??_adcHandeling+2
  9082     0CD5  0871               	movf	??_adcHandeling+1,w
  9083     0CD6  3E14               	addlw	20
  9084     0CD7  00F3               	movwf	adcHandeling@upperValue
  9085     0CD8  0872               	movf	??_adcHandeling+2,w
  9086     0CD9  1803               	skipnc
  9087     0CDA  3E01               	addlw	1
  9088     0CDB  3E00               	addlw	0
  9089     0CDC  00F4               	movwf	adcHandeling@upperValue+1
  9090     0CDD                     i1l2055:
  9091                           
  9092                           ;adc.c: 6:     int lowerValue = adcBounds[volume] - 20;
  9093     0CDD  086D               	movf	_volume,w
  9094     0CDE  00F0               	movwf	??_adcHandeling
  9095     0CDF  0770               	addwf	??_adcHandeling,w
  9096     0CE0  3E12               	addlw	low (_adcBounds| (0+32768))
  9097     0CE1  0084               	movwf	4
  9098     0CE2  308B               	movlw	high (_adcBounds| (0+32768))
  9099     0CE3  1803               	skipnc
  9100     0CE4  3E01               	addlw	1
  9101     0CE5  00FF               	movwf	btemp+1
  9102     0CE6  120A  118A  2100  120A  158A  	fcall	stringtab
  9103     0CEB  00F1               	movwf	??_adcHandeling+1
  9104     0CEC  120A  118A  2100  120A  158A  	fcall	stringtab
  9105     0CF1  00F2               	movwf	??_adcHandeling+2
  9106     0CF2  0871               	movf	??_adcHandeling+1,w
  9107     0CF3  3EEC               	addlw	236
  9108     0CF4  00F5               	movwf	adcHandeling@lowerValue
  9109     0CF5  0872               	movf	??_adcHandeling+2,w
  9110     0CF6  1803               	skipnc
  9111     0CF7  3E01               	addlw	1
  9112     0CF8  3EFF               	addlw	255
  9113     0CF9  00F6               	movwf	adcHandeling@lowerValue+1
  9114                           
  9115                           ;adc.c: 8:     if ( adcValue >= upperValue && volume != 40){
  9116     0CFA  0878               	movf	adcHandeling@adcValue+1,w
  9117     0CFB  3A80               	xorlw	128
  9118     0CFC  00F0               	movwf	??_adcHandeling
  9119     0CFD  0874               	movf	adcHandeling@upperValue+1,w
  9120     0CFE  3A80               	xorlw	128
  9121     0CFF  0270               	subwf	??_adcHandeling,w
  9122     0D00  1D03               	skipz
  9123     0D01  2D04               	goto	u131_25
  9124     0D02  0873               	movf	adcHandeling@upperValue,w
  9125     0D03  0277               	subwf	adcHandeling@adcValue,w
  9126     0D04                     u131_25:
  9127     0D04  1C03               	skipc
  9128     0D05  2D07               	goto	u131_21
  9129     0D06  2D08               	goto	u131_20
  9130     0D07                     u131_21:
  9131     0D07  2D18               	goto	i1l2061
  9132     0D08                     u131_20:
  9133     0D08                     i1l2057:
  9134     0D08  3028               	movlw	40
  9135     0D09  1283               	bcf	3,5	;RP0=0, select bank0
  9136     0D0A  1303               	bcf	3,6	;RP1=0, select bank0
  9137     0D0B  066D               	xorwf	_volume,w
  9138     0D0C  046E               	iorwf	_volume+1,w
  9139     0D0D  1903               	btfsc	3,2
  9140     0D0E  2D10               	goto	u132_21
  9141     0D0F  2D11               	goto	u132_20
  9142     0D10                     u132_21:
  9143     0D10  2D18               	goto	i1l2061
  9144     0D11                     u132_20:
  9145     0D11                     i1l2059:
  9146                           
  9147                           ;adc.c: 9:         volume++;
  9148     0D11  3001               	movlw	1
  9149     0D12  07ED               	addwf	_volume,f
  9150     0D13  1803               	skipnc
  9151     0D14  0AEE               	incf	_volume+1,f
  9152     0D15  3000               	movlw	0
  9153     0D16  07EE               	addwf	_volume+1,f
  9154                           
  9155                           ;adc.c: 10:     }
  9156     0D17  2D34               	goto	i1l2067
  9157     0D18                     i1l2061:
  9158     0D18  0876               	movf	adcHandeling@lowerValue+1,w
  9159     0D19  3A80               	xorlw	128
  9160     0D1A  00F0               	movwf	??_adcHandeling
  9161     0D1B  0878               	movf	adcHandeling@adcValue+1,w
  9162     0D1C  3A80               	xorlw	128
  9163     0D1D  0270               	subwf	??_adcHandeling,w
  9164     0D1E  1D03               	skipz
  9165     0D1F  2D22               	goto	u133_25
  9166     0D20  0877               	movf	adcHandeling@adcValue,w
  9167     0D21  0275               	subwf	adcHandeling@lowerValue,w
  9168     0D22                     u133_25:
  9169     0D22  1C03               	skipc
  9170     0D23  2D25               	goto	u133_21
  9171     0D24  2D26               	goto	u133_20
  9172     0D25                     u133_21:
  9173     0D25  2D34               	goto	i1l2067
  9174     0D26                     u133_20:
  9175     0D26                     i1l2063:
  9176     0D26  1283               	bcf	3,5	;RP0=0, select bank0
  9177     0D27  1303               	bcf	3,6	;RP1=0, select bank0
  9178     0D28  086D               	movf	_volume,w
  9179     0D29  046E               	iorwf	_volume+1,w
  9180     0D2A  1903               	btfsc	3,2
  9181     0D2B  2D2D               	goto	u134_21
  9182     0D2C  2D2E               	goto	u134_20
  9183     0D2D                     u134_21:
  9184     0D2D  2D34               	goto	i1l2067
  9185     0D2E                     u134_20:
  9186     0D2E                     i1l2065:
  9187                           
  9188                           ;adc.c: 12:         volume--;
  9189     0D2E  30FF               	movlw	255
  9190     0D2F  07ED               	addwf	_volume,f
  9191     0D30  1803               	skipnc
  9192     0D31  0AEE               	incf	_volume+1,f
  9193     0D32  30FF               	movlw	255
  9194     0D33  07EE               	addwf	_volume+1,f
  9195     0D34                     i1l2067:
  9196                           
  9197                           ;adc.c: 14:     PIR1bits.ADIF = 0;
  9198     0D34  1283               	bcf	3,5	;RP0=0, select bank0
  9199     0D35  1303               	bcf	3,6	;RP1=0, select bank0
  9200     0D36  130C               	bcf	12,6	;volatile
  9201     0D37                     i1l42:
  9202     0D37  0008               	return
  9203     0D38                     __end_of_adcHandeling:
  9204     007E                     btemp	set	126	;btemp
  9205     007E                     wtemp0	set	126
  9206                           
  9207                           	psect	config
  9208                           
  9209                           ;Config register CONFIG1 @ 0x2007
  9210                           ;	Oscillator Selection bits
  9211                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9212                           ;	Watchdog Timer Enable bit
  9213                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9214                           ;	Power-up Timer Enable bit
  9215                           ;	PWRTE = OFF, PWRT disabled
  9216                           ;	RE3/MCLR pin function select bit
  9217                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9218                           ;	Code Protection bit
  9219                           ;	CP = OFF, Program memory code protection is disabled
  9220                           ;	Data Code Protection bit
  9221                           ;	CPD = OFF, Data memory code protection is disabled
  9222                           ;	Brown Out Reset Selection bits
  9223                           ;	BOREN = ON, BOR enabled
  9224                           ;	Internal External Switchover bit
  9225                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9226                           ;	Fail-Safe Clock Monitor Enabled bit
  9227                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9228                           ;	Low Voltage Programming Enable bit
  9229                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9230                           ;	In-Circuit Debugger Mode bit
  9231                           ;	DEBUG = 0x1, unprogrammed default
  9232     2007                     	org	8199
  9233     2007  23D5               	dw	9173
  9234                           
  9235                           ;Config register CONFIG2 @ 0x2008
  9236                           ;	Brown-out Reset Selection bit
  9237                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  9238                           ;	Flash Program Memory Self Write Enable bits
  9239                           ;	WRT = OFF, Write protection off
  9240     2008                     	org	8200
  9241     2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    2648
    Data        37
    BSS         96
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     77      80
    BANK1            80      4      53
    BANK3            96      0      80
    BANK2            96      0       0

Pointer List with Targets:

    text_to_buffer@newtext	PTR unsigned char  size(1) Largest target is 8
		 -> scherm_setup@screen1(BANK0[8]), scherm_setup@screen2(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_adcHandeling

Critical Paths under _main in BANK0

    _main->_key_detection
    _volume_conversion->_load_buffer
    _send_buffer->_screen_transmit
    _scherm_init->_screen_transmit
    _key_detection->_scherm_setup
    _scherm_setup->_text_to_buffer
    _text_to_buffer->_load_buffer
    _input_conversion->_load_buffer
    _load_buffer->___wmul

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     1      4   38509
                                              0 BANK1      4     0      4
                   _input_conversion
                      _key_detection
                           _pic_init
                        _scherm_init
                       _scherm_setup
                        _send_buffer
                           _spi_init
                  _volume_conversion
 ---------------------------------------------------------------------------------
 (1) _volume_conversion                                    5     5      0    9607
                                             44 BANK0      5     5      0
                        _load_buffer
 ---------------------------------------------------------------------------------
 (1) _spi_init                                             4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _send_buffer                                          6     6      0     202
                                              1 BANK0      6     6      0
                    _screen_transmit
 ---------------------------------------------------------------------------------
 (1) _scherm_init                                          6     6      0     226
                                              1 BANK0      6     6      0
                    _screen_transmit
 ---------------------------------------------------------------------------------
 (2) _screen_transmit                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             0     0      0       0
                           _adc_init
                           _init_osc
                     _interrupt_init
                          _pins_init
                         _ports_init
                         _timer_init
 ---------------------------------------------------------------------------------
 (2) _timer_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ports_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pins_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _interrupt_init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_osc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key_detection                                        8     8      0    9590
                                             69 BANK0      8     8      0
                       _scherm_setup
 ---------------------------------------------------------------------------------
 (1) _scherm_setup                                        20    20      0    9406
                                             49 BANK0     20    20      0
                     _text_to_buffer
 ---------------------------------------------------------------------------------
 (2) _text_to_buffer                                       5     4      1    9358
                                             44 BANK0      5     4      1
                        _load_buffer
 ---------------------------------------------------------------------------------
 (1) _input_conversion                                     1     1      0    9095
                                             44 BANK0      1     1      0
                        _load_buffer
 ---------------------------------------------------------------------------------
 (2) _load_buffer                                         38    32      6    9072
                                              6 BANK0     38    32      6
                             ___bmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    4124
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               3     2      1     508
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  4     4      0      91
                                              9 COMMON     4     4      0
                       _adcHandeling
              _remote_edge_handeling
             _remote_timer_handeling
                    _rotaryHandeling
 ---------------------------------------------------------------------------------
 (7) _rotaryHandeling                                      3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (7) _remote_timer_handeling                               4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (7) _remote_edge_handeling                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _adcHandeling                                         9     9      0      91
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _input_conversion
     _load_buffer
       ___bmul
       ___wmul
   _key_detection
     _scherm_setup
       _text_to_buffer
         _load_buffer
   _pic_init
     _adc_init
     _init_osc
     _interrupt_init
     _pins_init
     _ports_init
     _timer_init
   _scherm_init
     _screen_transmit
   _scherm_setup
   _send_buffer
     _screen_transmit
   _spi_init
   _volume_conversion
     _load_buffer

 _ISR (ROOT)
   _adcHandeling
   _remote_edge_handeling
   _remote_timer_handeling
   _rotaryHandeling

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      50       9       83.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      4      35       7       66.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E3      12        0.0%
ABS                  0      0      E3       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Mar 27 12:42:42 2024

                             pc 0002                  ___bmul@product 0021                     _SSPSTATbits 0094  
                            l58 0E1A                              _GO 00F9          spi_init@mst_slv_oscdiv 0023  
                            fsr 0004             ___wmul@multiplicand 0022          __end_of_interrupt_init 1083  
                           l140 1039                             l143 103D                             l152 1082  
                           l321 0F19                             l137 10CF                             l322 0F4A  
                           l146 0B7E                             l323 0F7B                             l315 0E8E  
                           l155 102A                             l149 104A                             l158 10B0  
                           l511 17FF                             l327 0FFF                             l319 0EE2  
                           l440 0BBD                             l433 00C8                             l516 1176  
                           l541 1205                             l631 1124                             l463 12FB  
                           l633 113C                             l385 10F0                             l529 1022  
                           l457 1297                             l545 122B                             l657 1099  
                           _ISR 00C9                             u930 111E                             u931 111D  
                           u960 1138                             u961 1137                             u945 1125  
                           u970 108B                             u971 108A                             u955 112C  
                           u980 1098                             u981 1097                             u990 12A0  
                           u991 129F                             fsr0 0004                             indf 0000  
                          ?_ISR 0070                            l2011 1033                            l2005 1142  
                          l2013 1036                            l2021 0B7C                            l2007 1161  
                          l2015 1038                            l2023 0B7D                            l2031 1026  
                          l2103 0D97                            l2009 1169                            l2041 10AD  
                          l2033 109A                            l2025 103E                            l2017 0B6B  
                          l2105 0D9B                            l2043 0B7F                            l2035 10A0  
                          l2027 106D                            l2019 0B7A                            l2131 10B1  
                          l2211 0083                            l2123 0DCC                            l2115 0DA1  
                          l2045 0B96                            l2301 0FD8                            l2037 10A3  
                          l2029 1023                            l2133 10BB                            l2221 0090  
                          l2213 008A                            l2205 0068                            l2141 11DC  
                          l2125 0DEC                            l2117 0DAC                            l2109 0D9F  
                          l2311 10D0                            l2047 0B9E                            l2303 0FE0  
                          l2039 10AA                            l2135 10C0                            l2231 00AA  
                          l2223 0091                            l2215 008D                            l2207 006E  
                          l2151 120C                            l2143 11DD                            l2127 0DF4  
                          l2119 0DB2                            l2071 0D47                            l2313 10D7  
                          l2305 0FEF                            l2049 1020                            l2241 00C2  
                          l2233 00AB                            l2225 0092                            l2217 008E  
                          l2209 0076                            l2161 0048                            l2153 1213  
                          l2145 11E5                            l2137 11D4                            l2129 0E01  
                          l2081 0D5F                            l2073 0D4C                            l2307 0FF3  
                          l2251 0E37                            l2243 00C5                            l2235 00AC  
                          l2227 0098                            l2219 008F                            l2171 0050  
                          l2163 004A                            l2331 1258                            l2315 122F  
                          l2155 1217                            l2147 11F6                            l2139 11D9  
                          l2091 0D7C                            l2083 0D63                            l2075 0D4E  
                          l2309 0FFD                            l2261 0E7B                            l2253 0E40  
                          l2245 00C6                            l2237 00AD                            l2229 00A7  
                          l2181 0055                            l2173 0051                            l2165 004D  
                          l2333 125F                            l2325 1237                            l2317 1234  
                          l2157 1229                            l2149 11FD                            l2085 0D66  
                          l2077 0D4E                            l2069 0D38                            l2421 0C3B  
                          l2271 0ECA                            l2263 0E8A                            l2255 0E5C  
                          l2247 00C7                            l2239 00B3                            l2191 0062  
                          l2183 0056                            l2175 0052                            l2167 004E  
                          l2159 003E                            l2351 128D                            l2327 1243  
                          l2319 1235                            l2335 1263                            l2095 0D80  
                          l2087 0D69                            l2079 0D50                            l2431 0C5C  
                          l2423 0C48                            l1801 1132                            l2281 0F0F  
                          l2273 0ECF                            l2257 0E67                            l2265 0E94  
                          l2249 0E1B                            l2193 0063                            l2185 0057  
                          l2177 0053                            l2169 004F                            l2353 1294  
                          l2345 126C                            l2337 1269                            l2329 124B  
                          l2097 0D8F                            l2089 0D78                            l2441 0C85  
                          l2433 0C61                            l2425 0C48                            l1811 108B  
                          l1803 1138                            l2291 0F97                            l2283 0F35  
                          l2275 0EDE                            l2267 0EB0                            l2259 0E76  
                          l2195 0064                            l2187 005E                            l2179 0054  
                          l2347 1278                            l2339 126A                            l2099 0D93  
                          l2435 0C69                            l2443 0C89                            l2427 0C4E  
                          l2419 0C36                            l1813 108F                            l2293 0FA2  
                          l2285 0F40                            l2269 0EBB                            l2277 0EE8  
                          l2197 0065                            l2189 0061                            l2349 1280  
                          l2445 0C99                            l2437 0C6E                            l2429 0C53  
                          l1815 1091                            l1807 1086                            l1911 154A  
                          l1823 1298                            l2295 0FAC                            l2287 0F66  
                          l2279 0F04                            l2199 0066                            l2447 0CA4  
                          l2439 0C7F                            l1817 1093                            l1809 1087  
                          l1921 1558                            l1913 1551                            l1905 14B8  
                          l1841 1302                            l1833 12A7                            l1825 12A0  
                          l2297 0FB1                            l2289 0F71                            l2449 0CB0  
                          l1819 1098                            l1931 15B4                            l1923 1598  
                          l1915 1556                            l1907 1536                            l1851 134A  
                          l1835 12E7                            l1827 12A5                            l2299 0FCD  
                          l1941 1609                            l1925 159E                            l1909 153C  
                          l1861 1360                            l1853 1358                            l1837 12ED  
                          l1951 169D                            l1943 160F                            l1935 15C2  
                          l1927 15AC                            l1871 13FE                            l1863 13DE  
                          l1855 135E                            l1847 1304                            l1839 12FC  
                          l1793 1116                            l1961 16B2                            l1945 1611  
                          l1937 1602                            l1929 15B2                            l1881 1446  
                          l1865 13E4                            l1849 1344                            l1795 111A  
                          l1971 1707                            l1955 16A4                            l1891 145C  
                          l1883 1454                            l1867 13F2                            l1797 111E  
                          l1981 175D                            l1973 170D                            l1965 16C0  
                          l1957 16AB                            l1949 161F                            l1893 149C  
                          l1885 145A                            l1877 1400                            l1869 13F9  
                          l1799 112B                            l1975 170F                            l1967 1700  
                          l1959 16B0                            l1895 14A2                            l1879 1440  
                          l1993 177A                            l1985 1764                            l1897 14B0  
                          l1995 17F8                            l1987 176A                            l1979 171D  
                          l1899 14B6                            l1989 176C                            l1999 1140  
                _text_to_buffer 113D                            u1000 12A5                            u1001 12A4  
                          u1010 12FA                            u1011 12F9                            u1100 14AF  
                          u1020 1302                            u1101 14AE                            u1021 1301  
                          u1110 14B6                            u1030 1357                            u1111 14B5  
                          u1031 1356                            u1015 12F6                            u1200 16AB  
                          u1120 1549                            u1040 135E                            u1201 16AA  
                          u1121 1548                            u1105 14AB                            u1041 135D  
                          u1210 16B0                            u1130 1551                            u1050 13F1  
                          u1211 16AF                            u1131 1550                            u1051 13F0  
                          u1035 1353                            u1220 16BF                            u1140 1556  
                          u1060 13F9                            u1300 0BA8                            u1221 16BE  
                          u1141 1555                            u1125 1545                            u1061 13F8  
                          u1230 170D                            u1150 15AB                            u1070 13FE  
                          u1231 170C                            u1151 15AA                            u1071 13FD  
                          u1055 13ED                            u1240 171C                            u1160 15B2  
                          u1080 1453                            u1400 0DB2                            u1241 171B  
                          u1225 16BB                            u1161 15B1                            u1081 1452  
                          u1401 0DB1                            u1250 176A                            u1170 15C1  
                          u1090 145A                            u1410 0E01                            u1251 1769  
                          u1171 15C0                            u1155 15A7                            u1091 1459  
                          u1411 0E00                            u1260 1779                            u1180 160F  
                          u1500 0E67                            u1420 11E5                            u1261 1778  
                          u1245 1718                            u1181 160E                            u1085 144F  
                          u1501 0E66                            u1421 11E4                            u1190 161E  
                          u1270 1176                            u1510 0E76                            u1430 11F2  
                          u1350 0D47                            u1191 161D                            u1175 15BD  
                          u1271 1175                            u1511 0E75                            u1431 11EE  
                          u1415 0DFD                            u1351 0D46                            u1600 0FD8  
                          u1520 0E8A                            u1280 103D                            u1360 0D5F  
                          u1265 1775                            u1601 0FD7                            u1521 0E89  
                          u1281 103C                            u1361 0D5E                            u1290 0B89  
                          u1610 0FEF                            u1530 0EBB                            u1450 1213  
                          u1370 0D78                            u1195 161A                            u1275 1172  
                          u1611 0FEE                            u1531 0EBA                            u1515 0E72  
                          u1451 1212                            u1371 0D77                            u1355 0D43  
                          u1540 0ECA                            u1620 1234                            u1460 1217  
                          u1444 11F5                            u1380 0D8F                            u1541 0EC9  
                          u1525 0E86                            u1621 1233                            u1461 1216  
                          u1381 0D8E                            u1365 0D5B                            u1550 0EDE  
                          u1470 0048                            u1630 1258                            u1390 0DAC  
                          u1615 0FEB                            u1551 0EDD                            u1471 0047  
                          u1631 1257                            u1391 0DAB                            u1375 0D74  
                          u1560 0F0F                            u1480 0083                            u1640 1269  
                          u1561 0F0E                            u1545 0EC6                            u1481 0082  
                          u1641 1268                            u1385 0D8B                            u1570 0F40  
                          u1490 0E40                            u1650 128D                            u1571 0F3F  
                          u1555 0EDA                            u1491 0E3F                            u1651 128C  
                          u1635 1254                            u1580 0F71                            u1581 0F70  
                          u1485 007F                            u1590 0FA2                            u1591 0FA1  
                          u1655 1289                            u1760 0C5C                            u1761 0C5B  
                          u1770 0C69                            u1907 00BF                            u1771 0C68  
                          u1780 0C99                            u1781 0C98                            u1857 125C  
                          u1785 0C95                            u1867 1291                            u1877 005B  
                          u1887 0087                            u1897 00A4                            i1l42 0D37  
                          _TMR1 000E                            _main 0C36                            btemp 007E  
                          start 0010               ___bmul@multiplier 0022                           ??_ISR 0079  
              send_buffer@i_974 0025             spi_init@sdo_tx_edge 0022                    ?_load_buffer 0026  
             _volume_conversion 0D38                           ?_main 00D1                 ?_interrupt_init 0070  
                         _ANSEL 0188                           i1l303 1059                           i1l307 11B4  
                         i1l252 00F1                           i1l309 11D0                           i1l372 0C2F  
                         i1l382 0C35                           i1l376 0BFE              ?_volume_conversion 0070  
                         _PORTA 0005                           _PORTB 0006                           _PORTC 0007  
                         _PORTD 0008                           _PORTE 0009                           _TRISA 0085  
                         _TRISB 0086                           _TRISC 0087                           _TRISD 0088  
                         _TRISE 0089          __end_of_text_to_buffer 1177                           _ascii 0892  
                         _input 00C0             ??_volume_conversion 004C                           _state 007D  
                         pclath 000A                           status 0003                           wtemp0 007E  
         _remote_edge_handeling 104B                 __initialization 0013                    __end_of_main 0CB6  
     __end_of_volume_conversion 0E1B                    ?_scherm_init 0070                          ??_main 006D  
          text_to_buffer@scherm 004E               send_buffer@scherm 0022                 ?_text_to_buffer 004C  
                  ?_send_buffer 0070                          _ADRESH 001E                          _ADRESL 009E  
           load_buffer@position 0029                          _ANSELH 0189                __end_of_adc_init 10B1  
                        i1l2051 0CB6                          i1l2061 0D18                          i1l2053 0CBE  
                        i1l2063 0D26                          i1l2055 0CDD                          i1l2065 0D2E  
                        i1l2057 0D08                          i1l2401 0BFA                          i1l2067 0D34  
                        i1l2059 0D11                          i1l2411 0C1C                          i1l2403 0C03  
                        i1l2413 0C23                          i1l2405 0C09                          i1l2415 0C2A  
                        i1l2407 0C11                          i1l2361 1177                          i1l2417 0C34  
                        i1l2409 0C18                          i1l2355 104B                          i1l2363 117F  
                        i1l2371 11BF                          i1l2451 00C9                          i1l2357 1052  
                        i1l2373 11C1                          i1l2381 11CE                          i1l2365 1198  
                        i1l2461 00E3                          i1l2453 00CD                          i1l2359 1058  
                        i1l2375 11C9                          i1l2367 119E                          i1l2391 0BDB  
                        i1l2383 0BBE                          i1l2463 00E8                          i1l2455 00D2  
                        i1l2377 11CC                          i1l2369 11BC                          i1l2393 0BE3  
                        i1l2385 0BC3                          i1l2465 00EC                          i1l2457 00D8  
                        i1l2379 11CD                          i1l2395 0BE9                          i1l2387 0BD0  
                        i1l2459 00DD                          i1l2397 0BED                          i1l2389 0BD6  
                        i1l2399 0BF3                          u131_20 0D08                          u131_21 0D07  
                        u131_25 0D04                          u132_20 0D11                          u132_21 0D10  
                        u133_20 0D26                          u133_21 0D25                          u133_25 0D22  
                        u134_20 0D2E                          u134_21 0D2D                          u170_20 0BDB  
                        u170_21 0BDA                          u171_20 0BE9                          u171_21 0BE8  
                        u172_20 0BF3                          u180_20 00D8                          u172_21 0BF2  
                        u180_21 00D7                          u173_20 0C09                          u181_20 00E3  
                        u173_21 0C08                          u181_21 00E2                          u166_20 117F  
                        u174_20 0C18                          u182_20 00EC                          u166_21 117E  
                        u174_21 0C17                          u182_21 00EB                          u167_20 118D  
                        u175_20 0C23                          u175_21 0C22                          u167_25 1188  
                        u191_27 0BC0                          u168_20 119E                          u168_21 119D  
                        u169_20 0BD6                          u169_21 0BD5                          u179_20 00CD  
                        u179_21 00CC                          _SSPBUF 0013                 _rotaryHandeling 0BBE  
               load_buffer@lang 0026                          ___bmul 1083                __end_of_aurebech 0392  
                        ___wmul 1116                          _arabic 0612                          _hebrew 0392  
              __end_of_init_osc 103E                __end_of_pic_init 10D0                          _volume 006D  
      __end_of_input_conversion 10F1                          saved_w 007E                __end_of_spi_init 122C  
                 _key_detection 0E1B         __end_of__initialization 0037                 text_to_buffer@i 004F  
        ?_remote_edge_handeling 0070            load_buffer@character 0028             ___bmul@multiplicand 0020  
        scherm_setup_lang@F1475 00B6          scherm_setup_lang@F1477 00B0                  __pcstackCOMMON 0070  
                  __pidataBANK1 10F1                   __end_of_ascii 0B12        scherm_init@controlWord_0 0026  
      scherm_init@controlWord_1 0025                  _OPTION_REGbits 0081                   ?_scherm_setup 0070  
       __end_of_rotaryHandeling 0C36                      __pbssBANK0 006D                      __pbssBANK1 00C5  
                    __pbssBANK3 0190                  ?_key_detection 0070         volume_conversion@buffer 004C  
         text_to_buffer@newtext 004C                      __pmaintext 0C36                         ?___bmul 0020  
                       ?___wmul 0020                ??_interrupt_init 0020                      __pintentry 0004  
             __end_of_adcBounds 0B66                       ?_adc_init 0070                      _final_code 00C5  
        key_detection@temp_code 0069                  ??_scherm_setup 0051                      __stringtab 0100  
              load_buffer@i_981 0036                load_buffer@i_982 0044                load_buffer@i_990 0042  
              load_buffer@i_991 004A                load_buffer@i_983 0038                load_buffer@i_984 003A  
              load_buffer@i_985 0046                load_buffer@i_986 003C                load_buffer@i_987 003E  
              load_buffer@i_988 0048                load_buffer@i_989 0040                       ?_init_osc 0070  
                     ?_pic_init 0070                    load_buffer@i 0034                       ?_spi_init 0020  
                _remote_counter 00CB                       _ANSELbits 0188                      ??_adc_init 0020  
                       __ptext1 0D38                         __ptext2 11D1                         __ptext3 122C  
                       __ptext4 003B                         __ptext5 101D                         __ptext6 10B1  
                       __ptext7 1023                         __ptext8 0B6B                         __ptext9 103E  
              ??_text_to_buffer 004D                       _T1CONbits 0010               ??_screen_transmit 0020  
      ??_remote_timer_handeling 0070               __end_of_inputLeds 0B6A                 ??_key_detection 0065  
        adcHandeling@lowerValue 0075                         clrloop0 102C            end_of_initialization 0037  
              ?_rotaryHandeling 0070               __end_of_pins_init 104B                      ??_init_osc 0020  
                    ??_pic_init 0020                      ??_spi_init 0023                    __pstringtext 0100  
                    _timer_init 1023                       _PORTBbits 0006                       _PORTCbits 0007  
                     _PORTDbits 0008               ?_input_conversion 0070                       _TRISBbits 0086  
                     _TRISCbits 0087                       _TRISEbits 0089              ??_input_conversion 004C  
                    _ports_init 0B6B          adcHandeling@upperValue 0073                   ?_adcHandeling 0070  
       ??_remote_edge_handeling 0070              spi_init@sdi_rx_smp 0020            __end_of_scherm_setup 0BBE  
                __end_of___bmul 109A                  __end_of___wmul 113D                  __end_of_arabic 0892  
                __end_of_hebrew 0612             start_initialization 0013                     __end_of_ISR 00FC  
                ??_adcHandeling 0070                        ??___bmul 0021                        ??___wmul 0024  
           scherm_setup@screen1 005D             scherm_setup@screen2 0055                      init_fetch0 105A  
                   __pdataBANK1 00A0                   ??_load_buffer 002C                     ?_timer_init 0070  
                     _adcBounds 0B12                     __pbssCOMMON 007D                       ___latbits 0002  
                 __pcstackBANK0 0020                   __pcstackBANK1 00D1           scherm_init@helderheid 0024  
                   ?_ports_init 0070              key_detection@check 0065          _remote_timer_handeling 1177  
        volume_conversion@value 0050                 _screen_transmit 101D        input_conversion@inputNew 004C  
                  scherm_init@i 0022                   ??_scherm_init 0021             __end_of_load_buffer 1800  
                 ??_send_buffer 0021                       _miniCount 00BE                       _inputLeds 0B66  
                  _inputChanged 00BC               spi_init@clock_pol 0021               interrupt_function 0004  
                ___wmul@product 0024                        _IOCBbits 0096                       clear_ram0 102B  
                      _PIE1bits 008C                       _pins_init 103E                        _PIR1bits 000C  
          __end_of_adcHandeling 0D38                      _ADCON0bits 001F                     __stringbase 0112  
                    _ADCON1bits 009F               ___wmul@multiplier 0020                    send_buffer@i 0023  
           __end_of_scherm_init 00C9                       _volumeOud 00C2                    _scherm_setup 0B7F  
         __end_of_key_detection 1000         __end_of_screen_transmit 1023   __end_of_remote_edge_handeling 105A  
           __end_of_send_buffer 1298               load_buffer@scherm 002B                      ?_pins_init 0070  
          adcHandeling@adcValue 0077                     _load_buffer 1298              __end_of__stringtab 0112  
                      _adc_init 109A                        __ptext10 106D                        __ptext11 1033  
                      __ptext20 00C9                        __ptext12 109A                        __ptext21 0BBE  
                      __ptext13 0E1B                        __ptext22 1177                        __ptext14 0B7F  
                      __ptext23 104B                        __ptext15 113D                        __ptext24 0CB6  
                      __ptext16 10D0                        __ptext17 1298                        __ptext18 1116  
                      __ptext19 1083                screen_transmit@c 0020                        _aurebech 0112  
                      _init_osc 1033                        _pic_init 10B1                        _oldstate 006F  
                      _motoraan 00C9                        _timeraan 00CD                        _spi_init 11D1  
             scherm_setup@F1470 00A8               scherm_setup@F1472 00A0                        main@argc 00D1  
                      main@argv 00D3                    ??_timer_init 0020                     _scherm_init 003B  
                    _INTCONbits 000B                        init_ram0 105E                    ??_ports_init 0020  
                   _send_buffer 122C                        intlevel1 0000         ?_remote_timer_handeling 0070  
              ?_screen_transmit 0070              __end_of_timer_init 102B                       stringcode 010A  
                   ??_pins_init 0020                      _OSCCONbits 008F              __end_of_ports_init 0B7F  
             ??_rotaryHandeling 0070                    _nummerOffset 00C4                     _num_of_lang 00CF  
                _interrupt_init 106D                     _PSTRCONbits 009D                        stringtab 0100  
__end_of_remote_timer_handeling 11D1                  _scherm1_buffer 01B8              volume_conversion@i 004E  
                _scherm2_buffer 0190                    _adcHandeling 0CB6                _input_conversion 10D0  
                    _SSPCONbits 0014  
